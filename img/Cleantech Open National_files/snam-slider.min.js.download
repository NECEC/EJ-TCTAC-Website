(()=>{var __webpack_modules__={564:module=>{eval('function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator, module.exports.__esModule = true, module.exports["default"] = module.exports;\n\n//# sourceURL=webpack://@skipsolabs/snam-slider/./node_modules/@babel/runtime/helpers/asyncToGenerator.js?')},837:module=>{eval('function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty, module.exports.__esModule = true, module.exports["default"] = module.exports;\n\n//# sourceURL=webpack://@skipsolabs/snam-slider/./node_modules/@babel/runtime/helpers/defineProperty.js?')},424:module=>{eval('function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    "default": obj\n  };\n}\n\nmodule.exports = _interopRequireDefault, module.exports.__esModule = true, module.exports["default"] = module.exports;\n\n//# sourceURL=webpack://@skipsolabs/snam-slider/./node_modules/@babel/runtime/helpers/interopRequireDefault.js?')},264:(module,__unused_webpack_exports,__webpack_require__)=>{eval("module.exports = __webpack_require__(588);\n\n//# sourceURL=webpack://@skipsolabs/snam-slider/./node_modules/@babel/runtime/regenerator/index.js?")},705:module=>{"use strict";eval('\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\n// eslint-disable-next-line func-names\n\nmodule.exports = function (cssWithMappingToString) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item);\n\n      if (item[2]) {\n        return "@media ".concat(item[2], " {").concat(content, "}");\n      }\n\n      return content;\n    }).join("");\n  }; // import a list of modules into the list\n  // eslint-disable-next-line func-names\n\n\n  list.i = function (modules, mediaQuery, dedupe) {\n    if (typeof modules === "string") {\n      // eslint-disable-next-line no-param-reassign\n      modules = [[null, modules, ""]];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var i = 0; i < this.length; i++) {\n        // eslint-disable-next-line prefer-destructuring\n        var id = this[i][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _i = 0; _i < modules.length; _i++) {\n      var item = [].concat(modules[_i]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      if (mediaQuery) {\n        if (!item[2]) {\n          item[2] = mediaQuery;\n        } else {\n          item[2] = "".concat(mediaQuery, " and ").concat(item[2]);\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};\n\n//# sourceURL=webpack://@skipsolabs/snam-slider/./node_modules/css-loader/dist/runtime/api.js?')},588:module=>{eval('/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar runtime = function (exports) {\n  "use strict";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n\n  var $Symbol = typeof Symbol === "function" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || "@@iterator";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";\n  var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, "");\n  } catch (err) {\n    define = function (obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []); // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n    return generator;\n  }\n\n  exports.wrap = wrap; // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there\'s no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don\'t have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: "normal",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: "throw",\n        arg: err\n      };\n    }\n  }\n\n  var GenStateSuspendedStart = "suspendedStart";\n  var GenStateSuspendedYield = "suspendedYield";\n  var GenStateExecuting = "executing";\n  var GenStateCompleted = "completed"; // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n\n  var ContinueSentinel = {}; // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n\n  function Generator() {}\n\n  function GeneratorFunction() {}\n\n  function GeneratorFunctionPrototype() {} // This is a polyfill for %IteratorPrototype% for environments that\n  // don\'t natively support it.\n\n\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n\n  if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, "constructor", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, "constructor", GeneratorFunction);\n  GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"); // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n\n  function defineIteratorMethods(prototype) {\n    ["next", "throw", "return"].forEach(function (method) {\n      define(prototype, method, function (arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function (genFun) {\n    var ctor = typeof genFun === "function" && genFun.constructor;\n    return ctor ? ctor === GeneratorFunction || // For the native GeneratorFunction constructor, the best we can\n    // do is to check its .name property.\n    (ctor.displayName || ctor.name) === "GeneratorFunction" : false;\n  };\n\n  exports.mark = function (genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, "GeneratorFunction");\n    }\n\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  }; // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, "__await")` to determine if the yielded value is\n  // meant to be awaited.\n\n\n  exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n\n      if (record.type === "throw") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n\n        if (value && typeof value === "object" && hasOwn.call(value, "__await")) {\n          return PromiseImpl.resolve(value.__await).then(function (value) {\n            invoke("next", value, resolve, reject);\n          }, function (err) {\n            invoke("throw", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function (unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function (error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke("throw", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function (resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise = // If enqueue has been called before, then we want to wait until\n      // all previous Promises have been resolved before calling invoke,\n      // so that results are always delivered in the correct order. If\n      // enqueue has not been called before, then it is important to\n      // call invoke immediately, without waiting on a callback to fire,\n      // so that the async generator function has the opportunity to do\n      // any necessary setup in a predictable way. This predictability\n      // is why the Promise constructor synchronously invokes its\n      // executor callback, and why async functions synchronously\n      // execute code before the first await. Since we implement simple\n      // async functions in terms of async generators, it is especially\n      // important to get this right, even though it requires care.\n      previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, // Avoid propagating failures to Promises returned by later\n      // invocations of the iterator.\n      callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n    } // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n\n\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator; // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n\n  exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter // If outerFn is a generator, return the full iterator.\n    : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error("Generator is already running");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === "throw") {\n          throw arg;\n        } // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n\n\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === "next") {\n          // Setting context._sent for legacy support of Babel\'s\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n        } else if (context.method === "throw") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n        } else if (context.method === "return") {\n          context.abrupt("return", context.arg);\n        }\n\n        state = GenStateExecuting;\n        var record = tryCatch(innerFn, self, context);\n\n        if (record.type === "normal") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done ? GenStateCompleted : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n        } else if (record.type === "throw") {\n          state = GenStateCompleted; // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n\n          context.method = "throw";\n          context.arg = record.arg;\n        }\n      }\n    };\n  } // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n\n\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === "throw") {\n        // Note: ["return"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator["return"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = "return";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === "throw") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // "return" to "throw", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = "throw";\n        context.arg = new TypeError("The iterator does not provide a \'throw\' method");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === "throw") {\n      context.method = "throw";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (!info) {\n      context.method = "throw";\n      context.arg = new TypeError("iterator result is not an object");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value; // Resume execution at the desired location (see delegateYield).\n\n      context.next = delegate.nextLoc; // If context.method was "throw" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was "next", forget context.arg since it has been\n      // "consumed" by the delegate iterator. If context.method was\n      // "return", allow the original .return call to continue in the\n      // outer generator.\n\n      if (context.method !== "return") {\n        context.method = "next";\n        context.arg = undefined;\n      }\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    } // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n\n\n    context.delegate = null;\n    return ContinueSentinel;\n  } // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n\n\n  defineIteratorMethods(Gp);\n  define(Gp, toStringTagSymbol, "Generator"); // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers\' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn\'t happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n\n  define(Gp, iteratorSymbol, function () {\n    return this;\n  });\n  define(Gp, "toString", function () {\n    return "[object Generator]";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = "normal";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{\n      tryLoc: "root"\n    }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function (object) {\n    var keys = [];\n\n    for (var key in object) {\n      keys.push(key);\n    }\n\n    keys.reverse(); // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      } // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n\n\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === "function") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n            next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n          return next;\n        };\n\n        return next.next = next;\n      }\n    } // Return an iterator with no values.\n\n\n    return {\n      next: doneResult\n    };\n  }\n\n  exports.values = values;\n\n  function doneResult() {\n    return {\n      value: undefined,\n      done: true\n    };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n    reset: function (skipTempReset) {\n      this.prev = 0;\n      this.next = 0; // Resetting context._sent for legacy support of Babel\'s\n      // function.sent implementation.\n\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n      this.method = "next";\n      this.arg = undefined;\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === "t" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n    stop: function () {\n      this.done = true;\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n\n      if (rootRecord.type === "throw") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n    dispatchException: function (exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n\n      function handle(loc, caught) {\n        record.type = "throw";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = "next";\n          context.arg = undefined;\n        }\n\n        return !!caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === "root") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle("end");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, "catchLoc");\n          var hasFinally = hasOwn.call(entry, "finallyLoc");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n          } else {\n            throw new Error("try statement without catch or finally");\n          }\n        }\n      }\n    },\n    abrupt: function (type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry && (type === "break" || type === "continue") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = "next";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n    complete: function (record, afterLoc) {\n      if (record.type === "throw") {\n        throw record.arg;\n      }\n\n      if (record.type === "break" || record.type === "continue") {\n        this.next = record.arg;\n      } else if (record.type === "return") {\n        this.rval = this.arg = record.arg;\n        this.method = "return";\n        this.next = "end";\n      } else if (record.type === "normal" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n    finish: function (finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n    "catch": function (tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n\n          if (record.type === "throw") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n\n          return thrown;\n        }\n      } // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n\n\n      throw new Error("illegal catch attempt");\n    },\n    delegateYield: function (iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === "next") {\n        // Deliberately forget the last sent value so that we don\'t\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  }; // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n\n  return exports;\n}( // If this script is executing as a CommonJS module, use module.exports\n// as the regeneratorRuntime namespace. Otherwise create a new empty\n// object. Either way, the resulting object will be used to initialize\n// the regeneratorRuntime variable at the top of this file.\n true ? module.exports : 0);\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you\'ve misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you\'re not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === "object") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function("r", "regeneratorRuntime = r")(runtime);\n  }\n}\n\n//# sourceURL=webpack://@skipsolabs/snam-slider/./node_modules/regenerator-runtime/runtime.js?')},21:(__unused_webpack_module,exports)=>{"use strict";eval("var __webpack_unused_export__;\n\n\n__webpack_unused_export__ = ({\n  value: true\n}); // runtime helper for setting properties on components\n// in a tree-shakable way\n\nexports.Z = (sfc, props) => {\n  const target = sfc.__vccOpts || sfc;\n\n  for (const [key, val] of props) {\n    target[key] = val;\n  }\n\n  return target;\n};\n\n//# sourceURL=webpack://@skipsolabs/snam-slider/./node_modules/vue-loader/dist/exportHelper.js?")},198:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval("\n\nvar _interopRequireDefault = __webpack_require__(424);\n\nObject.defineProperty(exports, \"X\", ({\n  value: true\n}));\nexports.Z = void 0;\n\nvar _regenerator = _interopRequireDefault(__webpack_require__(264));\n\nvar _asyncToGenerator2 = _interopRequireDefault(__webpack_require__(564));\n\nvar _defineProperty2 = _interopRequireDefault(__webpack_require__(837));\n\nvar _index = _interopRequireDefault(__webpack_require__(242));\n\nvar _SkDots = _interopRequireDefault(__webpack_require__(145));\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nvar _default = {\n  name: 'SkSliderControl',\n  components: _objectSpread({\n    SkDots: _SkDots.default\n  }, _index.default),\n  inject: ['store'],\n  props: {\n    controlLabel: {\n      type: String,\n      required: true,\n      description: 'The label for the control'\n    },\n    intervalTime: {\n      type: Number,\n      required: true,\n      description: 'Interval time in milliseconds'\n    }\n  },\n  emits: ['slideChange', 'autoplay'],\n  data: function data() {\n    return {\n      autoplay: true,\n      interval: null,\n      countdown: null,\n      countdownTime: null,\n      temporalInterval: null\n    };\n  },\n  computed: {\n    isFirstItem: function isFirstItem() {\n      return this.store.state.value.currentIndex === 0;\n    },\n    nextItems: function nextItems() {\n      return [this.checkItemIndex(1), this.checkItemIndex(2)];\n    },\n    nextIndexes: function nextIndexes() {\n      var indexArr = [];\n\n      for (var i = 0; i < 3; i += 1) {\n        indexArr.push(this.storeItems.indexOf(this.checkItemIndex(i)));\n      }\n\n      return indexArr;\n    },\n    storeItems: function storeItems() {\n      return this.store.state.value.items;\n    },\n    storeIndex: function storeIndex() {\n      return this.store.state.value.currentIndex;\n    }\n  },\n  watch: {\n    autoplay: function autoplay(newValue) {\n      var _this = this;\n\n      return (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee() {\n        return _regenerator.default.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!newValue) {\n                  _context.next = 7;\n                  break;\n                }\n\n                _this.clearAllIntervals();\n\n                _context.next = 4;\n                return _this.setTemporalInteval();\n\n              case 4:\n                _this.startCountdown();\n\n                _context.next = 8;\n                break;\n\n              case 7:\n                _this.clearAllIntervals();\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    }\n  },\n  // start autoplay after component mounted\n  mounted: function mounted() {\n    this.setNewIterval();\n  },\n  // remove interval when component destroyed\n  unmounted: function unmounted() {\n    clearInterval(this.interval);\n  },\n  methods: {\n    toggleAutoplay: function toggleAutoplay() {\n      if (this.countdownTime > 1000) this.autoplay = !this.autoplay;\n    },\n    showNext: function showNext() {\n      if (this.store.state.value.isFirstSlide) {\n        this.store.FLAG_FIRST_SLIDE();\n      }\n\n      this.store.SHOW_NEXT_ITEM();\n      this.playCountReset();\n    },\n    showPrev: function showPrev() {\n      this.store.SHOW_PREV_ITEM();\n      this.playCountReset();\n    },\n    playCountReset: function playCountReset() {\n      this.autoplay = true;\n      this.countdownTime = this.intervalTime;\n      this.$emit('autoplay', true);\n      this.clearAllIntervals();\n      this.setNewIterval();\n    },\n    checkItemIndex: function checkItemIndex(index) {\n      // check if index of the next item is valid\n      // if not return the first or second item\n      // in case the mumber of slides is more than 3\n      if (this.storeItems[this.storeIndex + index]) {\n        return this.storeItems[this.storeIndex + index];\n      }\n\n      if (this.store.state.value.currentIndex - 1 === index) {\n        return this.storeItems[1];\n      }\n\n      return this.storeItems[0];\n    },\n    slideChange: function slideChange(item) {\n      this.store.SET_CURRENT_INDEX(this.storeItems.indexOf(item));\n      this.$emit('slideChange', this.storeItems.indexOf(item)); // reset timer\n\n      this.playCountReset();\n    },\n    startCountdown: function startCountdown() {\n      var _this2 = this;\n\n      this.countdownTime = this.countdownTime > 1000 ? this.countdownTime : this.intervalTime;\n      this.countdown = setInterval(function () {\n        _this2.countdownTime -= 1000;\n      }, 1000);\n    },\n    setNewIterval: function setNewIterval() {\n      var _this3 = this;\n\n      this.startCountdown();\n      this.interval = setInterval(function () {\n        _this3.countdownTime = _this3.intervalTime;\n\n        if (_this3.store.state.value.isFirstSlide) {\n          _this3.store.FLAG_FIRST_SLIDE();\n        }\n\n        _this3.store.SHOW_NEXT_ITEM();\n      }, this.intervalTime);\n    },\n    setTemporalInteval: function setTemporalInteval() {\n      var _this4 = this;\n\n      this.temporalInterval = setTimeout(function () {\n        _this4.store.SHOW_NEXT_ITEM();\n\n        clearInterval(_this4.countdown);\n\n        _this4.setNewIterval();\n      }, this.countdownTime);\n    },\n    clearAllIntervals: function clearAllIntervals() {\n      [this.interval, this.countdown, this.temporalInterval].forEach(function (interval) {\n        clearInterval(interval);\n      });\n    }\n  }\n};\nexports.Z = _default;\n\n//# sourceURL=webpack://@skipsolabs/snam-slider/./src/SkControl.vue?./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/dist/index.js??ruleSet%5B0%5D")},328:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval('\n\nObject.defineProperty(exports, "X", ({\n  value: true\n}));\nexports.Z = void 0;\n\nvar _vue = __webpack_require__(670);\n\nvar __default__ = {\n  name: \'SkDots\',\n  inject: [\'store\'],\n  props: {\n    autoplay: {\n      type: Boolean,\n      required: true\n    },\n    intervalTime: {\n      type: Number,\n      required: true\n    },\n    countdownTime: {\n      type: Number,\n      required: true\n    }\n  },\n  emits: [\'slideChange\', \'autoplay\'],\n  data: function data() {\n    return {\n      cssInterval: "".concat(this.intervalTime, "ms"),\n      progressWidth: \'0%\'\n    };\n  },\n  computed: {\n    computedBg: function computedBg() {\n      return this.autoplay ? \'var(--g-color-light-gray)\' : \'var(--g-color-1)\';\n    },\n    progressCount: function progressCount() {\n      var progress = 100 - "".concat(this.countdownTime * 100 / this.intervalTime);\n      return "".concat(progress, "%");\n    },\n    currentIndex: function currentIndex() {\n      return this.store.state.value.currentIndex;\n    },\n    pausedWidth: function pausedWidth() {\n      // get the width of the progress bar in pixel from 265px\n      var progress = 265 - "".concat(this.countdownTime * 265 / this.intervalTime);\n      return this.autoplay ? \'265px\' : "".concat(progress, "px");\n    }\n  },\n  watch: {\n    autoplay: function autoplay(newValue) {\n      if (newValue) {\n        this.cssInterval = this.countdownTime > 1000 ? "".concat(this.countdownTime, "ms") : "".concat(this.intervalTime, "ms");\n        this.progressWidth = this.progressCount;\n      }\n    },\n    currentIndex: function currentIndex(newValue) {\n      if (newValue) {\n        this.cssInterval = "".concat(this.intervalTime, "ms");\n        this.progressWidth = \'0%\';\n      }\n    }\n  },\n  methods: {\n    slideChange: function slideChange(index) {\n      this.store.SET_CURRENT_INDEX(index);\n      this.$emit(\'slideChange\', index); // reset timer\n\n      if (this.autoplay) {\n        this.$emit(\'autoplay\', false);\n      }\n    }\n  }\n};\n\nvar __injectCSSVars__ = function __injectCSSVars__() {\n  (0, _vue.useCssVars)(function (_ctx) {\n    return {\n      "1564be01": _ctx.computedBg,\n      "3a1f2549": _ctx.pausedWidth,\n      "c73de80e": _ctx.cssInterval,\n      "ec71f92c": _ctx.progressWidth\n    };\n  });\n};\n\nvar __setup__ = __default__.setup;\n__default__.setup = __setup__ ? function (props, ctx) {\n  __injectCSSVars__();\n\n  return __setup__(props, ctx);\n} : __injectCSSVars__;\nvar _default = __default__;\nexports.Z = _default;\n\n//# sourceURL=webpack://@skipsolabs/snam-slider/./src/SkDots.vue?./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/dist/index.js??ruleSet%5B0%5D')},516:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval("\n\nvar _interopRequireDefault = __webpack_require__(424);\n\nObject.defineProperty(exports, \"X\", ({\n  value: true\n}));\nexports.Z = void 0;\n\nvar _SkControl = _interopRequireDefault(__webpack_require__(150));\n\nvar _SkSliderItem = _interopRequireDefault(__webpack_require__(701));\n\nvar _store = _interopRequireDefault(__webpack_require__(895));\n\nvar _default = {\n  name: 'SkSlider',\n  components: {\n    SkControl: _SkControl.default,\n    SkSliderItem: _SkSliderItem.default\n  },\n  provide: {\n    store: _store.default\n  },\n  props: {\n    intervalTime: {\n      type: [String, Number],\n      required: true,\n      describe: 'interval time'\n    },\n    items: {\n      type: [Array, String],\n      required: true,\n      describe: 'Array of objects with image and text'\n    },\n    controlLabel: {\n      type: [Array, String],\n      required: true,\n      describe: 'The label for the control'\n    }\n  },\n  computed: {\n    currentItem: function currentItem() {\n      // retunr the current Active item\n      var index = _store.default.state.value.currentIndex;\n      return _store.default.state.value.items[index] || '';\n    },\n    isFirstSlide: function isFirstSlide() {\n      return _store.default.state.value.isFirstSlide;\n    }\n  },\n  mounted: function mounted() {\n    // initialize the composable store\n    _store.default.SET_ITEMS(typeof this.items === 'string' ? JSON.parse(this.items) : this.items);\n  }\n};\nexports.Z = _default;\n\n//# sourceURL=webpack://@skipsolabs/snam-slider/./src/SkSlider.vue?./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/dist/index.js??ruleSet%5B0%5D")},592:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval("\n\nvar _interopRequireDefault = __webpack_require__(424);\n\nObject.defineProperty(exports, \"X\", ({\n  value: true\n}));\nexports.Z = void 0;\n\nvar _index = _interopRequireDefault(__webpack_require__(242));\n\nvar _SkGradientBtn = _interopRequireDefault(__webpack_require__(769));\n\nvar _default = {\n  name: 'SkSliderItem',\n  components: {\n    SkGragientBtn: _SkGradientBtn.default,\n    BIconArrowRight: _index.default.BIconArrowRight\n  },\n  inject: ['store'],\n  emits: ['slideChange', 'autoplay'],\n  data: function data() {\n    return {\n      autoplay: true,\n      interval: null\n    };\n  },\n  computed: {\n    currentIndex: function currentIndex() {\n      return this.store.state.value.currentIndex;\n    },\n    items: function items() {\n      // retunr the items from the store\n      return this.store.state.value.items;\n    },\n    isFirstSlide: function isFirstSlide() {\n      return this.store.state.value.isFirstSlide;\n    }\n  }\n};\nexports.Z = _default;\n\n//# sourceURL=webpack://@skipsolabs/snam-slider/./src/SkSliderItem.vue?./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/dist/index.js??ruleSet%5B0%5D")},340:(__unused_webpack_module,exports)=>{"use strict";eval("\n\nObject.defineProperty(exports, \"X\", ({\n  value: true\n}));\nexports.Z = void 0;\nvar _default = {\n  name: 'SkGradientBtn'\n};\nexports.Z = _default;\n\n//# sourceURL=webpack://@skipsolabs/snam-slider/./src/buttons/SkGradientBtn.vue?./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/dist/index.js??ruleSet%5B0%5D")},481:(__unused_webpack_module,exports)=>{"use strict";eval("\n\nObject.defineProperty(exports, \"X\", ({\n  value: true\n}));\nexports.Z = void 0;\nvar _default = {\n  name: 'BIconArrowLeft'\n};\nexports.Z = _default;\n\n//# sourceURL=webpack://@skipsolabs/snam-slider/./src/icons/BIconArrowLeft.vue?./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/dist/index.js??ruleSet%5B0%5D")},433:(__unused_webpack_module,exports)=>{"use strict";eval("\n\nObject.defineProperty(exports, \"X\", ({\n  value: true\n}));\nexports.Z = void 0;\nvar _default = {\n  name: 'BIconArrowRight'\n};\nexports.Z = _default;\n\n//# sourceURL=webpack://@skipsolabs/snam-slider/./src/icons/BIconArrowRight.vue?./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/dist/index.js??ruleSet%5B0%5D")},210:(__unused_webpack_module,exports)=>{"use strict";eval("\n\nObject.defineProperty(exports, \"X\", ({\n  value: true\n}));\nexports.Z = void 0;\nvar _default = {\n  name: 'BIconPause'\n};\nexports.Z = _default;\n\n//# sourceURL=webpack://@skipsolabs/snam-slider/./src/icons/BIconPause.vue?./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/dist/index.js??ruleSet%5B0%5D")},682:(__unused_webpack_module,exports)=>{"use strict";eval("\n\nObject.defineProperty(exports, \"X\", ({\n  value: true\n}));\nexports.Z = void 0;\nvar _default = {\n  name: 'BIconPlayFill'\n};\nexports.Z = _default;\n\n//# sourceURL=webpack://@skipsolabs/snam-slider/./src/icons/BIconPlayFill.vue?./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/dist/index.js??ruleSet%5B0%5D")},820:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval('var __webpack_unused_export__;\n\n\n__webpack_unused_export__ = ({\n  value: true\n});\nexports.s = render;\n\nvar _vue = __webpack_require__(670);\n\nvar _withScopeId = function _withScopeId(n) {\n  return (0, _vue.pushScopeId)("data-v-08a92f65"), n = n(), (0, _vue.popScopeId)(), n;\n};\n\nvar _hoisted_1 = {\n  class: "sk-slider-control"\n};\nvar _hoisted_2 = {\n  class: "sk-slider-btns"\n};\nvar _hoisted_3 = ["disabled"];\nvar _hoisted_4 = {\n  class: "sk-slider-control__text t xs"\n};\nvar _hoisted_5 = {\n  class: "sk-slider-control_items"\n};\nvar _hoisted_6 = ["onClick"];\nvar _hoisted_7 = ["src"];\nvar _hoisted_8 = {\n  key: 1,\n  class: "sk-slider-control_item__text txt md"\n};\nvar _hoisted_9 = {\n  class: "t xs ellipsisClamp"\n};\nvar _hoisted_10 = {\n  class: "txt md ellipsisClamp clamp-lines-1"\n};\n\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_BIconArrowLeft = (0, _vue.resolveComponent)("BIconArrowLeft");\n\n  var _component_BIconPause = (0, _vue.resolveComponent)("BIconPause");\n\n  var _component_BIconPlayFill = (0, _vue.resolveComponent)("BIconPlayFill");\n\n  var _component_BIconArrowRight = (0, _vue.resolveComponent)("BIconArrowRight");\n\n  var _component_SkDots = (0, _vue.resolveComponent)("SkDots");\n\n  return (0, _vue.openBlock)(), (0, _vue.createElementBlock)("div", _hoisted_1, [(0, _vue.createElementVNode)("div", _hoisted_2, [(0, _vue.createElementVNode)("button", {\n    disabled: $options.isFirstItem,\n    class: "blob-prev",\n    onClick: _cache[0] || (_cache[0] = function () {\n      return $options.showPrev && $options.showPrev.apply($options, arguments);\n    })\n  }, [(0, _vue.createVNode)(_component_BIconArrowLeft, {\n    class: "control-icon"\n  })], 8\n  /* PROPS */\n  , _hoisted_3), (0, _vue.createElementVNode)("button", {\n    class: "blob-autoplay",\n    onClick: _cache[1] || (_cache[1] = function () {\n      return $options.toggleAutoplay && $options.toggleAutoplay.apply($options, arguments);\n    })\n  }, [$data.autoplay ? ((0, _vue.openBlock)(), (0, _vue.createBlock)(_component_BIconPause, {\n    key: 0,\n    class: "control-icon"\n  })) : ((0, _vue.openBlock)(), (0, _vue.createBlock)(_component_BIconPlayFill, {\n    key: 1,\n    class: "control-icon"\n  }))]), (0, _vue.createElementVNode)("button", {\n    class: "blob-next",\n    onClick: _cache[2] || (_cache[2] = function () {\n      return $options.showNext && $options.showNext.apply($options, arguments);\n    })\n  }, [(0, _vue.createVNode)(_component_BIconArrowRight, {\n    class: "control-icon"\n  })])]), (0, _vue.createVNode)(_component_SkDots, {\n    class: "sk-slider__timeline",\n    "countdown-time": $data.countdownTime,\n    "interval-time": $props.intervalTime,\n    autoplay: $data.autoplay,\n    "check-index": $options.checkItemIndex,\n    onAutoplay: _cache[3] || (_cache[3] = function ($event) {\n      return $data.autoplay = false;\n    })\n  }, null, 8\n  /* PROPS */\n  , ["countdown-time", "interval-time", "autoplay", "check-index"]), (0, _vue.createElementVNode)("p", _hoisted_4, (0, _vue.toDisplayString)($props.controlLabel) + ": " + (0, _vue.toDisplayString)($data.countdownTime / 1000) + " sec ", 1\n  /* TEXT */\n  ), (0, _vue.createElementVNode)("section", _hoisted_5, [((0, _vue.openBlock)(true), (0, _vue.createElementBlock)(_vue.Fragment, null, (0, _vue.renderList)($options.nextItems, function (slide, index) {\n    return (0, _vue.openBlock)(), (0, _vue.createElementBlock)("figure", {\n      key: index,\n      class: "sk-slider-control_item",\n      onClick: function onClick($event) {\n        return $options.slideChange(slide);\n      }\n    }, [slide ? ((0, _vue.openBlock)(), (0, _vue.createElementBlock)("img", {\n      key: 0,\n      class: "sk-slider-control_item__img",\n      src: slide.image\n    }, null, 8\n    /* PROPS */\n    , _hoisted_7)) : (0, _vue.createCommentVNode)("v-if", true), slide ? ((0, _vue.openBlock)(), (0, _vue.createElementBlock)("figcaption", _hoisted_8, [(0, _vue.createElementVNode)("b", _hoisted_9, (0, _vue.toDisplayString)(slide.title), 1\n    /* TEXT */\n    ), (0, _vue.createElementVNode)("p", _hoisted_10, (0, _vue.toDisplayString)(slide.text), 1\n    /* TEXT */\n    )])) : (0, _vue.createCommentVNode)("v-if", true)], 8\n    /* PROPS */\n    , _hoisted_6);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))])]);\n}\n\n//# sourceURL=webpack://@skipsolabs/snam-slider/./src/SkControl.vue?./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/dist/templateLoader.js??ruleSet%5B1%5D.rules%5B2%5D!./node_modules/vue-loader/dist/index.js??ruleSet%5B0%5D')},970:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval('var __webpack_unused_export__;\n\n\n__webpack_unused_export__ = ({\n  value: true\n});\nexports.s = render;\n\nvar _vue = __webpack_require__(670);\n\nvar _withScopeId = function _withScopeId(n) {\n  return (0, _vue.pushScopeId)("data-v-8c515fde"), n = n(), (0, _vue.popScopeId)(), n;\n};\n\nvar _hoisted_1 = {\n  class: "dots txt md"\n};\nvar _hoisted_2 = ["onClick"];\nvar _hoisted_3 = {\n  class: "dots__items"\n};\n\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  return (0, _vue.openBlock)(), (0, _vue.createElementBlock)("ul", _hoisted_1, [((0, _vue.openBlock)(), (0, _vue.createElementBlock)(_vue.Fragment, null, (0, _vue.renderList)([0, 1, 2], function (dot) {\n    return (0, _vue.createElementVNode)("li", {\n      key: dot,\n      class: (0, _vue.normalizeClass)({\n        active: dot === $options.store.state.value.currentIndex\n      }),\n      onClick: function onClick($event) {\n        return $options.slideChange(dot);\n      }\n    }, [(0, _vue.createElementVNode)("div", _hoisted_3, [(0, _vue.withDirectives)((0, _vue.createElementVNode)("span", null, null, 512\n    /* NEED_PATCH */\n    ), [[_vue.vShow, $props.autoplay]])])], 10\n    /* CLASS, PROPS */\n    , _hoisted_2);\n  }), 64\n  /* STABLE_FRAGMENT */\n  ))]);\n}\n\n//# sourceURL=webpack://@skipsolabs/snam-slider/./src/SkDots.vue?./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/dist/templateLoader.js??ruleSet%5B1%5D.rules%5B2%5D!./node_modules/vue-loader/dist/index.js??ruleSet%5B0%5D')},331:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval('var __webpack_unused_export__;\n\n\n__webpack_unused_export__ = ({\n  value: true\n});\nexports.s = render;\n\nvar _vue = __webpack_require__(670);\n\nvar _withScopeId = function _withScopeId(n) {\n  return (0, _vue.pushScopeId)("data-v-40d7eaf8"), n = n(), (0, _vue.popScopeId)(), n;\n};\n\nvar _hoisted_1 = {\n  class: "sk-slider"\n};\n\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_SkSliderItem = (0, _vue.resolveComponent)("SkSliderItem");\n\n  var _component_SkControl = (0, _vue.resolveComponent)("SkControl");\n\n  return (0, _vue.openBlock)(), (0, _vue.createElementBlock)("div", _hoisted_1, [(0, _vue.createVNode)(_vue.Transition, {\n    appear: "",\n    name: $options.isFirstSlide ? \'free\' : \'list\'\n  }, {\n    default: (0, _vue.withCtx)(function () {\n      return [((0, _vue.openBlock)(), (0, _vue.createElementBlock)("div", {\n        key: $options.currentItem.image,\n        style: (0, _vue.normalizeStyle)("background-image: url(".concat($options.currentItem.image, ");")),\n        class: "sk-slider__img"\n      }, null, 4\n      /* STYLE */\n      ))];\n    }),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , ["name"]), (0, _vue.createVNode)(_component_SkSliderItem), (0, _vue.createVNode)(_component_SkControl, {\n    "control-label": $props.controlLabel,\n    "interval-time": Number($props.intervalTime)\n  }, null, 8\n  /* PROPS */\n  , ["control-label", "interval-time"])]);\n}\n\n//# sourceURL=webpack://@skipsolabs/snam-slider/./src/SkSlider.vue?./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/dist/templateLoader.js??ruleSet%5B1%5D.rules%5B2%5D!./node_modules/vue-loader/dist/index.js??ruleSet%5B0%5D')},652:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval('var __webpack_unused_export__;\n\n\n__webpack_unused_export__ = ({\n  value: true\n});\nexports.s = render;\n\nvar _vue = __webpack_require__(670);\n\nvar _withScopeId = function _withScopeId(n) {\n  return (0, _vue.pushScopeId)("data-v-ac6f3a2c"), n = n(), (0, _vue.popScopeId)(), n;\n};\n\nvar _hoisted_1 = {\n  class: "sk-slider__flex"\n};\nvar _hoisted_2 = {\n  class: "sk-slider__section t xs"\n};\nvar _hoisted_3 = {\n  key: 0,\n  class: "sk-slider__tag txt sm"\n};\nvar _hoisted_4 = {\n  class: "sk-slider__title t xxl ellipsisClamp"\n};\nvar _hoisted_5 = {\n  class: "sk-slider__text txt md ellipsisClamp"\n};\nvar _hoisted_6 = ["href"];\nvar _hoisted_7 = {\n  class: "sk-slider__btn__text"\n};\n\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_BIconArrowRight = (0, _vue.resolveComponent)("BIconArrowRight");\n\n  var _component_SkGragientBtn = (0, _vue.resolveComponent)("SkGragientBtn");\n\n  return (0, _vue.openBlock)(), (0, _vue.createBlock)(_vue.TransitionGroup, {\n    appear: "",\n    class: "sk-slider__items",\n    name: $options.isFirstSlide ? \'free\' : \'list\',\n    tag: "article"\n  }, {\n    default: (0, _vue.withCtx)(function () {\n      return [((0, _vue.openBlock)(true), (0, _vue.createElementBlock)(_vue.Fragment, null, (0, _vue.renderList)($options.items, function (item, index) {\n        return (0, _vue.openBlock)(), (0, _vue.createElementBlock)(_vue.Fragment, null, [index === $options.currentIndex ? ((0, _vue.openBlock)(), (0, _vue.createElementBlock)("section", {\n          key: index,\n          class: "sk-slider__item__content"\n        }, [(0, _vue.createElementVNode)("div", _hoisted_1, [(0, _vue.createElementVNode)("span", _hoisted_2, (0, _vue.toDisplayString)(item.section), 1\n        /* TEXT */\n        ), item.tag ? ((0, _vue.openBlock)(), (0, _vue.createElementBlock)("span", _hoisted_3, "#" + (0, _vue.toDisplayString)(item.tag), 1\n        /* TEXT */\n        )) : (0, _vue.createCommentVNode)("v-if", true)]), (0, _vue.createElementVNode)("h4", _hoisted_4, (0, _vue.toDisplayString)(item.title), 1\n        /* TEXT */\n        ), (0, _vue.createElementVNode)("p", _hoisted_5, (0, _vue.toDisplayString)(item.text), 1\n        /* TEXT */\n        ), (0, _vue.createVNode)(_component_SkGragientBtn, {\n          class: "sk-slider__btn txt md"\n        }, {\n          default: (0, _vue.withCtx)(function () {\n            return [(0, _vue.createElementVNode)("a", {\n              href: item.buttonLink\n            }, [(0, _vue.createElementVNode)("span", _hoisted_7, (0, _vue.toDisplayString)(item.buttonText), 1\n            /* TEXT */\n            ), (0, _vue.createVNode)(_component_BIconArrowRight)], 8\n            /* PROPS */\n            , _hoisted_6)];\n          }),\n          _: 2\n          /* DYNAMIC */\n\n        }, 1024\n        /* DYNAMIC_SLOTS */\n        )])) : (0, _vue.createCommentVNode)("v-if", true)], 64\n        /* STABLE_FRAGMENT */\n        );\n      }), 256\n      /* UNKEYED_FRAGMENT */\n      ))];\n    }),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , ["name"]);\n}\n\n//# sourceURL=webpack://@skipsolabs/snam-slider/./src/SkSliderItem.vue?./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/dist/templateLoader.js??ruleSet%5B1%5D.rules%5B2%5D!./node_modules/vue-loader/dist/index.js??ruleSet%5B0%5D')},227:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval('var __webpack_unused_export__;\n\n\n__webpack_unused_export__ = ({\n  value: true\n});\nexports.s = render;\n\nvar _vue = __webpack_require__(670);\n\nvar _withScopeId = function _withScopeId(n) {\n  return (0, _vue.pushScopeId)("data-v-e00fa402"), n = n(), (0, _vue.popScopeId)(), n;\n};\n\nvar _hoisted_1 = {\n  class: "sk-gradient-btn"\n};\n\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  return (0, _vue.openBlock)(), (0, _vue.createElementBlock)("button", _hoisted_1, [(0, _vue.renderSlot)(_ctx.$slots, "default", {}, undefined, true)]);\n}\n\n//# sourceURL=webpack://@skipsolabs/snam-slider/./src/buttons/SkGradientBtn.vue?./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/dist/templateLoader.js??ruleSet%5B1%5D.rules%5B2%5D!./node_modules/vue-loader/dist/index.js??ruleSet%5B0%5D')},760:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval('var __webpack_unused_export__;\n\n\n__webpack_unused_export__ = ({\n  value: true\n});\nexports.s = render;\n\nvar _vue = __webpack_require__(670);\n\nvar _hoisted_1 = {\n  width: "1em",\n  height: "1em",\n  fill: "currentColor",\n  role: "img",\n  focusable: "false",\n  viewBox: "0 0 16 16"\n};\n\nvar _hoisted_2 = /*#__PURE__*/(0, _vue.createElementVNode)("path", {\n  "fill-rule": "evenodd",\n  d: "M15 8a.5.5 0 0 0-.5-.5H2.707l3.147-3.146a.5.5 0 1 0-.708-.708l-4 4a.5.5 0 0 0 0 .708l4 4a.5.5 0 0 0 .708-.708L2.707 8.5H14.5A.5.5 0 0 0 15 8z"\n}, null, -1\n/* HOISTED */\n);\n\nvar _hoisted_3 = [_hoisted_2];\n\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  return (0, _vue.openBlock)(), (0, _vue.createElementBlock)("svg", _hoisted_1, _hoisted_3);\n}\n\n//# sourceURL=webpack://@skipsolabs/snam-slider/./src/icons/BIconArrowLeft.vue?./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/dist/templateLoader.js??ruleSet%5B1%5D.rules%5B2%5D!./node_modules/vue-loader/dist/index.js??ruleSet%5B0%5D')},376:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval('var __webpack_unused_export__;\n\n\n__webpack_unused_export__ = ({\n  value: true\n});\nexports.s = render;\n\nvar _vue = __webpack_require__(670);\n\nvar _hoisted_1 = {\n  width: "1em",\n  height: "1em",\n  fill: "currentColor",\n  role: "img",\n  focusable: "false",\n  viewBox: "0 0 16 16"\n};\n\nvar _hoisted_2 = /*#__PURE__*/(0, _vue.createElementVNode)("path", {\n  "fill-rule": "evenodd",\n  d: "M1 8a.5.5 0 0 1 .5-.5h11.793l-3.147-3.146a.5.5 0 0 1 .708-.708l4 4a.5.5 0 0 1 0 .708l-4 4a.5.5 0 0 1-.708-.708L13.293 8.5H1.5A.5.5 0 0 1 1 8z"\n}, null, -1\n/* HOISTED */\n);\n\nvar _hoisted_3 = [_hoisted_2];\n\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  return (0, _vue.openBlock)(), (0, _vue.createElementBlock)("svg", _hoisted_1, _hoisted_3);\n}\n\n//# sourceURL=webpack://@skipsolabs/snam-slider/./src/icons/BIconArrowRight.vue?./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/dist/templateLoader.js??ruleSet%5B1%5D.rules%5B2%5D!./node_modules/vue-loader/dist/index.js??ruleSet%5B0%5D')},609:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval('var __webpack_unused_export__;\n\n\n__webpack_unused_export__ = ({\n  value: true\n});\nexports.s = render;\n\nvar _vue = __webpack_require__(670);\n\nvar _hoisted_1 = {\n  width: "1em",\n  height: "1em",\n  fill: "currentColor",\n  role: "img",\n  focusable: "false",\n  viewBox: "0 0 16 16"\n};\n\nvar _hoisted_2 = /*#__PURE__*/(0, _vue.createElementVNode)("path", {\n  d: "M6 3.5a.5.5 0 0 1 .5.5v8a.5.5 0 0 1-1 0V4a.5.5 0 0 1 .5-.5zm4 0a.5.5 0 0 1 .5.5v8a.5.5 0 0 1-1 0V4a.5.5 0 0 1 .5-.5z"\n}, null, -1\n/* HOISTED */\n);\n\nvar _hoisted_3 = [_hoisted_2];\n\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  return (0, _vue.openBlock)(), (0, _vue.createElementBlock)("svg", _hoisted_1, _hoisted_3);\n}\n\n//# sourceURL=webpack://@skipsolabs/snam-slider/./src/icons/BIconPause.vue?./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/dist/templateLoader.js??ruleSet%5B1%5D.rules%5B2%5D!./node_modules/vue-loader/dist/index.js??ruleSet%5B0%5D')},380:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval('var __webpack_unused_export__;\n\n\n__webpack_unused_export__ = ({\n  value: true\n});\nexports.s = render;\n\nvar _vue = __webpack_require__(670);\n\nvar _hoisted_1 = {\n  width: "1em",\n  height: "1em",\n  fill: "currentColor",\n  role: "img",\n  focusable: "false",\n  viewBox: "0 0 16 16"\n};\n\nvar _hoisted_2 = /*#__PURE__*/(0, _vue.createElementVNode)("path", {\n  d: "m11.596 8.697-6.363 3.692c-.54.313-1.233-.066-1.233-.697V4.308c0-.63.692-1.01 1.233-.696l6.363 3.692a.802.802 0 0 1 0 1.393z"\n}, null, -1\n/* HOISTED */\n);\n\nvar _hoisted_3 = [_hoisted_2];\n\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  return (0, _vue.openBlock)(), (0, _vue.createElementBlock)("svg", _hoisted_1, _hoisted_3);\n}\n\n//# sourceURL=webpack://@skipsolabs/snam-slider/./src/icons/BIconPlayFill.vue?./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/dist/templateLoader.js??ruleSet%5B1%5D.rules%5B2%5D!./node_modules/vue-loader/dist/index.js??ruleSet%5B0%5D')},670:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"BaseTransition\": () => (/* reexport */ BaseTransition),\n  \"Comment\": () => (/* reexport */ Comment),\n  \"EffectScope\": () => (/* reexport */ EffectScope),\n  \"Fragment\": () => (/* reexport */ Fragment),\n  \"KeepAlive\": () => (/* reexport */ KeepAlive),\n  \"ReactiveEffect\": () => (/* reexport */ ReactiveEffect),\n  \"Static\": () => (/* reexport */ Static),\n  \"Suspense\": () => (/* reexport */ Suspense),\n  \"Teleport\": () => (/* reexport */ Teleport),\n  \"Text\": () => (/* reexport */ Text),\n  \"Transition\": () => (/* reexport */ Transition),\n  \"TransitionGroup\": () => (/* reexport */ TransitionGroup),\n  \"VueElement\": () => (/* reexport */ VueElement),\n  \"callWithAsyncErrorHandling\": () => (/* reexport */ callWithAsyncErrorHandling),\n  \"callWithErrorHandling\": () => (/* reexport */ callWithErrorHandling),\n  \"camelize\": () => (/* reexport */ camelize),\n  \"capitalize\": () => (/* reexport */ shared_esm_bundler_capitalize),\n  \"cloneVNode\": () => (/* reexport */ cloneVNode),\n  \"compatUtils\": () => (/* reexport */ compatUtils),\n  \"compile\": () => (/* binding */ compileToFunction),\n  \"computed\": () => (/* reexport */ runtime_core_esm_bundler_computed),\n  \"createApp\": () => (/* reexport */ createApp),\n  \"createBlock\": () => (/* reexport */ createBlock),\n  \"createCommentVNode\": () => (/* reexport */ createCommentVNode),\n  \"createElementBlock\": () => (/* reexport */ createElementBlock),\n  \"createElementVNode\": () => (/* reexport */ createBaseVNode),\n  \"createHydrationRenderer\": () => (/* reexport */ createHydrationRenderer),\n  \"createPropsRestProxy\": () => (/* reexport */ createPropsRestProxy),\n  \"createRenderer\": () => (/* reexport */ createRenderer),\n  \"createSSRApp\": () => (/* reexport */ createSSRApp),\n  \"createSlots\": () => (/* reexport */ createSlots),\n  \"createStaticVNode\": () => (/* reexport */ createStaticVNode),\n  \"createTextVNode\": () => (/* reexport */ createTextVNode),\n  \"createVNode\": () => (/* reexport */ createVNode),\n  \"customRef\": () => (/* reexport */ customRef),\n  \"defineAsyncComponent\": () => (/* reexport */ defineAsyncComponent),\n  \"defineComponent\": () => (/* reexport */ defineComponent),\n  \"defineCustomElement\": () => (/* reexport */ defineCustomElement),\n  \"defineEmits\": () => (/* reexport */ defineEmits),\n  \"defineExpose\": () => (/* reexport */ defineExpose),\n  \"defineProps\": () => (/* reexport */ defineProps),\n  \"defineSSRCustomElement\": () => (/* reexport */ defineSSRCustomElement),\n  \"devtools\": () => (/* reexport */ devtools),\n  \"effect\": () => (/* reexport */ effect),\n  \"effectScope\": () => (/* reexport */ effectScope),\n  \"getCurrentInstance\": () => (/* reexport */ getCurrentInstance),\n  \"getCurrentScope\": () => (/* reexport */ getCurrentScope),\n  \"getTransitionRawChildren\": () => (/* reexport */ getTransitionRawChildren),\n  \"guardReactiveProps\": () => (/* reexport */ guardReactiveProps),\n  \"h\": () => (/* reexport */ h),\n  \"handleError\": () => (/* reexport */ handleError),\n  \"hydrate\": () => (/* reexport */ hydrate),\n  \"initCustomFormatter\": () => (/* reexport */ runtime_core_esm_bundler_initCustomFormatter),\n  \"initDirectivesForSSR\": () => (/* reexport */ initDirectivesForSSR),\n  \"inject\": () => (/* reexport */ inject),\n  \"isMemoSame\": () => (/* reexport */ isMemoSame),\n  \"isProxy\": () => (/* reexport */ isProxy),\n  \"isReactive\": () => (/* reexport */ isReactive),\n  \"isReadonly\": () => (/* reexport */ isReadonly),\n  \"isRef\": () => (/* reexport */ isRef),\n  \"isRuntimeOnly\": () => (/* reexport */ runtime_core_esm_bundler_isRuntimeOnly),\n  \"isShallow\": () => (/* reexport */ isShallow),\n  \"isVNode\": () => (/* reexport */ isVNode),\n  \"markRaw\": () => (/* reexport */ markRaw),\n  \"mergeDefaults\": () => (/* reexport */ mergeDefaults),\n  \"mergeProps\": () => (/* reexport */ mergeProps),\n  \"nextTick\": () => (/* reexport */ nextTick),\n  \"normalizeClass\": () => (/* reexport */ normalizeClass),\n  \"normalizeProps\": () => (/* reexport */ normalizeProps),\n  \"normalizeStyle\": () => (/* reexport */ normalizeStyle),\n  \"onActivated\": () => (/* reexport */ onActivated),\n  \"onBeforeMount\": () => (/* reexport */ onBeforeMount),\n  \"onBeforeUnmount\": () => (/* reexport */ onBeforeUnmount),\n  \"onBeforeUpdate\": () => (/* reexport */ onBeforeUpdate),\n  \"onDeactivated\": () => (/* reexport */ onDeactivated),\n  \"onErrorCaptured\": () => (/* reexport */ onErrorCaptured),\n  \"onMounted\": () => (/* reexport */ onMounted),\n  \"onRenderTracked\": () => (/* reexport */ onRenderTracked),\n  \"onRenderTriggered\": () => (/* reexport */ onRenderTriggered),\n  \"onScopeDispose\": () => (/* reexport */ onScopeDispose),\n  \"onServerPrefetch\": () => (/* reexport */ onServerPrefetch),\n  \"onUnmounted\": () => (/* reexport */ onUnmounted),\n  \"onUpdated\": () => (/* reexport */ onUpdated),\n  \"openBlock\": () => (/* reexport */ openBlock),\n  \"popScopeId\": () => (/* reexport */ popScopeId),\n  \"provide\": () => (/* reexport */ provide),\n  \"proxyRefs\": () => (/* reexport */ proxyRefs),\n  \"pushScopeId\": () => (/* reexport */ pushScopeId),\n  \"queuePostFlushCb\": () => (/* reexport */ queuePostFlushCb),\n  \"reactive\": () => (/* reexport */ reactive),\n  \"readonly\": () => (/* reexport */ readonly),\n  \"ref\": () => (/* reexport */ ref),\n  \"registerRuntimeCompiler\": () => (/* reexport */ registerRuntimeCompiler),\n  \"render\": () => (/* reexport */ render),\n  \"renderList\": () => (/* reexport */ renderList),\n  \"renderSlot\": () => (/* reexport */ renderSlot),\n  \"resolveComponent\": () => (/* reexport */ resolveComponent),\n  \"resolveDirective\": () => (/* reexport */ resolveDirective),\n  \"resolveDynamicComponent\": () => (/* reexport */ resolveDynamicComponent),\n  \"resolveFilter\": () => (/* reexport */ resolveFilter),\n  \"resolveTransitionHooks\": () => (/* reexport */ resolveTransitionHooks),\n  \"setBlockTracking\": () => (/* reexport */ setBlockTracking),\n  \"setDevtoolsHook\": () => (/* reexport */ setDevtoolsHook),\n  \"setTransitionHooks\": () => (/* reexport */ setTransitionHooks),\n  \"shallowReactive\": () => (/* reexport */ shallowReactive),\n  \"shallowReadonly\": () => (/* reexport */ shallowReadonly),\n  \"shallowRef\": () => (/* reexport */ shallowRef),\n  \"ssrContextKey\": () => (/* reexport */ ssrContextKey),\n  \"ssrUtils\": () => (/* reexport */ ssrUtils),\n  \"stop\": () => (/* reexport */ stop),\n  \"toDisplayString\": () => (/* reexport */ toDisplayString),\n  \"toHandlerKey\": () => (/* reexport */ toHandlerKey),\n  \"toHandlers\": () => (/* reexport */ toHandlers),\n  \"toRaw\": () => (/* reexport */ reactivity_esm_bundler_toRaw),\n  \"toRef\": () => (/* reexport */ toRef),\n  \"toRefs\": () => (/* reexport */ toRefs),\n  \"transformVNodeArgs\": () => (/* reexport */ transformVNodeArgs),\n  \"triggerRef\": () => (/* reexport */ triggerRef),\n  \"unref\": () => (/* reexport */ unref),\n  \"useAttrs\": () => (/* reexport */ useAttrs),\n  \"useCssModule\": () => (/* reexport */ useCssModule),\n  \"useCssVars\": () => (/* reexport */ useCssVars),\n  \"useSSRContext\": () => (/* reexport */ useSSRContext),\n  \"useSlots\": () => (/* reexport */ useSlots),\n  \"useTransitionState\": () => (/* reexport */ useTransitionState),\n  \"vModelCheckbox\": () => (/* reexport */ vModelCheckbox),\n  \"vModelDynamic\": () => (/* reexport */ vModelDynamic),\n  \"vModelRadio\": () => (/* reexport */ vModelRadio),\n  \"vModelSelect\": () => (/* reexport */ vModelSelect),\n  \"vModelText\": () => (/* reexport */ vModelText),\n  \"vShow\": () => (/* reexport */ vShow),\n  \"version\": () => (/* reexport */ version),\n  \"warn\": () => (/* reexport */ runtime_core_esm_bundler_warn),\n  \"watch\": () => (/* reexport */ watch),\n  \"watchEffect\": () => (/* reexport */ watchEffect),\n  \"watchPostEffect\": () => (/* reexport */ watchPostEffect),\n  \"watchSyncEffect\": () => (/* reexport */ watchSyncEffect),\n  \"withAsyncContext\": () => (/* reexport */ withAsyncContext),\n  \"withCtx\": () => (/* reexport */ withCtx),\n  \"withDefaults\": () => (/* reexport */ withDefaults),\n  \"withDirectives\": () => (/* reexport */ withDirectives),\n  \"withKeys\": () => (/* reexport */ withKeys),\n  \"withMemo\": () => (/* reexport */ withMemo),\n  \"withModifiers\": () => (/* reexport */ withModifiers),\n  \"withScopeId\": () => (/* reexport */ withScopeId)\n});\n\n// NAMESPACE OBJECT: ./node_modules/@vue/runtime-dom/dist/runtime-dom.esm-bundler.js\nvar runtime_dom_esm_bundler_namespaceObject = {};\n__webpack_require__.r(runtime_dom_esm_bundler_namespaceObject);\n__webpack_require__.d(runtime_dom_esm_bundler_namespaceObject, {\n  \"BaseTransition\": () => (BaseTransition),\n  \"Comment\": () => (Comment),\n  \"EffectScope\": () => (EffectScope),\n  \"Fragment\": () => (Fragment),\n  \"KeepAlive\": () => (KeepAlive),\n  \"ReactiveEffect\": () => (ReactiveEffect),\n  \"Static\": () => (Static),\n  \"Suspense\": () => (Suspense),\n  \"Teleport\": () => (Teleport),\n  \"Text\": () => (Text),\n  \"Transition\": () => (Transition),\n  \"TransitionGroup\": () => (TransitionGroup),\n  \"VueElement\": () => (VueElement),\n  \"callWithAsyncErrorHandling\": () => (callWithAsyncErrorHandling),\n  \"callWithErrorHandling\": () => (callWithErrorHandling),\n  \"camelize\": () => (camelize),\n  \"capitalize\": () => (shared_esm_bundler_capitalize),\n  \"cloneVNode\": () => (cloneVNode),\n  \"compatUtils\": () => (compatUtils),\n  \"computed\": () => (runtime_core_esm_bundler_computed),\n  \"createApp\": () => (createApp),\n  \"createBlock\": () => (createBlock),\n  \"createCommentVNode\": () => (createCommentVNode),\n  \"createElementBlock\": () => (createElementBlock),\n  \"createElementVNode\": () => (createBaseVNode),\n  \"createHydrationRenderer\": () => (createHydrationRenderer),\n  \"createPropsRestProxy\": () => (createPropsRestProxy),\n  \"createRenderer\": () => (createRenderer),\n  \"createSSRApp\": () => (createSSRApp),\n  \"createSlots\": () => (createSlots),\n  \"createStaticVNode\": () => (createStaticVNode),\n  \"createTextVNode\": () => (createTextVNode),\n  \"createVNode\": () => (createVNode),\n  \"customRef\": () => (customRef),\n  \"defineAsyncComponent\": () => (defineAsyncComponent),\n  \"defineComponent\": () => (defineComponent),\n  \"defineCustomElement\": () => (defineCustomElement),\n  \"defineEmits\": () => (defineEmits),\n  \"defineExpose\": () => (defineExpose),\n  \"defineProps\": () => (defineProps),\n  \"defineSSRCustomElement\": () => (defineSSRCustomElement),\n  \"devtools\": () => (devtools),\n  \"effect\": () => (effect),\n  \"effectScope\": () => (effectScope),\n  \"getCurrentInstance\": () => (getCurrentInstance),\n  \"getCurrentScope\": () => (getCurrentScope),\n  \"getTransitionRawChildren\": () => (getTransitionRawChildren),\n  \"guardReactiveProps\": () => (guardReactiveProps),\n  \"h\": () => (h),\n  \"handleError\": () => (handleError),\n  \"hydrate\": () => (hydrate),\n  \"initCustomFormatter\": () => (runtime_core_esm_bundler_initCustomFormatter),\n  \"initDirectivesForSSR\": () => (initDirectivesForSSR),\n  \"inject\": () => (inject),\n  \"isMemoSame\": () => (isMemoSame),\n  \"isProxy\": () => (isProxy),\n  \"isReactive\": () => (isReactive),\n  \"isReadonly\": () => (isReadonly),\n  \"isRef\": () => (isRef),\n  \"isRuntimeOnly\": () => (runtime_core_esm_bundler_isRuntimeOnly),\n  \"isShallow\": () => (isShallow),\n  \"isVNode\": () => (isVNode),\n  \"markRaw\": () => (markRaw),\n  \"mergeDefaults\": () => (mergeDefaults),\n  \"mergeProps\": () => (mergeProps),\n  \"nextTick\": () => (nextTick),\n  \"normalizeClass\": () => (normalizeClass),\n  \"normalizeProps\": () => (normalizeProps),\n  \"normalizeStyle\": () => (normalizeStyle),\n  \"onActivated\": () => (onActivated),\n  \"onBeforeMount\": () => (onBeforeMount),\n  \"onBeforeUnmount\": () => (onBeforeUnmount),\n  \"onBeforeUpdate\": () => (onBeforeUpdate),\n  \"onDeactivated\": () => (onDeactivated),\n  \"onErrorCaptured\": () => (onErrorCaptured),\n  \"onMounted\": () => (onMounted),\n  \"onRenderTracked\": () => (onRenderTracked),\n  \"onRenderTriggered\": () => (onRenderTriggered),\n  \"onScopeDispose\": () => (onScopeDispose),\n  \"onServerPrefetch\": () => (onServerPrefetch),\n  \"onUnmounted\": () => (onUnmounted),\n  \"onUpdated\": () => (onUpdated),\n  \"openBlock\": () => (openBlock),\n  \"popScopeId\": () => (popScopeId),\n  \"provide\": () => (provide),\n  \"proxyRefs\": () => (proxyRefs),\n  \"pushScopeId\": () => (pushScopeId),\n  \"queuePostFlushCb\": () => (queuePostFlushCb),\n  \"reactive\": () => (reactive),\n  \"readonly\": () => (readonly),\n  \"ref\": () => (ref),\n  \"registerRuntimeCompiler\": () => (registerRuntimeCompiler),\n  \"render\": () => (render),\n  \"renderList\": () => (renderList),\n  \"renderSlot\": () => (renderSlot),\n  \"resolveComponent\": () => (resolveComponent),\n  \"resolveDirective\": () => (resolveDirective),\n  \"resolveDynamicComponent\": () => (resolveDynamicComponent),\n  \"resolveFilter\": () => (resolveFilter),\n  \"resolveTransitionHooks\": () => (resolveTransitionHooks),\n  \"setBlockTracking\": () => (setBlockTracking),\n  \"setDevtoolsHook\": () => (setDevtoolsHook),\n  \"setTransitionHooks\": () => (setTransitionHooks),\n  \"shallowReactive\": () => (shallowReactive),\n  \"shallowReadonly\": () => (shallowReadonly),\n  \"shallowRef\": () => (shallowRef),\n  \"ssrContextKey\": () => (ssrContextKey),\n  \"ssrUtils\": () => (ssrUtils),\n  \"stop\": () => (stop),\n  \"toDisplayString\": () => (toDisplayString),\n  \"toHandlerKey\": () => (toHandlerKey),\n  \"toHandlers\": () => (toHandlers),\n  \"toRaw\": () => (reactivity_esm_bundler_toRaw),\n  \"toRef\": () => (toRef),\n  \"toRefs\": () => (toRefs),\n  \"transformVNodeArgs\": () => (transformVNodeArgs),\n  \"triggerRef\": () => (triggerRef),\n  \"unref\": () => (unref),\n  \"useAttrs\": () => (useAttrs),\n  \"useCssModule\": () => (useCssModule),\n  \"useCssVars\": () => (useCssVars),\n  \"useSSRContext\": () => (useSSRContext),\n  \"useSlots\": () => (useSlots),\n  \"useTransitionState\": () => (useTransitionState),\n  \"vModelCheckbox\": () => (vModelCheckbox),\n  \"vModelDynamic\": () => (vModelDynamic),\n  \"vModelRadio\": () => (vModelRadio),\n  \"vModelSelect\": () => (vModelSelect),\n  \"vModelText\": () => (vModelText),\n  \"vShow\": () => (vShow),\n  \"version\": () => (version),\n  \"warn\": () => (runtime_core_esm_bundler_warn),\n  \"watch\": () => (watch),\n  \"watchEffect\": () => (watchEffect),\n  \"watchPostEffect\": () => (watchPostEffect),\n  \"watchSyncEffect\": () => (watchSyncEffect),\n  \"withAsyncContext\": () => (withAsyncContext),\n  \"withCtx\": () => (withCtx),\n  \"withDefaults\": () => (withDefaults),\n  \"withDirectives\": () => (withDirectives),\n  \"withKeys\": () => (withKeys),\n  \"withMemo\": () => (withMemo),\n  \"withModifiers\": () => (withModifiers),\n  \"withScopeId\": () => (withScopeId)\n});\n\n;// CONCATENATED MODULE: ./node_modules/@vue/shared/dist/shared.esm-bundler.js\n/**\r\n * Make a map and return a function for checking if a key\r\n * is in that map.\r\n * IMPORTANT: all calls of this function must be prefixed with\r\n * \\/\\*#\\_\\_PURE\\_\\_\\*\\/\r\n * So that rollup can tree-shake them if necessary.\r\n */\nfunction shared_esm_bundler_makeMap(str, expectsLowerCase) {\n  const map = Object.create(null);\n  const list = str.split(',');\n\n  for (let i = 0; i < list.length; i++) {\n    map[list[i]] = true;\n  }\n\n  return expectsLowerCase ? val => !!map[val.toLowerCase()] : val => !!map[val];\n}\n/**\r\n * dev only flag -> name mapping\r\n */\n\n\nconst PatchFlagNames = {\n  [1\n  /* TEXT */\n  ]: `TEXT`,\n  [2\n  /* CLASS */\n  ]: `CLASS`,\n  [4\n  /* STYLE */\n  ]: `STYLE`,\n  [8\n  /* PROPS */\n  ]: `PROPS`,\n  [16\n  /* FULL_PROPS */\n  ]: `FULL_PROPS`,\n  [32\n  /* HYDRATE_EVENTS */\n  ]: `HYDRATE_EVENTS`,\n  [64\n  /* STABLE_FRAGMENT */\n  ]: `STABLE_FRAGMENT`,\n  [128\n  /* KEYED_FRAGMENT */\n  ]: `KEYED_FRAGMENT`,\n  [256\n  /* UNKEYED_FRAGMENT */\n  ]: `UNKEYED_FRAGMENT`,\n  [512\n  /* NEED_PATCH */\n  ]: `NEED_PATCH`,\n  [1024\n  /* DYNAMIC_SLOTS */\n  ]: `DYNAMIC_SLOTS`,\n  [2048\n  /* DEV_ROOT_FRAGMENT */\n  ]: `DEV_ROOT_FRAGMENT`,\n  [-1\n  /* HOISTED */\n  ]: `HOISTED`,\n  [-2\n  /* BAIL */\n  ]: `BAIL`\n};\n/**\r\n * Dev only\r\n */\n\nconst slotFlagsText = {\n  [1\n  /* STABLE */\n  ]: 'STABLE',\n  [2\n  /* DYNAMIC */\n  ]: 'DYNAMIC',\n  [3\n  /* FORWARDED */\n  ]: 'FORWARDED'\n};\nconst GLOBALS_WHITE_LISTED = 'Infinity,undefined,NaN,isFinite,isNaN,parseFloat,parseInt,decodeURI,' + 'decodeURIComponent,encodeURI,encodeURIComponent,Math,Number,Date,Array,' + 'Object,Boolean,String,RegExp,Map,Set,JSON,Intl,BigInt';\nconst isGloballyWhitelisted = /*#__PURE__*/shared_esm_bundler_makeMap(GLOBALS_WHITE_LISTED);\nconst range = 2;\n\nfunction generateCodeFrame(source, start = 0, end = source.length) {\n  // Split the content into individual lines but capture the newline sequence\n  // that separated each line. This is important because the actual sequence is\n  // needed to properly take into account the full line length for offset\n  // comparison\n  let lines = source.split(/(\\r?\\n)/); // Separate the lines and newline sequences into separate arrays for easier referencing\n\n  const newlineSequences = lines.filter((_, idx) => idx % 2 === 1);\n  lines = lines.filter((_, idx) => idx % 2 === 0);\n  let count = 0;\n  const res = [];\n\n  for (let i = 0; i < lines.length; i++) {\n    count += lines[i].length + (newlineSequences[i] && newlineSequences[i].length || 0);\n\n    if (count >= start) {\n      for (let j = i - range; j <= i + range || end > count; j++) {\n        if (j < 0 || j >= lines.length) continue;\n        const line = j + 1;\n        res.push(`${line}${' '.repeat(Math.max(3 - String(line).length, 0))}|  ${lines[j]}`);\n        const lineLength = lines[j].length;\n        const newLineSeqLength = newlineSequences[j] && newlineSequences[j].length || 0;\n\n        if (j === i) {\n          // push underline\n          const pad = start - (count - (lineLength + newLineSeqLength));\n          const length = Math.max(1, end > count ? lineLength - pad : end - start);\n          res.push(`   |  ` + ' '.repeat(pad) + '^'.repeat(length));\n        } else if (j > i) {\n          if (end > count) {\n            const length = Math.max(Math.min(end - count, lineLength), 1);\n            res.push(`   |  ` + '^'.repeat(length));\n          }\n\n          count += lineLength + newLineSeqLength;\n        }\n      }\n\n      break;\n    }\n  }\n\n  return res.join('\\n');\n}\n/**\r\n * On the client we only need to offer special cases for boolean attributes that\r\n * have different names from their corresponding dom properties:\r\n * - itemscope -> N/A\r\n * - allowfullscreen -> allowFullscreen\r\n * - formnovalidate -> formNoValidate\r\n * - ismap -> isMap\r\n * - nomodule -> noModule\r\n * - novalidate -> noValidate\r\n * - readonly -> readOnly\r\n */\n\n\nconst specialBooleanAttrs = `itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly`;\nconst isSpecialBooleanAttr = /*#__PURE__*/shared_esm_bundler_makeMap(specialBooleanAttrs);\n/**\r\n * The full list is needed during SSR to produce the correct initial markup.\r\n */\n\nconst isBooleanAttr = /*#__PURE__*/shared_esm_bundler_makeMap(specialBooleanAttrs + `,async,autofocus,autoplay,controls,default,defer,disabled,hidden,` + `loop,open,required,reversed,scoped,seamless,` + `checked,muted,multiple,selected`);\n/**\r\n * Boolean attributes should be included if the value is truthy or ''.\r\n * e.g. `<select multiple>` compiles to `{ multiple: '' }`\r\n */\n\nfunction includeBooleanAttr(value) {\n  return !!value || value === '';\n}\n\nconst unsafeAttrCharRE = /[>/=\"'\\u0009\\u000a\\u000c\\u0020]/;\nconst attrValidationCache = {};\n\nfunction isSSRSafeAttrName(name) {\n  if (attrValidationCache.hasOwnProperty(name)) {\n    return attrValidationCache[name];\n  }\n\n  const isUnsafe = unsafeAttrCharRE.test(name);\n\n  if (isUnsafe) {\n    console.error(`unsafe attribute name: ${name}`);\n  }\n\n  return attrValidationCache[name] = !isUnsafe;\n}\n\nconst propsToAttrMap = {\n  acceptCharset: 'accept-charset',\n  className: 'class',\n  htmlFor: 'for',\n  httpEquiv: 'http-equiv'\n};\n/**\r\n * CSS properties that accept plain numbers\r\n */\n\nconst isNoUnitNumericStyleProp = /*#__PURE__*/(/* unused pure expression or super */ null && (shared_esm_bundler_makeMap(`animation-iteration-count,border-image-outset,border-image-slice,` + `border-image-width,box-flex,box-flex-group,box-ordinal-group,column-count,` + `columns,flex,flex-grow,flex-positive,flex-shrink,flex-negative,flex-order,` + `grid-row,grid-row-end,grid-row-span,grid-row-start,grid-column,` + `grid-column-end,grid-column-span,grid-column-start,font-weight,line-clamp,` + `line-height,opacity,order,orphans,tab-size,widows,z-index,zoom,` + // SVG\n`fill-opacity,flood-opacity,stop-opacity,stroke-dasharray,stroke-dashoffset,` + `stroke-miterlimit,stroke-opacity,stroke-width`)));\n/**\r\n * Known attributes, this is used for stringification of runtime static nodes\r\n * so that we don't stringify bindings that cannot be set from HTML.\r\n * Don't also forget to allow `data-*` and `aria-*`!\r\n * Generated from https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes\r\n */\n\nconst isKnownHtmlAttr = /*#__PURE__*/(/* unused pure expression or super */ null && (shared_esm_bundler_makeMap(`accept,accept-charset,accesskey,action,align,allow,alt,async,` + `autocapitalize,autocomplete,autofocus,autoplay,background,bgcolor,` + `border,buffered,capture,challenge,charset,checked,cite,class,code,` + `codebase,color,cols,colspan,content,contenteditable,contextmenu,controls,` + `coords,crossorigin,csp,data,datetime,decoding,default,defer,dir,dirname,` + `disabled,download,draggable,dropzone,enctype,enterkeyhint,for,form,` + `formaction,formenctype,formmethod,formnovalidate,formtarget,headers,` + `height,hidden,high,href,hreflang,http-equiv,icon,id,importance,integrity,` + `ismap,itemprop,keytype,kind,label,lang,language,loading,list,loop,low,` + `manifest,max,maxlength,minlength,media,min,multiple,muted,name,novalidate,` + `open,optimum,pattern,ping,placeholder,poster,preload,radiogroup,readonly,` + `referrerpolicy,rel,required,reversed,rows,rowspan,sandbox,scope,scoped,` + `selected,shape,size,sizes,slot,span,spellcheck,src,srcdoc,srclang,srcset,` + `start,step,style,summary,tabindex,target,title,translate,type,usemap,` + `value,width,wrap`)));\n/**\r\n * Generated from https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute\r\n */\n\nconst isKnownSvgAttr = /*#__PURE__*/(/* unused pure expression or super */ null && (shared_esm_bundler_makeMap(`xmlns,accent-height,accumulate,additive,alignment-baseline,alphabetic,amplitude,` + `arabic-form,ascent,attributeName,attributeType,azimuth,baseFrequency,` + `baseline-shift,baseProfile,bbox,begin,bias,by,calcMode,cap-height,class,` + `clip,clipPathUnits,clip-path,clip-rule,color,color-interpolation,` + `color-interpolation-filters,color-profile,color-rendering,` + `contentScriptType,contentStyleType,crossorigin,cursor,cx,cy,d,decelerate,` + `descent,diffuseConstant,direction,display,divisor,dominant-baseline,dur,dx,` + `dy,edgeMode,elevation,enable-background,end,exponent,fill,fill-opacity,` + `fill-rule,filter,filterRes,filterUnits,flood-color,flood-opacity,` + `font-family,font-size,font-size-adjust,font-stretch,font-style,` + `font-variant,font-weight,format,from,fr,fx,fy,g1,g2,glyph-name,` + `glyph-orientation-horizontal,glyph-orientation-vertical,glyphRef,` + `gradientTransform,gradientUnits,hanging,height,href,hreflang,horiz-adv-x,` + `horiz-origin-x,id,ideographic,image-rendering,in,in2,intercept,k,k1,k2,k3,` + `k4,kernelMatrix,kernelUnitLength,kerning,keyPoints,keySplines,keyTimes,` + `lang,lengthAdjust,letter-spacing,lighting-color,limitingConeAngle,local,` + `marker-end,marker-mid,marker-start,markerHeight,markerUnits,markerWidth,` + `mask,maskContentUnits,maskUnits,mathematical,max,media,method,min,mode,` + `name,numOctaves,offset,opacity,operator,order,orient,orientation,origin,` + `overflow,overline-position,overline-thickness,panose-1,paint-order,path,` + `pathLength,patternContentUnits,patternTransform,patternUnits,ping,` + `pointer-events,points,pointsAtX,pointsAtY,pointsAtZ,preserveAlpha,` + `preserveAspectRatio,primitiveUnits,r,radius,referrerPolicy,refX,refY,rel,` + `rendering-intent,repeatCount,repeatDur,requiredExtensions,requiredFeatures,` + `restart,result,rotate,rx,ry,scale,seed,shape-rendering,slope,spacing,` + `specularConstant,specularExponent,speed,spreadMethod,startOffset,` + `stdDeviation,stemh,stemv,stitchTiles,stop-color,stop-opacity,` + `strikethrough-position,strikethrough-thickness,string,stroke,` + `stroke-dasharray,stroke-dashoffset,stroke-linecap,stroke-linejoin,` + `stroke-miterlimit,stroke-opacity,stroke-width,style,surfaceScale,` + `systemLanguage,tabindex,tableValues,target,targetX,targetY,text-anchor,` + `text-decoration,text-rendering,textLength,to,transform,transform-origin,` + `type,u1,u2,underline-position,underline-thickness,unicode,unicode-bidi,` + `unicode-range,units-per-em,v-alphabetic,v-hanging,v-ideographic,` + `v-mathematical,values,vector-effect,version,vert-adv-y,vert-origin-x,` + `vert-origin-y,viewBox,viewTarget,visibility,width,widths,word-spacing,` + `writing-mode,x,x-height,x1,x2,xChannelSelector,xlink:actuate,xlink:arcrole,` + `xlink:href,xlink:role,xlink:show,xlink:title,xlink:type,xml:base,xml:lang,` + `xml:space,y,y1,y2,yChannelSelector,z,zoomAndPan`)));\n\nfunction normalizeStyle(value) {\n  if (shared_esm_bundler_isArray(value)) {\n    const res = {};\n\n    for (let i = 0; i < value.length; i++) {\n      const item = value[i];\n      const normalized = shared_esm_bundler_isString(item) ? parseStringStyle(item) : normalizeStyle(item);\n\n      if (normalized) {\n        for (const key in normalized) {\n          res[key] = normalized[key];\n        }\n      }\n    }\n\n    return res;\n  } else if (shared_esm_bundler_isString(value)) {\n    return value;\n  } else if (shared_esm_bundler_isObject(value)) {\n    return value;\n  }\n}\n\nconst listDelimiterRE = /;(?![^(]*\\))/g;\nconst propertyDelimiterRE = /:(.+)/;\n\nfunction parseStringStyle(cssText) {\n  const ret = {};\n  cssText.split(listDelimiterRE).forEach(item => {\n    if (item) {\n      const tmp = item.split(propertyDelimiterRE);\n      tmp.length > 1 && (ret[tmp[0].trim()] = tmp[1].trim());\n    }\n  });\n  return ret;\n}\n\nfunction stringifyStyle(styles) {\n  let ret = '';\n\n  if (!styles || shared_esm_bundler_isString(styles)) {\n    return ret;\n  }\n\n  for (const key in styles) {\n    const value = styles[key];\n    const normalizedKey = key.startsWith(`--`) ? key : shared_esm_bundler_hyphenate(key);\n\n    if (shared_esm_bundler_isString(value) || typeof value === 'number' && isNoUnitNumericStyleProp(normalizedKey)) {\n      // only render valid values\n      ret += `${normalizedKey}:${value};`;\n    }\n  }\n\n  return ret;\n}\n\nfunction normalizeClass(value) {\n  let res = '';\n\n  if (shared_esm_bundler_isString(value)) {\n    res = value;\n  } else if (shared_esm_bundler_isArray(value)) {\n    for (let i = 0; i < value.length; i++) {\n      const normalized = normalizeClass(value[i]);\n\n      if (normalized) {\n        res += normalized + ' ';\n      }\n    }\n  } else if (shared_esm_bundler_isObject(value)) {\n    for (const name in value) {\n      if (value[name]) {\n        res += name + ' ';\n      }\n    }\n  }\n\n  return res.trim();\n}\n\nfunction normalizeProps(props) {\n  if (!props) return null;\n  let {\n    class: klass,\n    style\n  } = props;\n\n  if (klass && !shared_esm_bundler_isString(klass)) {\n    props.class = normalizeClass(klass);\n  }\n\n  if (style) {\n    props.style = normalizeStyle(style);\n  }\n\n  return props;\n} // These tag configs are shared between compiler-dom and runtime-dom, so they\n// https://developer.mozilla.org/en-US/docs/Web/HTML/Element\n\n\nconst HTML_TAGS = 'html,body,base,head,link,meta,style,title,address,article,aside,footer,' + 'header,h1,h2,h3,h4,h5,h6,nav,section,div,dd,dl,dt,figcaption,' + 'figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,' + 'data,dfn,em,i,kbd,mark,q,rp,rt,ruby,s,samp,small,span,strong,sub,sup,' + 'time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,' + 'canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,' + 'th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,' + 'option,output,progress,select,textarea,details,dialog,menu,' + 'summary,template,blockquote,iframe,tfoot'; // https://developer.mozilla.org/en-US/docs/Web/SVG/Element\n\nconst SVG_TAGS = 'svg,animate,animateMotion,animateTransform,circle,clipPath,color-profile,' + 'defs,desc,discard,ellipse,feBlend,feColorMatrix,feComponentTransfer,' + 'feComposite,feConvolveMatrix,feDiffuseLighting,feDisplacementMap,' + 'feDistanceLight,feDropShadow,feFlood,feFuncA,feFuncB,feFuncG,feFuncR,' + 'feGaussianBlur,feImage,feMerge,feMergeNode,feMorphology,feOffset,' + 'fePointLight,feSpecularLighting,feSpotLight,feTile,feTurbulence,filter,' + 'foreignObject,g,hatch,hatchpath,image,line,linearGradient,marker,mask,' + 'mesh,meshgradient,meshpatch,meshrow,metadata,mpath,path,pattern,' + 'polygon,polyline,radialGradient,rect,set,solidcolor,stop,switch,symbol,' + 'text,textPath,title,tspan,unknown,use,view';\nconst VOID_TAGS = 'area,base,br,col,embed,hr,img,input,link,meta,param,source,track,wbr';\n/**\r\n * Compiler only.\r\n * Do NOT use in runtime code paths unless behind `(process.env.NODE_ENV !== 'production')` flag.\r\n */\n\nconst shared_esm_bundler_isHTMLTag = /*#__PURE__*/shared_esm_bundler_makeMap(HTML_TAGS);\n/**\r\n * Compiler only.\r\n * Do NOT use in runtime code paths unless behind `(process.env.NODE_ENV !== 'production')` flag.\r\n */\n\nconst shared_esm_bundler_isSVGTag = /*#__PURE__*/shared_esm_bundler_makeMap(SVG_TAGS);\n/**\r\n * Compiler only.\r\n * Do NOT use in runtime code paths unless behind `(process.env.NODE_ENV !== 'production')` flag.\r\n */\n\nconst isVoidTag = /*#__PURE__*/shared_esm_bundler_makeMap(VOID_TAGS);\nconst escapeRE = /[\"'&<>]/;\n\nfunction escapeHtml(string) {\n  const str = '' + string;\n  const match = escapeRE.exec(str);\n\n  if (!match) {\n    return str;\n  }\n\n  let html = '';\n  let escaped;\n  let index;\n  let lastIndex = 0;\n\n  for (index = match.index; index < str.length; index++) {\n    switch (str.charCodeAt(index)) {\n      case 34:\n        // \"\n        escaped = '&quot;';\n        break;\n\n      case 38:\n        // &\n        escaped = '&amp;';\n        break;\n\n      case 39:\n        // '\n        escaped = '&#39;';\n        break;\n\n      case 60:\n        // <\n        escaped = '&lt;';\n        break;\n\n      case 62:\n        // >\n        escaped = '&gt;';\n        break;\n\n      default:\n        continue;\n    }\n\n    if (lastIndex !== index) {\n      html += str.slice(lastIndex, index);\n    }\n\n    lastIndex = index + 1;\n    html += escaped;\n  }\n\n  return lastIndex !== index ? html + str.slice(lastIndex, index) : html;\n} // https://www.w3.org/TR/html52/syntax.html#comments\n\n\nconst commentStripRE = /^-?>|\x3c!--|--\x3e|--!>|<!-$/g;\n\nfunction escapeHtmlComment(src) {\n  return src.replace(commentStripRE, '');\n}\n\nfunction looseCompareArrays(a, b) {\n  if (a.length !== b.length) return false;\n  let equal = true;\n\n  for (let i = 0; equal && i < a.length; i++) {\n    equal = looseEqual(a[i], b[i]);\n  }\n\n  return equal;\n}\n\nfunction looseEqual(a, b) {\n  if (a === b) return true;\n  let aValidType = isDate(a);\n  let bValidType = isDate(b);\n\n  if (aValidType || bValidType) {\n    return aValidType && bValidType ? a.getTime() === b.getTime() : false;\n  }\n\n  aValidType = shared_esm_bundler_isArray(a);\n  bValidType = shared_esm_bundler_isArray(b);\n\n  if (aValidType || bValidType) {\n    return aValidType && bValidType ? looseCompareArrays(a, b) : false;\n  }\n\n  aValidType = shared_esm_bundler_isObject(a);\n  bValidType = shared_esm_bundler_isObject(b);\n\n  if (aValidType || bValidType) {\n    /* istanbul ignore if: this if will probably never be called */\n    if (!aValidType || !bValidType) {\n      return false;\n    }\n\n    const aKeysCount = Object.keys(a).length;\n    const bKeysCount = Object.keys(b).length;\n\n    if (aKeysCount !== bKeysCount) {\n      return false;\n    }\n\n    for (const key in a) {\n      const aHasKey = a.hasOwnProperty(key);\n      const bHasKey = b.hasOwnProperty(key);\n\n      if (aHasKey && !bHasKey || !aHasKey && bHasKey || !looseEqual(a[key], b[key])) {\n        return false;\n      }\n    }\n  }\n\n  return String(a) === String(b);\n}\n\nfunction looseIndexOf(arr, val) {\n  return arr.findIndex(item => looseEqual(item, val));\n}\n/**\r\n * For converting {{ interpolation }} values to displayed strings.\r\n * @private\r\n */\n\n\nconst toDisplayString = val => {\n  return shared_esm_bundler_isString(val) ? val : val == null ? '' : shared_esm_bundler_isArray(val) || shared_esm_bundler_isObject(val) && (val.toString === objectToString || !isFunction(val.toString)) ? JSON.stringify(val, replacer, 2) : String(val);\n};\n\nconst replacer = (_key, val) => {\n  // can't use isRef here since @vue/shared has no deps\n  if (val && val.__v_isRef) {\n    return replacer(_key, val.value);\n  } else if (isMap(val)) {\n    return {\n      [`Map(${val.size})`]: [...val.entries()].reduce((entries, [key, val]) => {\n        entries[`${key} =>`] = val;\n        return entries;\n      }, {})\n    };\n  } else if (isSet(val)) {\n    return {\n      [`Set(${val.size})`]: [...val.values()]\n    };\n  } else if (shared_esm_bundler_isObject(val) && !shared_esm_bundler_isArray(val) && !isPlainObject(val)) {\n    return String(val);\n  }\n\n  return val;\n};\n\nconst EMPTY_OBJ =  false ? 0 : {};\nconst EMPTY_ARR =  false ? 0 : [];\n\nconst shared_esm_bundler_NOOP = () => {};\n/**\r\n * Always return false.\r\n */\n\n\nconst shared_esm_bundler_NO = () => false;\n\nconst onRE = /^on[^a-z]/;\n\nconst isOn = key => onRE.test(key);\n\nconst isModelListener = key => key.startsWith('onUpdate:');\n\nconst shared_esm_bundler_extend = Object.assign;\n\nconst remove = (arr, el) => {\n  const i = arr.indexOf(el);\n\n  if (i > -1) {\n    arr.splice(i, 1);\n  }\n};\n\nconst shared_esm_bundler_hasOwnProperty = Object.prototype.hasOwnProperty;\n\nconst shared_esm_bundler_hasOwn = (val, key) => shared_esm_bundler_hasOwnProperty.call(val, key);\n\nconst shared_esm_bundler_isArray = Array.isArray;\n\nconst isMap = val => toTypeString(val) === '[object Map]';\n\nconst isSet = val => toTypeString(val) === '[object Set]';\n\nconst isDate = val => val instanceof Date;\n\nconst isFunction = val => typeof val === 'function';\n\nconst shared_esm_bundler_isString = val => typeof val === 'string';\n\nconst isSymbol = val => typeof val === 'symbol';\n\nconst shared_esm_bundler_isObject = val => val !== null && typeof val === 'object';\n\nconst isPromise = val => {\n  return shared_esm_bundler_isObject(val) && isFunction(val.then) && isFunction(val.catch);\n};\n\nconst objectToString = Object.prototype.toString;\n\nconst toTypeString = value => objectToString.call(value);\n\nconst shared_esm_bundler_toRawType = value => {\n  // extract \"RawType\" from strings like \"[object RawType]\"\n  return toTypeString(value).slice(8, -1);\n};\n\nconst isPlainObject = val => toTypeString(val) === '[object Object]';\n\nconst isIntegerKey = key => shared_esm_bundler_isString(key) && key !== 'NaN' && key[0] !== '-' && '' + parseInt(key, 10) === key;\n\nconst isReservedProp = /*#__PURE__*/shared_esm_bundler_makeMap( // the leading comma is intentional so empty string \"\" is also included\n',key,ref,ref_for,ref_key,' + 'onVnodeBeforeMount,onVnodeMounted,' + 'onVnodeBeforeUpdate,onVnodeUpdated,' + 'onVnodeBeforeUnmount,onVnodeUnmounted');\nconst shared_esm_bundler_isBuiltInDirective = /*#__PURE__*/shared_esm_bundler_makeMap('bind,cloak,else-if,else,for,html,if,model,on,once,pre,show,slot,text,memo');\n\nconst cacheStringFunction = fn => {\n  const cache = Object.create(null);\n  return str => {\n    const hit = cache[str];\n    return hit || (cache[str] = fn(str));\n  };\n};\n\nconst camelizeRE = /-(\\w)/g;\n/**\r\n * @private\r\n */\n\nconst camelize = cacheStringFunction(str => {\n  return str.replace(camelizeRE, (_, c) => c ? c.toUpperCase() : '');\n});\nconst hyphenateRE = /\\B([A-Z])/g;\n/**\r\n * @private\r\n */\n\nconst shared_esm_bundler_hyphenate = cacheStringFunction(str => str.replace(hyphenateRE, '-$1').toLowerCase());\n/**\r\n * @private\r\n */\n\nconst shared_esm_bundler_capitalize = cacheStringFunction(str => str.charAt(0).toUpperCase() + str.slice(1));\n/**\r\n * @private\r\n */\n\nconst toHandlerKey = cacheStringFunction(str => str ? `on${shared_esm_bundler_capitalize(str)}` : ``); // compare whether a value has changed, accounting for NaN.\n\nconst hasChanged = (value, oldValue) => !Object.is(value, oldValue);\n\nconst invokeArrayFns = (fns, arg) => {\n  for (let i = 0; i < fns.length; i++) {\n    fns[i](arg);\n  }\n};\n\nconst def = (obj, key, value) => {\n  Object.defineProperty(obj, key, {\n    configurable: true,\n    enumerable: false,\n    value\n  });\n};\n\nconst toNumber = val => {\n  const n = parseFloat(val);\n  return isNaN(n) ? val : n;\n};\n\nlet _globalThis;\n\nconst getGlobalThis = () => {\n  return _globalThis || (_globalThis = typeof globalThis !== 'undefined' ? globalThis : typeof self !== 'undefined' ? self : typeof window !== 'undefined' ? window : typeof __webpack_require__.g !== 'undefined' ? __webpack_require__.g : {});\n};\n\n\n;// CONCATENATED MODULE: ./node_modules/@vue/reactivity/dist/reactivity.esm-bundler.js\n\n\nfunction reactivity_esm_bundler_warn(msg, ...args) {\n  console.warn(`[Vue warn] ${msg}`, ...args);\n}\n\nlet activeEffectScope;\n\nclass EffectScope {\n  constructor(detached = false) {\n    /**\r\n     * @internal\r\n     */\n    this.active = true;\n    /**\r\n     * @internal\r\n     */\n\n    this.effects = [];\n    /**\r\n     * @internal\r\n     */\n\n    this.cleanups = [];\n\n    if (!detached && activeEffectScope) {\n      this.parent = activeEffectScope;\n      this.index = (activeEffectScope.scopes || (activeEffectScope.scopes = [])).push(this) - 1;\n    }\n  }\n\n  run(fn) {\n    if (this.active) {\n      const currentEffectScope = activeEffectScope;\n\n      try {\n        activeEffectScope = this;\n        return fn();\n      } finally {\n        activeEffectScope = currentEffectScope;\n      }\n    } else if (false) {}\n  }\n  /**\r\n   * This should only be called on non-detached scopes\r\n   * @internal\r\n   */\n\n\n  on() {\n    activeEffectScope = this;\n  }\n  /**\r\n   * This should only be called on non-detached scopes\r\n   * @internal\r\n   */\n\n\n  off() {\n    activeEffectScope = this.parent;\n  }\n\n  stop(fromParent) {\n    if (this.active) {\n      let i, l;\n\n      for (i = 0, l = this.effects.length; i < l; i++) {\n        this.effects[i].stop();\n      }\n\n      for (i = 0, l = this.cleanups.length; i < l; i++) {\n        this.cleanups[i]();\n      }\n\n      if (this.scopes) {\n        for (i = 0, l = this.scopes.length; i < l; i++) {\n          this.scopes[i].stop(true);\n        }\n      } // nested scope, dereference from parent to avoid memory leaks\n\n\n      if (this.parent && !fromParent) {\n        // optimized O(1) removal\n        const last = this.parent.scopes.pop();\n\n        if (last && last !== this) {\n          this.parent.scopes[this.index] = last;\n          last.index = this.index;\n        }\n      }\n\n      this.active = false;\n    }\n  }\n\n}\n\nfunction effectScope(detached) {\n  return new EffectScope(detached);\n}\n\nfunction recordEffectScope(effect, scope = activeEffectScope) {\n  if (scope && scope.active) {\n    scope.effects.push(effect);\n  }\n}\n\nfunction getCurrentScope() {\n  return activeEffectScope;\n}\n\nfunction onScopeDispose(fn) {\n  if (activeEffectScope) {\n    activeEffectScope.cleanups.push(fn);\n  } else if (false) {}\n}\n\nconst createDep = effects => {\n  const dep = new Set(effects);\n  dep.w = 0;\n  dep.n = 0;\n  return dep;\n};\n\nconst wasTracked = dep => (dep.w & trackOpBit) > 0;\n\nconst newTracked = dep => (dep.n & trackOpBit) > 0;\n\nconst initDepMarkers = ({\n  deps\n}) => {\n  if (deps.length) {\n    for (let i = 0; i < deps.length; i++) {\n      deps[i].w |= trackOpBit; // set was tracked\n    }\n  }\n};\n\nconst finalizeDepMarkers = effect => {\n  const {\n    deps\n  } = effect;\n\n  if (deps.length) {\n    let ptr = 0;\n\n    for (let i = 0; i < deps.length; i++) {\n      const dep = deps[i];\n\n      if (wasTracked(dep) && !newTracked(dep)) {\n        dep.delete(effect);\n      } else {\n        deps[ptr++] = dep;\n      } // clear bits\n\n\n      dep.w &= ~trackOpBit;\n      dep.n &= ~trackOpBit;\n    }\n\n    deps.length = ptr;\n  }\n};\n\nconst targetMap = new WeakMap(); // The number of effects currently being tracked recursively.\n\nlet effectTrackDepth = 0;\nlet trackOpBit = 1;\n/**\r\n * The bitwise track markers support at most 30 levels of recursion.\r\n * This value is chosen to enable modern JS engines to use a SMI on all platforms.\r\n * When recursion depth is greater, fall back to using a full cleanup.\r\n */\n\nconst maxMarkerBits = 30;\nlet activeEffect;\nconst ITERATE_KEY = Symbol( false ? 0 : '');\nconst MAP_KEY_ITERATE_KEY = Symbol( false ? 0 : '');\n\nclass ReactiveEffect {\n  constructor(fn, scheduler = null, scope) {\n    this.fn = fn;\n    this.scheduler = scheduler;\n    this.active = true;\n    this.deps = [];\n    this.parent = undefined;\n    recordEffectScope(this, scope);\n  }\n\n  run() {\n    if (!this.active) {\n      return this.fn();\n    }\n\n    let parent = activeEffect;\n    let lastShouldTrack = shouldTrack;\n\n    while (parent) {\n      if (parent === this) {\n        return;\n      }\n\n      parent = parent.parent;\n    }\n\n    try {\n      this.parent = activeEffect;\n      activeEffect = this;\n      shouldTrack = true;\n      trackOpBit = 1 << ++effectTrackDepth;\n\n      if (effectTrackDepth <= maxMarkerBits) {\n        initDepMarkers(this);\n      } else {\n        cleanupEffect(this);\n      }\n\n      return this.fn();\n    } finally {\n      if (effectTrackDepth <= maxMarkerBits) {\n        finalizeDepMarkers(this);\n      }\n\n      trackOpBit = 1 << --effectTrackDepth;\n      activeEffect = this.parent;\n      shouldTrack = lastShouldTrack;\n      this.parent = undefined;\n\n      if (this.deferStop) {\n        this.stop();\n      }\n    }\n  }\n\n  stop() {\n    // stopped while running itself - defer the cleanup\n    if (activeEffect === this) {\n      this.deferStop = true;\n    } else if (this.active) {\n      cleanupEffect(this);\n\n      if (this.onStop) {\n        this.onStop();\n      }\n\n      this.active = false;\n    }\n  }\n\n}\n\nfunction cleanupEffect(effect) {\n  const {\n    deps\n  } = effect;\n\n  if (deps.length) {\n    for (let i = 0; i < deps.length; i++) {\n      deps[i].delete(effect);\n    }\n\n    deps.length = 0;\n  }\n}\n\nfunction effect(fn, options) {\n  if (fn.effect) {\n    fn = fn.effect.fn;\n  }\n\n  const _effect = new ReactiveEffect(fn);\n\n  if (options) {\n    shared_esm_bundler_extend(_effect, options);\n    if (options.scope) recordEffectScope(_effect, options.scope);\n  }\n\n  if (!options || !options.lazy) {\n    _effect.run();\n  }\n\n  const runner = _effect.run.bind(_effect);\n\n  runner.effect = _effect;\n  return runner;\n}\n\nfunction stop(runner) {\n  runner.effect.stop();\n}\n\nlet shouldTrack = true;\nconst trackStack = [];\n\nfunction pauseTracking() {\n  trackStack.push(shouldTrack);\n  shouldTrack = false;\n}\n\nfunction enableTracking() {\n  trackStack.push(shouldTrack);\n  shouldTrack = true;\n}\n\nfunction resetTracking() {\n  const last = trackStack.pop();\n  shouldTrack = last === undefined ? true : last;\n}\n\nfunction track(target, type, key) {\n  if (shouldTrack && activeEffect) {\n    let depsMap = targetMap.get(target);\n\n    if (!depsMap) {\n      targetMap.set(target, depsMap = new Map());\n    }\n\n    let dep = depsMap.get(key);\n\n    if (!dep) {\n      depsMap.set(key, dep = createDep());\n    }\n\n    const eventInfo =  false ? 0 : undefined;\n    trackEffects(dep, eventInfo);\n  }\n}\n\nfunction trackEffects(dep, debuggerEventExtraInfo) {\n  let shouldTrack = false;\n\n  if (effectTrackDepth <= maxMarkerBits) {\n    if (!newTracked(dep)) {\n      dep.n |= trackOpBit; // set newly tracked\n\n      shouldTrack = !wasTracked(dep);\n    }\n  } else {\n    // Full cleanup mode.\n    shouldTrack = !dep.has(activeEffect);\n  }\n\n  if (shouldTrack) {\n    dep.add(activeEffect);\n    activeEffect.deps.push(dep);\n\n    if (false) {}\n  }\n}\n\nfunction trigger(target, type, key, newValue, oldValue, oldTarget) {\n  const depsMap = targetMap.get(target);\n\n  if (!depsMap) {\n    // never been tracked\n    return;\n  }\n\n  let deps = [];\n\n  if (type === \"clear\"\n  /* CLEAR */\n  ) {\n    // collection being cleared\n    // trigger all effects for target\n    deps = [...depsMap.values()];\n  } else if (key === 'length' && shared_esm_bundler_isArray(target)) {\n    depsMap.forEach((dep, key) => {\n      if (key === 'length' || key >= newValue) {\n        deps.push(dep);\n      }\n    });\n  } else {\n    // schedule runs for SET | ADD | DELETE\n    if (key !== void 0) {\n      deps.push(depsMap.get(key));\n    } // also run for iteration key on ADD | DELETE | Map.SET\n\n\n    switch (type) {\n      case \"add\"\n      /* ADD */\n      :\n        if (!shared_esm_bundler_isArray(target)) {\n          deps.push(depsMap.get(ITERATE_KEY));\n\n          if (isMap(target)) {\n            deps.push(depsMap.get(MAP_KEY_ITERATE_KEY));\n          }\n        } else if (isIntegerKey(key)) {\n          // new index added to array -> length changes\n          deps.push(depsMap.get('length'));\n        }\n\n        break;\n\n      case \"delete\"\n      /* DELETE */\n      :\n        if (!shared_esm_bundler_isArray(target)) {\n          deps.push(depsMap.get(ITERATE_KEY));\n\n          if (isMap(target)) {\n            deps.push(depsMap.get(MAP_KEY_ITERATE_KEY));\n          }\n        }\n\n        break;\n\n      case \"set\"\n      /* SET */\n      :\n        if (isMap(target)) {\n          deps.push(depsMap.get(ITERATE_KEY));\n        }\n\n        break;\n    }\n  }\n\n  const eventInfo =  false ? 0 : undefined;\n\n  if (deps.length === 1) {\n    if (deps[0]) {\n      if (false) {} else {\n        triggerEffects(deps[0]);\n      }\n    }\n  } else {\n    const effects = [];\n\n    for (const dep of deps) {\n      if (dep) {\n        effects.push(...dep);\n      }\n    }\n\n    if (false) {} else {\n      triggerEffects(createDep(effects));\n    }\n  }\n}\n\nfunction triggerEffects(dep, debuggerEventExtraInfo) {\n  // spread into array for stabilization\n  for (const effect of shared_esm_bundler_isArray(dep) ? dep : [...dep]) {\n    if (effect !== activeEffect || effect.allowRecurse) {\n      if (false) {}\n\n      if (effect.scheduler) {\n        effect.scheduler();\n      } else {\n        effect.run();\n      }\n    }\n  }\n}\n\nconst isNonTrackableKeys = /*#__PURE__*/shared_esm_bundler_makeMap(`__proto__,__v_isRef,__isVue`);\nconst builtInSymbols = new Set( /*#__PURE__*/Object.getOwnPropertyNames(Symbol).map(key => Symbol[key]).filter(isSymbol));\nconst get = /*#__PURE__*/createGetter();\nconst shallowGet = /*#__PURE__*/createGetter(false, true);\nconst readonlyGet = /*#__PURE__*/createGetter(true);\nconst shallowReadonlyGet = /*#__PURE__*/createGetter(true, true);\nconst arrayInstrumentations = /*#__PURE__*/createArrayInstrumentations();\n\nfunction createArrayInstrumentations() {\n  const instrumentations = {};\n  ['includes', 'indexOf', 'lastIndexOf'].forEach(key => {\n    instrumentations[key] = function (...args) {\n      const arr = reactivity_esm_bundler_toRaw(this);\n\n      for (let i = 0, l = this.length; i < l; i++) {\n        track(arr, \"get\"\n        /* GET */\n        , i + '');\n      } // we run the method using the original args first (which may be reactive)\n\n\n      const res = arr[key](...args);\n\n      if (res === -1 || res === false) {\n        // if that didn't work, run it again using raw values.\n        return arr[key](...args.map(reactivity_esm_bundler_toRaw));\n      } else {\n        return res;\n      }\n    };\n  });\n  ['push', 'pop', 'shift', 'unshift', 'splice'].forEach(key => {\n    instrumentations[key] = function (...args) {\n      pauseTracking();\n      const res = reactivity_esm_bundler_toRaw(this)[key].apply(this, args);\n      resetTracking();\n      return res;\n    };\n  });\n  return instrumentations;\n}\n\nfunction createGetter(isReadonly = false, shallow = false) {\n  return function get(target, key, receiver) {\n    if (key === \"__v_isReactive\"\n    /* IS_REACTIVE */\n    ) {\n      return !isReadonly;\n    } else if (key === \"__v_isReadonly\"\n    /* IS_READONLY */\n    ) {\n      return isReadonly;\n    } else if (key === \"__v_isShallow\"\n    /* IS_SHALLOW */\n    ) {\n      return shallow;\n    } else if (key === \"__v_raw\"\n    /* RAW */\n    && receiver === (isReadonly ? shallow ? shallowReadonlyMap : readonlyMap : shallow ? shallowReactiveMap : reactiveMap).get(target)) {\n      return target;\n    }\n\n    const targetIsArray = shared_esm_bundler_isArray(target);\n\n    if (!isReadonly && targetIsArray && shared_esm_bundler_hasOwn(arrayInstrumentations, key)) {\n      return Reflect.get(arrayInstrumentations, key, receiver);\n    }\n\n    const res = Reflect.get(target, key, receiver);\n\n    if (isSymbol(key) ? builtInSymbols.has(key) : isNonTrackableKeys(key)) {\n      return res;\n    }\n\n    if (!isReadonly) {\n      track(target, \"get\"\n      /* GET */\n      , key);\n    }\n\n    if (shallow) {\n      return res;\n    }\n\n    if (isRef(res)) {\n      // ref unwrapping - does not apply for Array + integer key.\n      const shouldUnwrap = !targetIsArray || !isIntegerKey(key);\n      return shouldUnwrap ? res.value : res;\n    }\n\n    if (shared_esm_bundler_isObject(res)) {\n      // Convert returned value into a proxy as well. we do the isObject check\n      // here to avoid invalid value warning. Also need to lazy access readonly\n      // and reactive here to avoid circular dependency.\n      return isReadonly ? readonly(res) : reactive(res);\n    }\n\n    return res;\n  };\n}\n\nconst set = /*#__PURE__*/createSetter();\nconst shallowSet = /*#__PURE__*/createSetter(true);\n\nfunction createSetter(shallow = false) {\n  return function set(target, key, value, receiver) {\n    let oldValue = target[key];\n\n    if (isReadonly(oldValue) && isRef(oldValue) && !isRef(value)) {\n      return false;\n    }\n\n    if (!shallow && !isReadonly(value)) {\n      if (!isShallow(value)) {\n        value = reactivity_esm_bundler_toRaw(value);\n        oldValue = reactivity_esm_bundler_toRaw(oldValue);\n      }\n\n      if (!shared_esm_bundler_isArray(target) && isRef(oldValue) && !isRef(value)) {\n        oldValue.value = value;\n        return true;\n      }\n    }\n\n    const hadKey = shared_esm_bundler_isArray(target) && isIntegerKey(key) ? Number(key) < target.length : shared_esm_bundler_hasOwn(target, key);\n    const result = Reflect.set(target, key, value, receiver); // don't trigger if target is something up in the prototype chain of original\n\n    if (target === reactivity_esm_bundler_toRaw(receiver)) {\n      if (!hadKey) {\n        trigger(target, \"add\"\n        /* ADD */\n        , key, value);\n      } else if (hasChanged(value, oldValue)) {\n        trigger(target, \"set\"\n        /* SET */\n        , key, value, oldValue);\n      }\n    }\n\n    return result;\n  };\n}\n\nfunction deleteProperty(target, key) {\n  const hadKey = shared_esm_bundler_hasOwn(target, key);\n  const oldValue = target[key];\n  const result = Reflect.deleteProperty(target, key);\n\n  if (result && hadKey) {\n    trigger(target, \"delete\"\n    /* DELETE */\n    , key, undefined, oldValue);\n  }\n\n  return result;\n}\n\nfunction has(target, key) {\n  const result = Reflect.has(target, key);\n\n  if (!isSymbol(key) || !builtInSymbols.has(key)) {\n    track(target, \"has\"\n    /* HAS */\n    , key);\n  }\n\n  return result;\n}\n\nfunction ownKeys(target) {\n  track(target, \"iterate\"\n  /* ITERATE */\n  , shared_esm_bundler_isArray(target) ? 'length' : ITERATE_KEY);\n  return Reflect.ownKeys(target);\n}\n\nconst mutableHandlers = {\n  get,\n  set,\n  deleteProperty,\n  has,\n  ownKeys\n};\nconst readonlyHandlers = {\n  get: readonlyGet,\n\n  set(target, key) {\n    if (false) {}\n\n    return true;\n  },\n\n  deleteProperty(target, key) {\n    if (false) {}\n\n    return true;\n  }\n\n};\nconst shallowReactiveHandlers = /*#__PURE__*/shared_esm_bundler_extend({}, mutableHandlers, {\n  get: shallowGet,\n  set: shallowSet\n}); // Props handlers are special in the sense that it should not unwrap top-level\n// refs (in order to allow refs to be explicitly passed down), but should\n// retain the reactivity of the normal readonly object.\n\nconst shallowReadonlyHandlers = /*#__PURE__*/shared_esm_bundler_extend({}, readonlyHandlers, {\n  get: shallowReadonlyGet\n});\n\nconst toShallow = value => value;\n\nconst getProto = v => Reflect.getPrototypeOf(v);\n\nfunction get$1(target, key, isReadonly = false, isShallow = false) {\n  // #1772: readonly(reactive(Map)) should return readonly + reactive version\n  // of the value\n  target = target[\"__v_raw\"\n  /* RAW */\n  ];\n  const rawTarget = reactivity_esm_bundler_toRaw(target);\n  const rawKey = reactivity_esm_bundler_toRaw(key);\n\n  if (key !== rawKey) {\n    !isReadonly && track(rawTarget, \"get\"\n    /* GET */\n    , key);\n  }\n\n  !isReadonly && track(rawTarget, \"get\"\n  /* GET */\n  , rawKey);\n  const {\n    has\n  } = getProto(rawTarget);\n  const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive;\n\n  if (has.call(rawTarget, key)) {\n    return wrap(target.get(key));\n  } else if (has.call(rawTarget, rawKey)) {\n    return wrap(target.get(rawKey));\n  } else if (target !== rawTarget) {\n    // #3602 readonly(reactive(Map))\n    // ensure that the nested reactive `Map` can do tracking for itself\n    target.get(key);\n  }\n}\n\nfunction has$1(key, isReadonly = false) {\n  const target = this[\"__v_raw\"\n  /* RAW */\n  ];\n  const rawTarget = reactivity_esm_bundler_toRaw(target);\n  const rawKey = reactivity_esm_bundler_toRaw(key);\n\n  if (key !== rawKey) {\n    !isReadonly && track(rawTarget, \"has\"\n    /* HAS */\n    , key);\n  }\n\n  !isReadonly && track(rawTarget, \"has\"\n  /* HAS */\n  , rawKey);\n  return key === rawKey ? target.has(key) : target.has(key) || target.has(rawKey);\n}\n\nfunction size(target, isReadonly = false) {\n  target = target[\"__v_raw\"\n  /* RAW */\n  ];\n  !isReadonly && track(reactivity_esm_bundler_toRaw(target), \"iterate\"\n  /* ITERATE */\n  , ITERATE_KEY);\n  return Reflect.get(target, 'size', target);\n}\n\nfunction add(value) {\n  value = reactivity_esm_bundler_toRaw(value);\n  const target = reactivity_esm_bundler_toRaw(this);\n  const proto = getProto(target);\n  const hadKey = proto.has.call(target, value);\n\n  if (!hadKey) {\n    target.add(value);\n    trigger(target, \"add\"\n    /* ADD */\n    , value, value);\n  }\n\n  return this;\n}\n\nfunction set$1(key, value) {\n  value = reactivity_esm_bundler_toRaw(value);\n  const target = reactivity_esm_bundler_toRaw(this);\n  const {\n    has,\n    get\n  } = getProto(target);\n  let hadKey = has.call(target, key);\n\n  if (!hadKey) {\n    key = reactivity_esm_bundler_toRaw(key);\n    hadKey = has.call(target, key);\n  } else if (false) {}\n\n  const oldValue = get.call(target, key);\n  target.set(key, value);\n\n  if (!hadKey) {\n    trigger(target, \"add\"\n    /* ADD */\n    , key, value);\n  } else if (hasChanged(value, oldValue)) {\n    trigger(target, \"set\"\n    /* SET */\n    , key, value, oldValue);\n  }\n\n  return this;\n}\n\nfunction deleteEntry(key) {\n  const target = reactivity_esm_bundler_toRaw(this);\n  const {\n    has,\n    get\n  } = getProto(target);\n  let hadKey = has.call(target, key);\n\n  if (!hadKey) {\n    key = reactivity_esm_bundler_toRaw(key);\n    hadKey = has.call(target, key);\n  } else if (false) {}\n\n  const oldValue = get ? get.call(target, key) : undefined; // forward the operation before queueing reactions\n\n  const result = target.delete(key);\n\n  if (hadKey) {\n    trigger(target, \"delete\"\n    /* DELETE */\n    , key, undefined, oldValue);\n  }\n\n  return result;\n}\n\nfunction clear() {\n  const target = reactivity_esm_bundler_toRaw(this);\n  const hadItems = target.size !== 0;\n  const oldTarget =  false ? 0 : undefined; // forward the operation before queueing reactions\n\n  const result = target.clear();\n\n  if (hadItems) {\n    trigger(target, \"clear\"\n    /* CLEAR */\n    , undefined, undefined, oldTarget);\n  }\n\n  return result;\n}\n\nfunction createForEach(isReadonly, isShallow) {\n  return function forEach(callback, thisArg) {\n    const observed = this;\n    const target = observed[\"__v_raw\"\n    /* RAW */\n    ];\n    const rawTarget = reactivity_esm_bundler_toRaw(target);\n    const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive;\n    !isReadonly && track(rawTarget, \"iterate\"\n    /* ITERATE */\n    , ITERATE_KEY);\n    return target.forEach((value, key) => {\n      // important: make sure the callback is\n      // 1. invoked with the reactive map as `this` and 3rd arg\n      // 2. the value received should be a corresponding reactive/readonly.\n      return callback.call(thisArg, wrap(value), wrap(key), observed);\n    });\n  };\n}\n\nfunction createIterableMethod(method, isReadonly, isShallow) {\n  return function (...args) {\n    const target = this[\"__v_raw\"\n    /* RAW */\n    ];\n    const rawTarget = reactivity_esm_bundler_toRaw(target);\n    const targetIsMap = isMap(rawTarget);\n    const isPair = method === 'entries' || method === Symbol.iterator && targetIsMap;\n    const isKeyOnly = method === 'keys' && targetIsMap;\n    const innerIterator = target[method](...args);\n    const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive;\n    !isReadonly && track(rawTarget, \"iterate\"\n    /* ITERATE */\n    , isKeyOnly ? MAP_KEY_ITERATE_KEY : ITERATE_KEY); // return a wrapped iterator which returns observed versions of the\n    // values emitted from the real iterator\n\n    return {\n      // iterator protocol\n      next() {\n        const {\n          value,\n          done\n        } = innerIterator.next();\n        return done ? {\n          value,\n          done\n        } : {\n          value: isPair ? [wrap(value[0]), wrap(value[1])] : wrap(value),\n          done\n        };\n      },\n\n      // iterable protocol\n      [Symbol.iterator]() {\n        return this;\n      }\n\n    };\n  };\n}\n\nfunction createReadonlyMethod(type) {\n  return function (...args) {\n    if (false) {}\n\n    return type === \"delete\"\n    /* DELETE */\n    ? false : this;\n  };\n}\n\nfunction createInstrumentations() {\n  const mutableInstrumentations = {\n    get(key) {\n      return get$1(this, key);\n    },\n\n    get size() {\n      return size(this);\n    },\n\n    has: has$1,\n    add,\n    set: set$1,\n    delete: deleteEntry,\n    clear,\n    forEach: createForEach(false, false)\n  };\n  const shallowInstrumentations = {\n    get(key) {\n      return get$1(this, key, false, true);\n    },\n\n    get size() {\n      return size(this);\n    },\n\n    has: has$1,\n    add,\n    set: set$1,\n    delete: deleteEntry,\n    clear,\n    forEach: createForEach(false, true)\n  };\n  const readonlyInstrumentations = {\n    get(key) {\n      return get$1(this, key, true);\n    },\n\n    get size() {\n      return size(this, true);\n    },\n\n    has(key) {\n      return has$1.call(this, key, true);\n    },\n\n    add: createReadonlyMethod(\"add\"\n    /* ADD */\n    ),\n    set: createReadonlyMethod(\"set\"\n    /* SET */\n    ),\n    delete: createReadonlyMethod(\"delete\"\n    /* DELETE */\n    ),\n    clear: createReadonlyMethod(\"clear\"\n    /* CLEAR */\n    ),\n    forEach: createForEach(true, false)\n  };\n  const shallowReadonlyInstrumentations = {\n    get(key) {\n      return get$1(this, key, true, true);\n    },\n\n    get size() {\n      return size(this, true);\n    },\n\n    has(key) {\n      return has$1.call(this, key, true);\n    },\n\n    add: createReadonlyMethod(\"add\"\n    /* ADD */\n    ),\n    set: createReadonlyMethod(\"set\"\n    /* SET */\n    ),\n    delete: createReadonlyMethod(\"delete\"\n    /* DELETE */\n    ),\n    clear: createReadonlyMethod(\"clear\"\n    /* CLEAR */\n    ),\n    forEach: createForEach(true, true)\n  };\n  const iteratorMethods = ['keys', 'values', 'entries', Symbol.iterator];\n  iteratorMethods.forEach(method => {\n    mutableInstrumentations[method] = createIterableMethod(method, false, false);\n    readonlyInstrumentations[method] = createIterableMethod(method, true, false);\n    shallowInstrumentations[method] = createIterableMethod(method, false, true);\n    shallowReadonlyInstrumentations[method] = createIterableMethod(method, true, true);\n  });\n  return [mutableInstrumentations, readonlyInstrumentations, shallowInstrumentations, shallowReadonlyInstrumentations];\n}\n\nconst [mutableInstrumentations, readonlyInstrumentations, shallowInstrumentations, shallowReadonlyInstrumentations] = /* #__PURE__*/createInstrumentations();\n\nfunction createInstrumentationGetter(isReadonly, shallow) {\n  const instrumentations = shallow ? isReadonly ? shallowReadonlyInstrumentations : shallowInstrumentations : isReadonly ? readonlyInstrumentations : mutableInstrumentations;\n  return (target, key, receiver) => {\n    if (key === \"__v_isReactive\"\n    /* IS_REACTIVE */\n    ) {\n      return !isReadonly;\n    } else if (key === \"__v_isReadonly\"\n    /* IS_READONLY */\n    ) {\n      return isReadonly;\n    } else if (key === \"__v_raw\"\n    /* RAW */\n    ) {\n      return target;\n    }\n\n    return Reflect.get(shared_esm_bundler_hasOwn(instrumentations, key) && key in target ? instrumentations : target, key, receiver);\n  };\n}\n\nconst mutableCollectionHandlers = {\n  get: /*#__PURE__*/createInstrumentationGetter(false, false)\n};\nconst shallowCollectionHandlers = {\n  get: /*#__PURE__*/createInstrumentationGetter(false, true)\n};\nconst readonlyCollectionHandlers = {\n  get: /*#__PURE__*/createInstrumentationGetter(true, false)\n};\nconst shallowReadonlyCollectionHandlers = {\n  get: /*#__PURE__*/createInstrumentationGetter(true, true)\n};\n\nfunction checkIdentityKeys(target, has, key) {\n  const rawKey = reactivity_esm_bundler_toRaw(key);\n\n  if (rawKey !== key && has.call(target, rawKey)) {\n    const type = toRawType(target);\n    console.warn(`Reactive ${type} contains both the raw and reactive ` + `versions of the same object${type === `Map` ? ` as keys` : ``}, ` + `which can lead to inconsistencies. ` + `Avoid differentiating between the raw and reactive versions ` + `of an object and only use the reactive version if possible.`);\n  }\n}\n\nconst reactiveMap = new WeakMap();\nconst shallowReactiveMap = new WeakMap();\nconst readonlyMap = new WeakMap();\nconst shallowReadonlyMap = new WeakMap();\n\nfunction targetTypeMap(rawType) {\n  switch (rawType) {\n    case 'Object':\n    case 'Array':\n      return 1\n      /* COMMON */\n      ;\n\n    case 'Map':\n    case 'Set':\n    case 'WeakMap':\n    case 'WeakSet':\n      return 2\n      /* COLLECTION */\n      ;\n\n    default:\n      return 0\n      /* INVALID */\n      ;\n  }\n}\n\nfunction getTargetType(value) {\n  return value[\"__v_skip\"\n  /* SKIP */\n  ] || !Object.isExtensible(value) ? 0\n  /* INVALID */\n  : targetTypeMap(shared_esm_bundler_toRawType(value));\n}\n\nfunction reactive(target) {\n  // if trying to observe a readonly proxy, return the readonly version.\n  if (isReadonly(target)) {\n    return target;\n  }\n\n  return createReactiveObject(target, false, mutableHandlers, mutableCollectionHandlers, reactiveMap);\n}\n/**\r\n * Return a shallowly-reactive copy of the original object, where only the root\r\n * level properties are reactive. It also does not auto-unwrap refs (even at the\r\n * root level).\r\n */\n\n\nfunction shallowReactive(target) {\n  return createReactiveObject(target, false, shallowReactiveHandlers, shallowCollectionHandlers, shallowReactiveMap);\n}\n/**\r\n * Creates a readonly copy of the original object. Note the returned copy is not\r\n * made reactive, but `readonly` can be called on an already reactive object.\r\n */\n\n\nfunction readonly(target) {\n  return createReactiveObject(target, true, readonlyHandlers, readonlyCollectionHandlers, readonlyMap);\n}\n/**\r\n * Returns a reactive-copy of the original object, where only the root level\r\n * properties are readonly, and does NOT unwrap refs nor recursively convert\r\n * returned properties.\r\n * This is used for creating the props proxy object for stateful components.\r\n */\n\n\nfunction shallowReadonly(target) {\n  return createReactiveObject(target, true, shallowReadonlyHandlers, shallowReadonlyCollectionHandlers, shallowReadonlyMap);\n}\n\nfunction createReactiveObject(target, isReadonly, baseHandlers, collectionHandlers, proxyMap) {\n  if (!shared_esm_bundler_isObject(target)) {\n    if (false) {}\n\n    return target;\n  } // target is already a Proxy, return it.\n  // exception: calling readonly() on a reactive object\n\n\n  if (target[\"__v_raw\"\n  /* RAW */\n  ] && !(isReadonly && target[\"__v_isReactive\"\n  /* IS_REACTIVE */\n  ])) {\n    return target;\n  } // target already has corresponding Proxy\n\n\n  const existingProxy = proxyMap.get(target);\n\n  if (existingProxy) {\n    return existingProxy;\n  } // only a whitelist of value types can be observed.\n\n\n  const targetType = getTargetType(target);\n\n  if (targetType === 0\n  /* INVALID */\n  ) {\n    return target;\n  }\n\n  const proxy = new Proxy(target, targetType === 2\n  /* COLLECTION */\n  ? collectionHandlers : baseHandlers);\n  proxyMap.set(target, proxy);\n  return proxy;\n}\n\nfunction isReactive(value) {\n  if (isReadonly(value)) {\n    return isReactive(value[\"__v_raw\"\n    /* RAW */\n    ]);\n  }\n\n  return !!(value && value[\"__v_isReactive\"\n  /* IS_REACTIVE */\n  ]);\n}\n\nfunction isReadonly(value) {\n  return !!(value && value[\"__v_isReadonly\"\n  /* IS_READONLY */\n  ]);\n}\n\nfunction isShallow(value) {\n  return !!(value && value[\"__v_isShallow\"\n  /* IS_SHALLOW */\n  ]);\n}\n\nfunction isProxy(value) {\n  return isReactive(value) || isReadonly(value);\n}\n\nfunction reactivity_esm_bundler_toRaw(observed) {\n  const raw = observed && observed[\"__v_raw\"\n  /* RAW */\n  ];\n  return raw ? reactivity_esm_bundler_toRaw(raw) : observed;\n}\n\nfunction markRaw(value) {\n  def(value, \"__v_skip\"\n  /* SKIP */\n  , true);\n  return value;\n}\n\nconst toReactive = value => shared_esm_bundler_isObject(value) ? reactive(value) : value;\n\nconst toReadonly = value => shared_esm_bundler_isObject(value) ? readonly(value) : value;\n\nfunction trackRefValue(ref) {\n  if (shouldTrack && activeEffect) {\n    ref = reactivity_esm_bundler_toRaw(ref);\n\n    if (false) {} else {\n      trackEffects(ref.dep || (ref.dep = createDep()));\n    }\n  }\n}\n\nfunction triggerRefValue(ref, newVal) {\n  ref = reactivity_esm_bundler_toRaw(ref);\n\n  if (ref.dep) {\n    if (false) {} else {\n      triggerEffects(ref.dep);\n    }\n  }\n}\n\nfunction isRef(r) {\n  return !!(r && r.__v_isRef === true);\n}\n\nfunction ref(value) {\n  return createRef(value, false);\n}\n\nfunction shallowRef(value) {\n  return createRef(value, true);\n}\n\nfunction createRef(rawValue, shallow) {\n  if (isRef(rawValue)) {\n    return rawValue;\n  }\n\n  return new RefImpl(rawValue, shallow);\n}\n\nclass RefImpl {\n  constructor(value, __v_isShallow) {\n    this.__v_isShallow = __v_isShallow;\n    this.dep = undefined;\n    this.__v_isRef = true;\n    this._rawValue = __v_isShallow ? value : reactivity_esm_bundler_toRaw(value);\n    this._value = __v_isShallow ? value : toReactive(value);\n  }\n\n  get value() {\n    trackRefValue(this);\n    return this._value;\n  }\n\n  set value(newVal) {\n    newVal = this.__v_isShallow ? newVal : reactivity_esm_bundler_toRaw(newVal);\n\n    if (hasChanged(newVal, this._rawValue)) {\n      this._rawValue = newVal;\n      this._value = this.__v_isShallow ? newVal : toReactive(newVal);\n      triggerRefValue(this, newVal);\n    }\n  }\n\n}\n\nfunction triggerRef(ref) {\n  triggerRefValue(ref,  false ? 0 : void 0);\n}\n\nfunction unref(ref) {\n  return isRef(ref) ? ref.value : ref;\n}\n\nconst shallowUnwrapHandlers = {\n  get: (target, key, receiver) => unref(Reflect.get(target, key, receiver)),\n  set: (target, key, value, receiver) => {\n    const oldValue = target[key];\n\n    if (isRef(oldValue) && !isRef(value)) {\n      oldValue.value = value;\n      return true;\n    } else {\n      return Reflect.set(target, key, value, receiver);\n    }\n  }\n};\n\nfunction proxyRefs(objectWithRefs) {\n  return isReactive(objectWithRefs) ? objectWithRefs : new Proxy(objectWithRefs, shallowUnwrapHandlers);\n}\n\nclass CustomRefImpl {\n  constructor(factory) {\n    this.dep = undefined;\n    this.__v_isRef = true;\n    const {\n      get,\n      set\n    } = factory(() => trackRefValue(this), () => triggerRefValue(this));\n    this._get = get;\n    this._set = set;\n  }\n\n  get value() {\n    return this._get();\n  }\n\n  set value(newVal) {\n    this._set(newVal);\n  }\n\n}\n\nfunction customRef(factory) {\n  return new CustomRefImpl(factory);\n}\n\nfunction toRefs(object) {\n  if (false) {}\n\n  const ret = shared_esm_bundler_isArray(object) ? new Array(object.length) : {};\n\n  for (const key in object) {\n    ret[key] = toRef(object, key);\n  }\n\n  return ret;\n}\n\nclass ObjectRefImpl {\n  constructor(_object, _key, _defaultValue) {\n    this._object = _object;\n    this._key = _key;\n    this._defaultValue = _defaultValue;\n    this.__v_isRef = true;\n  }\n\n  get value() {\n    const val = this._object[this._key];\n    return val === undefined ? this._defaultValue : val;\n  }\n\n  set value(newVal) {\n    this._object[this._key] = newVal;\n  }\n\n}\n\nfunction toRef(object, key, defaultValue) {\n  const val = object[key];\n  return isRef(val) ? val : new ObjectRefImpl(object, key, defaultValue);\n}\n\nclass ComputedRefImpl {\n  constructor(getter, _setter, isReadonly, isSSR) {\n    this._setter = _setter;\n    this.dep = undefined;\n    this.__v_isRef = true;\n    this._dirty = true;\n    this.effect = new ReactiveEffect(getter, () => {\n      if (!this._dirty) {\n        this._dirty = true;\n        triggerRefValue(this);\n      }\n    });\n    this.effect.computed = this;\n    this.effect.active = this._cacheable = !isSSR;\n    this[\"__v_isReadonly\"\n    /* IS_READONLY */\n    ] = isReadonly;\n  }\n\n  get value() {\n    // the computed ref may get wrapped by other proxies e.g. readonly() #3376\n    const self = reactivity_esm_bundler_toRaw(this);\n    trackRefValue(self);\n\n    if (self._dirty || !self._cacheable) {\n      self._dirty = false;\n      self._value = self.effect.run();\n    }\n\n    return self._value;\n  }\n\n  set value(newValue) {\n    this._setter(newValue);\n  }\n\n}\n\nfunction computed(getterOrOptions, debugOptions, isSSR = false) {\n  let getter;\n  let setter;\n  const onlyGetter = isFunction(getterOrOptions);\n\n  if (onlyGetter) {\n    getter = getterOrOptions;\n    setter =  false ? 0 : shared_esm_bundler_NOOP;\n  } else {\n    getter = getterOrOptions.get;\n    setter = getterOrOptions.set;\n  }\n\n  const cRef = new ComputedRefImpl(getter, setter, onlyGetter || !setter, isSSR);\n\n  if (false) {}\n\n  return cRef;\n}\n\nvar _a;\n\nconst tick = /*#__PURE__*/(/* unused pure expression or super */ null && (Promise.resolve()));\nconst queue = (/* unused pure expression or super */ null && ([]));\nlet queued = false;\n\nconst scheduler = fn => {\n  queue.push(fn);\n\n  if (!queued) {\n    queued = true;\n    tick.then(flush);\n  }\n};\n\nconst flush = () => {\n  for (let i = 0; i < queue.length; i++) {\n    queue[i]();\n  }\n\n  queue.length = 0;\n  queued = false;\n};\n\nclass DeferredComputedRefImpl {\n  constructor(getter) {\n    this.dep = undefined;\n    this._dirty = true;\n    this.__v_isRef = true;\n    this[_a] = true;\n    let compareTarget;\n    let hasCompareTarget = false;\n    let scheduled = false;\n    this.effect = new ReactiveEffect(getter, computedTrigger => {\n      if (this.dep) {\n        if (computedTrigger) {\n          compareTarget = this._value;\n          hasCompareTarget = true;\n        } else if (!scheduled) {\n          const valueToCompare = hasCompareTarget ? compareTarget : this._value;\n          scheduled = true;\n          hasCompareTarget = false;\n          scheduler(() => {\n            if (this.effect.active && this._get() !== valueToCompare) {\n              triggerRefValue(this);\n            }\n\n            scheduled = false;\n          });\n        } // chained upstream computeds are notified synchronously to ensure\n        // value invalidation in case of sync access; normal effects are\n        // deferred to be triggered in scheduler.\n\n\n        for (const e of this.dep) {\n          if (e.computed instanceof DeferredComputedRefImpl) {\n            e.scheduler(true\n            /* computedTrigger */\n            );\n          }\n        }\n      }\n\n      this._dirty = true;\n    });\n    this.effect.computed = this;\n  }\n\n  _get() {\n    if (this._dirty) {\n      this._dirty = false;\n      return this._value = this.effect.run();\n    }\n\n    return this._value;\n  }\n\n  get value() {\n    trackRefValue(this); // the computed ref may get wrapped by other proxies e.g. readonly() #3376\n\n    return reactivity_esm_bundler_toRaw(this)._get();\n  }\n\n}\n\n_a = \"__v_isReadonly\"\n/* IS_READONLY */\n;\n\nfunction deferredComputed(getter) {\n  return new DeferredComputedRefImpl(getter);\n}\n\n\n;// CONCATENATED MODULE: ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js\n\n\n\n\nconst stack = [];\n\nfunction pushWarningContext(vnode) {\n  stack.push(vnode);\n}\n\nfunction popWarningContext() {\n  stack.pop();\n}\n\nfunction runtime_core_esm_bundler_warn(msg, ...args) {\n  // avoid props formatting or warn handler tracking deps that might be mutated\n  // during patch, leading to infinite recursion.\n  pauseTracking();\n  const instance = stack.length ? stack[stack.length - 1].component : null;\n  const appWarnHandler = instance && instance.appContext.config.warnHandler;\n  const trace = getComponentTrace();\n\n  if (appWarnHandler) {\n    callWithErrorHandling(appWarnHandler, instance, 11\n    /* APP_WARN_HANDLER */\n    , [msg + args.join(''), instance && instance.proxy, trace.map(({\n      vnode\n    }) => `at <${formatComponentName(instance, vnode.type)}>`).join('\\n'), trace]);\n  } else {\n    const warnArgs = [`[Vue warn]: ${msg}`, ...args];\n    /* istanbul ignore if */\n\n    if (trace.length && // avoid spamming console during tests\n    !false) {\n      warnArgs.push(`\\n`, ...formatTrace(trace));\n    }\n\n    console.warn(...warnArgs);\n  }\n\n  resetTracking();\n}\n\nfunction getComponentTrace() {\n  let currentVNode = stack[stack.length - 1];\n\n  if (!currentVNode) {\n    return [];\n  } // we can't just use the stack because it will be incomplete during updates\n  // that did not start from the root. Re-construct the parent chain using\n  // instance parent pointers.\n\n\n  const normalizedStack = [];\n\n  while (currentVNode) {\n    const last = normalizedStack[0];\n\n    if (last && last.vnode === currentVNode) {\n      last.recurseCount++;\n    } else {\n      normalizedStack.push({\n        vnode: currentVNode,\n        recurseCount: 0\n      });\n    }\n\n    const parentInstance = currentVNode.component && currentVNode.component.parent;\n    currentVNode = parentInstance && parentInstance.vnode;\n  }\n\n  return normalizedStack;\n}\n/* istanbul ignore next */\n\n\nfunction formatTrace(trace) {\n  const logs = [];\n  trace.forEach((entry, i) => {\n    logs.push(...(i === 0 ? [] : [`\\n`]), ...formatTraceEntry(entry));\n  });\n  return logs;\n}\n\nfunction formatTraceEntry({\n  vnode,\n  recurseCount\n}) {\n  const postfix = recurseCount > 0 ? `... (${recurseCount} recursive calls)` : ``;\n  const isRoot = vnode.component ? vnode.component.parent == null : false;\n  const open = ` at <${formatComponentName(vnode.component, vnode.type, isRoot)}`;\n  const close = `>` + postfix;\n  return vnode.props ? [open, ...formatProps(vnode.props), close] : [open + close];\n}\n/* istanbul ignore next */\n\n\nfunction formatProps(props) {\n  const res = [];\n  const keys = Object.keys(props);\n  keys.slice(0, 3).forEach(key => {\n    res.push(...formatProp(key, props[key]));\n  });\n\n  if (keys.length > 3) {\n    res.push(` ...`);\n  }\n\n  return res;\n}\n/* istanbul ignore next */\n\n\nfunction formatProp(key, value, raw) {\n  if (shared_esm_bundler_isString(value)) {\n    value = JSON.stringify(value);\n    return raw ? value : [`${key}=${value}`];\n  } else if (typeof value === 'number' || typeof value === 'boolean' || value == null) {\n    return raw ? value : [`${key}=${value}`];\n  } else if (isRef(value)) {\n    value = formatProp(key, reactivity_esm_bundler_toRaw(value.value), true);\n    return raw ? value : [`${key}=Ref<`, value, `>`];\n  } else if (isFunction(value)) {\n    return [`${key}=fn${value.name ? `<${value.name}>` : ``}`];\n  } else {\n    value = reactivity_esm_bundler_toRaw(value);\n    return raw ? value : [`${key}=`, value];\n  }\n}\n\nconst ErrorTypeStrings = {\n  [\"sp\"\n  /* SERVER_PREFETCH */\n  ]: 'serverPrefetch hook',\n  [\"bc\"\n  /* BEFORE_CREATE */\n  ]: 'beforeCreate hook',\n  [\"c\"\n  /* CREATED */\n  ]: 'created hook',\n  [\"bm\"\n  /* BEFORE_MOUNT */\n  ]: 'beforeMount hook',\n  [\"m\"\n  /* MOUNTED */\n  ]: 'mounted hook',\n  [\"bu\"\n  /* BEFORE_UPDATE */\n  ]: 'beforeUpdate hook',\n  [\"u\"\n  /* UPDATED */\n  ]: 'updated',\n  [\"bum\"\n  /* BEFORE_UNMOUNT */\n  ]: 'beforeUnmount hook',\n  [\"um\"\n  /* UNMOUNTED */\n  ]: 'unmounted hook',\n  [\"a\"\n  /* ACTIVATED */\n  ]: 'activated hook',\n  [\"da\"\n  /* DEACTIVATED */\n  ]: 'deactivated hook',\n  [\"ec\"\n  /* ERROR_CAPTURED */\n  ]: 'errorCaptured hook',\n  [\"rtc\"\n  /* RENDER_TRACKED */\n  ]: 'renderTracked hook',\n  [\"rtg\"\n  /* RENDER_TRIGGERED */\n  ]: 'renderTriggered hook',\n  [0\n  /* SETUP_FUNCTION */\n  ]: 'setup function',\n  [1\n  /* RENDER_FUNCTION */\n  ]: 'render function',\n  [2\n  /* WATCH_GETTER */\n  ]: 'watcher getter',\n  [3\n  /* WATCH_CALLBACK */\n  ]: 'watcher callback',\n  [4\n  /* WATCH_CLEANUP */\n  ]: 'watcher cleanup function',\n  [5\n  /* NATIVE_EVENT_HANDLER */\n  ]: 'native event handler',\n  [6\n  /* COMPONENT_EVENT_HANDLER */\n  ]: 'component event handler',\n  [7\n  /* VNODE_HOOK */\n  ]: 'vnode hook',\n  [8\n  /* DIRECTIVE_HOOK */\n  ]: 'directive hook',\n  [9\n  /* TRANSITION_HOOK */\n  ]: 'transition hook',\n  [10\n  /* APP_ERROR_HANDLER */\n  ]: 'app errorHandler',\n  [11\n  /* APP_WARN_HANDLER */\n  ]: 'app warnHandler',\n  [12\n  /* FUNCTION_REF */\n  ]: 'ref function',\n  [13\n  /* ASYNC_COMPONENT_LOADER */\n  ]: 'async component loader',\n  [14\n  /* SCHEDULER */\n  ]: 'scheduler flush. This is likely a Vue internals bug. ' + 'Please open an issue at https://new-issue.vuejs.org/?repo=vuejs/core'\n};\n\nfunction callWithErrorHandling(fn, instance, type, args) {\n  let res;\n\n  try {\n    res = args ? fn(...args) : fn();\n  } catch (err) {\n    handleError(err, instance, type);\n  }\n\n  return res;\n}\n\nfunction callWithAsyncErrorHandling(fn, instance, type, args) {\n  if (isFunction(fn)) {\n    const res = callWithErrorHandling(fn, instance, type, args);\n\n    if (res && isPromise(res)) {\n      res.catch(err => {\n        handleError(err, instance, type);\n      });\n    }\n\n    return res;\n  }\n\n  const values = [];\n\n  for (let i = 0; i < fn.length; i++) {\n    values.push(callWithAsyncErrorHandling(fn[i], instance, type, args));\n  }\n\n  return values;\n}\n\nfunction handleError(err, instance, type, throwInDev = true) {\n  const contextVNode = instance ? instance.vnode : null;\n\n  if (instance) {\n    let cur = instance.parent; // the exposed instance is the render proxy to keep it consistent with 2.x\n\n    const exposedInstance = instance.proxy; // in production the hook receives only the error code\n\n    const errorInfo =  false ? 0 : type;\n\n    while (cur) {\n      const errorCapturedHooks = cur.ec;\n\n      if (errorCapturedHooks) {\n        for (let i = 0; i < errorCapturedHooks.length; i++) {\n          if (errorCapturedHooks[i](err, exposedInstance, errorInfo) === false) {\n            return;\n          }\n        }\n      }\n\n      cur = cur.parent;\n    } // app-level handling\n\n\n    const appErrorHandler = instance.appContext.config.errorHandler;\n\n    if (appErrorHandler) {\n      callWithErrorHandling(appErrorHandler, null, 10\n      /* APP_ERROR_HANDLER */\n      , [err, exposedInstance, errorInfo]);\n      return;\n    }\n  }\n\n  logError(err, type, contextVNode, throwInDev);\n}\n\nfunction logError(err, type, contextVNode, throwInDev = true) {\n  if (false) {} else {\n    // recover in prod to reduce the impact on end-user\n    console.error(err);\n  }\n}\n\nlet isFlushing = false;\nlet isFlushPending = false;\nconst runtime_core_esm_bundler_queue = [];\nlet flushIndex = 0;\nconst pendingPreFlushCbs = [];\nlet activePreFlushCbs = null;\nlet preFlushIndex = 0;\nconst pendingPostFlushCbs = [];\nlet activePostFlushCbs = null;\nlet postFlushIndex = 0;\nconst resolvedPromise = /*#__PURE__*/Promise.resolve();\nlet currentFlushPromise = null;\nlet currentPreFlushParentJob = null;\nconst RECURSION_LIMIT = 100;\n\nfunction nextTick(fn) {\n  const p = currentFlushPromise || resolvedPromise;\n  return fn ? p.then(this ? fn.bind(this) : fn) : p;\n} // #2768\n// Use binary-search to find a suitable position in the queue,\n// so that the queue maintains the increasing order of job's id,\n// which can prevent the job from being skipped and also can avoid repeated patching.\n\n\nfunction findInsertionIndex(id) {\n  // the start index should be `flushIndex + 1`\n  let start = flushIndex + 1;\n  let end = runtime_core_esm_bundler_queue.length;\n\n  while (start < end) {\n    const middle = start + end >>> 1;\n    const middleJobId = getId(runtime_core_esm_bundler_queue[middle]);\n    middleJobId < id ? start = middle + 1 : end = middle;\n  }\n\n  return start;\n}\n\nfunction queueJob(job) {\n  // the dedupe search uses the startIndex argument of Array.includes()\n  // by default the search index includes the current job that is being run\n  // so it cannot recursively trigger itself again.\n  // if the job is a watch() callback, the search will start with a +1 index to\n  // allow it recursively trigger itself - it is the user's responsibility to\n  // ensure it doesn't end up in an infinite loop.\n  if ((!runtime_core_esm_bundler_queue.length || !runtime_core_esm_bundler_queue.includes(job, isFlushing && job.allowRecurse ? flushIndex + 1 : flushIndex)) && job !== currentPreFlushParentJob) {\n    if (job.id == null) {\n      runtime_core_esm_bundler_queue.push(job);\n    } else {\n      runtime_core_esm_bundler_queue.splice(findInsertionIndex(job.id), 0, job);\n    }\n\n    queueFlush();\n  }\n}\n\nfunction queueFlush() {\n  if (!isFlushing && !isFlushPending) {\n    isFlushPending = true;\n    currentFlushPromise = resolvedPromise.then(flushJobs);\n  }\n}\n\nfunction invalidateJob(job) {\n  const i = runtime_core_esm_bundler_queue.indexOf(job);\n\n  if (i > flushIndex) {\n    runtime_core_esm_bundler_queue.splice(i, 1);\n  }\n}\n\nfunction queueCb(cb, activeQueue, pendingQueue, index) {\n  if (!shared_esm_bundler_isArray(cb)) {\n    if (!activeQueue || !activeQueue.includes(cb, cb.allowRecurse ? index + 1 : index)) {\n      pendingQueue.push(cb);\n    }\n  } else {\n    // if cb is an array, it is a component lifecycle hook which can only be\n    // triggered by a job, which is already deduped in the main queue, so\n    // we can skip duplicate check here to improve perf\n    pendingQueue.push(...cb);\n  }\n\n  queueFlush();\n}\n\nfunction queuePreFlushCb(cb) {\n  queueCb(cb, activePreFlushCbs, pendingPreFlushCbs, preFlushIndex);\n}\n\nfunction queuePostFlushCb(cb) {\n  queueCb(cb, activePostFlushCbs, pendingPostFlushCbs, postFlushIndex);\n}\n\nfunction flushPreFlushCbs(seen, parentJob = null) {\n  if (pendingPreFlushCbs.length) {\n    currentPreFlushParentJob = parentJob;\n    activePreFlushCbs = [...new Set(pendingPreFlushCbs)];\n    pendingPreFlushCbs.length = 0;\n\n    if (false) {}\n\n    for (preFlushIndex = 0; preFlushIndex < activePreFlushCbs.length; preFlushIndex++) {\n      if (false) {}\n\n      activePreFlushCbs[preFlushIndex]();\n    }\n\n    activePreFlushCbs = null;\n    preFlushIndex = 0;\n    currentPreFlushParentJob = null; // recursively flush until it drains\n\n    flushPreFlushCbs(seen, parentJob);\n  }\n}\n\nfunction flushPostFlushCbs(seen) {\n  if (pendingPostFlushCbs.length) {\n    const deduped = [...new Set(pendingPostFlushCbs)];\n    pendingPostFlushCbs.length = 0; // #1947 already has active queue, nested flushPostFlushCbs call\n\n    if (activePostFlushCbs) {\n      activePostFlushCbs.push(...deduped);\n      return;\n    }\n\n    activePostFlushCbs = deduped;\n\n    if (false) {}\n\n    activePostFlushCbs.sort((a, b) => getId(a) - getId(b));\n\n    for (postFlushIndex = 0; postFlushIndex < activePostFlushCbs.length; postFlushIndex++) {\n      if (false) {}\n\n      activePostFlushCbs[postFlushIndex]();\n    }\n\n    activePostFlushCbs = null;\n    postFlushIndex = 0;\n  }\n}\n\nconst getId = job => job.id == null ? Infinity : job.id;\n\nfunction flushJobs(seen) {\n  isFlushPending = false;\n  isFlushing = true;\n\n  if (false) {}\n\n  flushPreFlushCbs(seen); // Sort queue before flush.\n  // This ensures that:\n  // 1. Components are updated from parent to child. (because parent is always\n  //    created before the child so its render effect will have smaller\n  //    priority number)\n  // 2. If a component is unmounted during a parent component's update,\n  //    its update can be skipped.\n\n  runtime_core_esm_bundler_queue.sort((a, b) => getId(a) - getId(b)); // conditional usage of checkRecursiveUpdate must be determined out of\n  // try ... catch block since Rollup by default de-optimizes treeshaking\n  // inside try-catch. This can leave all warning code unshaked. Although\n  // they would get eventually shaken by a minifier like terser, some minifiers\n  // would fail to do that (e.g. https://github.com/evanw/esbuild/issues/1610)\n\n  const check =  false ? 0 : shared_esm_bundler_NOOP;\n\n  try {\n    for (flushIndex = 0; flushIndex < runtime_core_esm_bundler_queue.length; flushIndex++) {\n      const job = runtime_core_esm_bundler_queue[flushIndex];\n\n      if (job && job.active !== false) {\n        if (false) {} // console.log(`running:`, job.id)\n\n\n        callWithErrorHandling(job, null, 14\n        /* SCHEDULER */\n        );\n      }\n    }\n  } finally {\n    flushIndex = 0;\n    runtime_core_esm_bundler_queue.length = 0;\n    flushPostFlushCbs(seen);\n    isFlushing = false;\n    currentFlushPromise = null; // some postFlushCb queued jobs!\n    // keep flushing until it drains.\n\n    if (runtime_core_esm_bundler_queue.length || pendingPreFlushCbs.length || pendingPostFlushCbs.length) {\n      flushJobs(seen);\n    }\n  }\n}\n\nfunction checkRecursiveUpdates(seen, fn) {\n  if (!seen.has(fn)) {\n    seen.set(fn, 1);\n  } else {\n    const count = seen.get(fn);\n\n    if (count > RECURSION_LIMIT) {\n      const instance = fn.ownerInstance;\n      const componentName = instance && getComponentName(instance.type);\n      runtime_core_esm_bundler_warn(`Maximum recursive updates exceeded${componentName ? ` in component <${componentName}>` : ``}. ` + `This means you have a reactive effect that is mutating its own ` + `dependencies and thus recursively triggering itself. Possible sources ` + `include component template, render function, updated hook or ` + `watcher source function.`);\n      return true;\n    } else {\n      seen.set(fn, count + 1);\n    }\n  }\n}\n/* eslint-disable no-restricted-globals */\n\n\nlet isHmrUpdating = false;\nconst hmrDirtyComponents = new Set(); // Expose the HMR runtime on the global object\n// This makes it entirely tree-shakable without polluting the exports and makes\n// it easier to be used in toolings like vue-loader\n// Note: for a component to be eligible for HMR it also needs the __hmrId option\n// to be set so that its instances can be registered / removed.\n\nif (false) {}\n\nconst map = new Map();\n\nfunction registerHMR(instance) {\n  const id = instance.type.__hmrId;\n  let record = map.get(id);\n\n  if (!record) {\n    createRecord(id, instance.type);\n    record = map.get(id);\n  }\n\n  record.instances.add(instance);\n}\n\nfunction unregisterHMR(instance) {\n  map.get(instance.type.__hmrId).instances.delete(instance);\n}\n\nfunction createRecord(id, initialDef) {\n  if (map.has(id)) {\n    return false;\n  }\n\n  map.set(id, {\n    initialDef: normalizeClassComponent(initialDef),\n    instances: new Set()\n  });\n  return true;\n}\n\nfunction normalizeClassComponent(component) {\n  return isClassComponent(component) ? component.__vccOpts : component;\n}\n\nfunction rerender(id, newRender) {\n  const record = map.get(id);\n\n  if (!record) {\n    return;\n  } // update initial record (for not-yet-rendered component)\n\n\n  record.initialDef.render = newRender;\n  [...record.instances].forEach(instance => {\n    if (newRender) {\n      instance.render = newRender;\n      normalizeClassComponent(instance.type).render = newRender;\n    }\n\n    instance.renderCache = []; // this flag forces child components with slot content to update\n\n    isHmrUpdating = true;\n    instance.update();\n    isHmrUpdating = false;\n  });\n}\n\nfunction reload(id, newComp) {\n  const record = map.get(id);\n  if (!record) return;\n  newComp = normalizeClassComponent(newComp); // update initial def (for not-yet-rendered components)\n\n  updateComponentDef(record.initialDef, newComp); // create a snapshot which avoids the set being mutated during updates\n\n  const instances = [...record.instances];\n\n  for (const instance of instances) {\n    const oldComp = normalizeClassComponent(instance.type);\n\n    if (!hmrDirtyComponents.has(oldComp)) {\n      // 1. Update existing comp definition to match new one\n      if (oldComp !== record.initialDef) {\n        updateComponentDef(oldComp, newComp);\n      } // 2. mark definition dirty. This forces the renderer to replace the\n      // component on patch.\n\n\n      hmrDirtyComponents.add(oldComp);\n    } // 3. invalidate options resolution cache\n\n\n    instance.appContext.optionsCache.delete(instance.type); // 4. actually update\n\n    if (instance.ceReload) {\n      // custom element\n      hmrDirtyComponents.add(oldComp);\n      instance.ceReload(newComp.styles);\n      hmrDirtyComponents.delete(oldComp);\n    } else if (instance.parent) {\n      // 4. Force the parent instance to re-render. This will cause all updated\n      // components to be unmounted and re-mounted. Queue the update so that we\n      // don't end up forcing the same parent to re-render multiple times.\n      queueJob(instance.parent.update); // instance is the inner component of an async custom element\n      // invoke to reset styles\n\n      if (instance.parent.type.__asyncLoader && instance.parent.ceReload) {\n        instance.parent.ceReload(newComp.styles);\n      }\n    } else if (instance.appContext.reload) {\n      // root instance mounted via createApp() has a reload method\n      instance.appContext.reload();\n    } else if (typeof window !== 'undefined') {\n      // root instance inside tree created via raw render(). Force reload.\n      window.location.reload();\n    } else {\n      console.warn('[HMR] Root or manually mounted instance modified. Full reload required.');\n    }\n  } // 5. make sure to cleanup dirty hmr components after update\n\n\n  queuePostFlushCb(() => {\n    for (const instance of instances) {\n      hmrDirtyComponents.delete(normalizeClassComponent(instance.type));\n    }\n  });\n}\n\nfunction updateComponentDef(oldComp, newComp) {\n  extend(oldComp, newComp);\n\n  for (const key in oldComp) {\n    if (key !== '__file' && !(key in newComp)) {\n      delete oldComp[key];\n    }\n  }\n}\n\nfunction tryWrap(fn) {\n  return (id, arg) => {\n    try {\n      return fn(id, arg);\n    } catch (e) {\n      console.error(e);\n      console.warn(`[HMR] Something went wrong during Vue component hot-reload. ` + `Full reload required.`);\n    }\n  };\n}\n\nlet devtools;\nlet buffer = [];\nlet devtoolsNotInstalled = false;\n\nfunction emit(event, ...args) {\n  if (devtools) {\n    devtools.emit(event, ...args);\n  } else if (!devtoolsNotInstalled) {\n    buffer.push({\n      event,\n      args\n    });\n  }\n}\n\nfunction setDevtoolsHook(hook, target) {\n  var _a, _b;\n\n  devtools = hook;\n\n  if (devtools) {\n    devtools.enabled = true;\n    buffer.forEach(({\n      event,\n      args\n    }) => devtools.emit(event, ...args));\n    buffer = [];\n  } else if ( // handle late devtools injection - only do this if we are in an actual\n  // browser environment to avoid the timer handle stalling test runner exit\n  // (#4815)\n  // eslint-disable-next-line no-restricted-globals\n  typeof window !== 'undefined' && // some envs mock window but not fully\n  window.HTMLElement && // also exclude jsdom\n  !((_b = (_a = window.navigator) === null || _a === void 0 ? void 0 : _a.userAgent) === null || _b === void 0 ? void 0 : _b.includes('jsdom'))) {\n    const replay = target.__VUE_DEVTOOLS_HOOK_REPLAY__ = target.__VUE_DEVTOOLS_HOOK_REPLAY__ || [];\n    replay.push(newHook => {\n      setDevtoolsHook(newHook, target);\n    }); // clear buffer after 3s - the user probably doesn't have devtools installed\n    // at all, and keeping the buffer will cause memory leaks (#4738)\n\n    setTimeout(() => {\n      if (!devtools) {\n        target.__VUE_DEVTOOLS_HOOK_REPLAY__ = null;\n        devtoolsNotInstalled = true;\n        buffer = [];\n      }\n    }, 3000);\n  } else {\n    // non-browser env, assume not installed\n    devtoolsNotInstalled = true;\n    buffer = [];\n  }\n}\n\nfunction devtoolsInitApp(app, version) {\n  emit(\"app:init\"\n  /* APP_INIT */\n  , app, version, {\n    Fragment,\n    Text,\n    Comment,\n    Static\n  });\n}\n\nfunction devtoolsUnmountApp(app) {\n  emit(\"app:unmount\"\n  /* APP_UNMOUNT */\n  , app);\n}\n\nconst devtoolsComponentAdded = /*#__PURE__*/createDevtoolsComponentHook(\"component:added\"\n/* COMPONENT_ADDED */\n);\nconst devtoolsComponentUpdated = /*#__PURE__*/createDevtoolsComponentHook(\"component:updated\"\n/* COMPONENT_UPDATED */\n);\nconst devtoolsComponentRemoved = /*#__PURE__*/createDevtoolsComponentHook(\"component:removed\"\n/* COMPONENT_REMOVED */\n);\n\nfunction createDevtoolsComponentHook(hook) {\n  return component => {\n    emit(hook, component.appContext.app, component.uid, component.parent ? component.parent.uid : undefined, component);\n  };\n}\n\nconst devtoolsPerfStart = /*#__PURE__*/(/* unused pure expression or super */ null && (createDevtoolsPerformanceHook(\"perf:start\"\n/* PERFORMANCE_START */\n)));\nconst devtoolsPerfEnd = /*#__PURE__*/(/* unused pure expression or super */ null && (createDevtoolsPerformanceHook(\"perf:end\"\n/* PERFORMANCE_END */\n)));\n\nfunction createDevtoolsPerformanceHook(hook) {\n  return (component, type, time) => {\n    emit(hook, component.appContext.app, component.uid, component, type, time);\n  };\n}\n\nfunction devtoolsComponentEmit(component, event, params) {\n  emit(\"component:emit\"\n  /* COMPONENT_EMIT */\n  , component.appContext.app, component, event, params);\n}\n\nfunction emit$1(instance, event, ...rawArgs) {\n  if (instance.isUnmounted) return;\n  const props = instance.vnode.props || EMPTY_OBJ;\n\n  if (false) {}\n\n  let args = rawArgs;\n  const isModelListener = event.startsWith('update:'); // for v-model update:xxx events, apply modifiers on args\n\n  const modelArg = isModelListener && event.slice(7);\n\n  if (modelArg && modelArg in props) {\n    const modifiersKey = `${modelArg === 'modelValue' ? 'model' : modelArg}Modifiers`;\n    const {\n      number,\n      trim\n    } = props[modifiersKey] || EMPTY_OBJ;\n\n    if (trim) {\n      args = rawArgs.map(a => a.trim());\n    } else if (number) {\n      args = rawArgs.map(toNumber);\n    }\n  }\n\n  if ( false || __VUE_PROD_DEVTOOLS__) {\n    devtoolsComponentEmit(instance, event, args);\n  }\n\n  if (false) {}\n\n  let handlerName;\n  let handler = props[handlerName = toHandlerKey(event)] || // also try camelCase event handler (#2249)\n  props[handlerName = toHandlerKey(camelize(event))]; // for v-model update:xxx events, also trigger kebab-case equivalent\n  // for props passed via kebab-case\n\n  if (!handler && isModelListener) {\n    handler = props[handlerName = toHandlerKey(shared_esm_bundler_hyphenate(event))];\n  }\n\n  if (handler) {\n    callWithAsyncErrorHandling(handler, instance, 6\n    /* COMPONENT_EVENT_HANDLER */\n    , args);\n  }\n\n  const onceHandler = props[handlerName + `Once`];\n\n  if (onceHandler) {\n    if (!instance.emitted) {\n      instance.emitted = {};\n    } else if (instance.emitted[handlerName]) {\n      return;\n    }\n\n    instance.emitted[handlerName] = true;\n    callWithAsyncErrorHandling(onceHandler, instance, 6\n    /* COMPONENT_EVENT_HANDLER */\n    , args);\n  }\n}\n\nfunction normalizeEmitsOptions(comp, appContext, asMixin = false) {\n  const cache = appContext.emitsCache;\n  const cached = cache.get(comp);\n\n  if (cached !== undefined) {\n    return cached;\n  }\n\n  const raw = comp.emits;\n  let normalized = {}; // apply mixin/extends props\n\n  let hasExtends = false;\n\n  if (__VUE_OPTIONS_API__ && !isFunction(comp)) {\n    const extendEmits = raw => {\n      const normalizedFromExtend = normalizeEmitsOptions(raw, appContext, true);\n\n      if (normalizedFromExtend) {\n        hasExtends = true;\n        shared_esm_bundler_extend(normalized, normalizedFromExtend);\n      }\n    };\n\n    if (!asMixin && appContext.mixins.length) {\n      appContext.mixins.forEach(extendEmits);\n    }\n\n    if (comp.extends) {\n      extendEmits(comp.extends);\n    }\n\n    if (comp.mixins) {\n      comp.mixins.forEach(extendEmits);\n    }\n  }\n\n  if (!raw && !hasExtends) {\n    cache.set(comp, null);\n    return null;\n  }\n\n  if (shared_esm_bundler_isArray(raw)) {\n    raw.forEach(key => normalized[key] = null);\n  } else {\n    shared_esm_bundler_extend(normalized, raw);\n  }\n\n  cache.set(comp, normalized);\n  return normalized;\n} // Check if an incoming prop key is a declared emit event listener.\n// e.g. With `emits: { click: null }`, props named `onClick` and `onclick` are\n// both considered matched listeners.\n\n\nfunction isEmitListener(options, key) {\n  if (!options || !isOn(key)) {\n    return false;\n  }\n\n  key = key.slice(2).replace(/Once$/, '');\n  return shared_esm_bundler_hasOwn(options, key[0].toLowerCase() + key.slice(1)) || shared_esm_bundler_hasOwn(options, shared_esm_bundler_hyphenate(key)) || shared_esm_bundler_hasOwn(options, key);\n}\n/**\r\n * mark the current rendering instance for asset resolution (e.g.\r\n * resolveComponent, resolveDirective) during render\r\n */\n\n\nlet currentRenderingInstance = null;\nlet currentScopeId = null;\n/**\r\n * Note: rendering calls maybe nested. The function returns the parent rendering\r\n * instance if present, which should be restored after the render is done:\r\n *\r\n * ```js\r\n * const prev = setCurrentRenderingInstance(i)\r\n * // ...render\r\n * setCurrentRenderingInstance(prev)\r\n * ```\r\n */\n\nfunction setCurrentRenderingInstance(instance) {\n  const prev = currentRenderingInstance;\n  currentRenderingInstance = instance;\n  currentScopeId = instance && instance.type.__scopeId || null;\n  return prev;\n}\n/**\r\n * Set scope id when creating hoisted vnodes.\r\n * @private compiler helper\r\n */\n\n\nfunction pushScopeId(id) {\n  currentScopeId = id;\n}\n/**\r\n * Technically we no longer need this after 3.0.8 but we need to keep the same\r\n * API for backwards compat w/ code generated by compilers.\r\n * @private\r\n */\n\n\nfunction popScopeId() {\n  currentScopeId = null;\n}\n/**\r\n * Only for backwards compat\r\n * @private\r\n */\n\n\nconst withScopeId = _id => withCtx;\n/**\r\n * Wrap a slot function to memoize current rendering instance\r\n * @private compiler helper\r\n */\n\n\nfunction withCtx(fn, ctx = currentRenderingInstance, isNonScopedSlot // false only\n) {\n  if (!ctx) return fn; // already normalized\n\n  if (fn._n) {\n    return fn;\n  }\n\n  const renderFnWithContext = (...args) => {\n    // If a user calls a compiled slot inside a template expression (#1745), it\n    // can mess up block tracking, so by default we disable block tracking and\n    // force bail out when invoking a compiled slot (indicated by the ._d flag).\n    // This isn't necessary if rendering a compiled `<slot>`, so we flip the\n    // ._d flag off when invoking the wrapped fn inside `renderSlot`.\n    if (renderFnWithContext._d) {\n      setBlockTracking(-1);\n    }\n\n    const prevInstance = setCurrentRenderingInstance(ctx);\n    const res = fn(...args);\n    setCurrentRenderingInstance(prevInstance);\n\n    if (renderFnWithContext._d) {\n      setBlockTracking(1);\n    }\n\n    if ( false || __VUE_PROD_DEVTOOLS__) {\n      devtoolsComponentUpdated(ctx);\n    }\n\n    return res;\n  }; // mark normalized to avoid duplicated wrapping\n\n\n  renderFnWithContext._n = true; // mark this as compiled by default\n  // this is used in vnode.ts -> normalizeChildren() to set the slot\n  // rendering flag.\n\n  renderFnWithContext._c = true; // disable block tracking by default\n\n  renderFnWithContext._d = true;\n  return renderFnWithContext;\n}\n/**\r\n * dev only flag to track whether $attrs was used during render.\r\n * If $attrs was used during render then the warning for failed attrs\r\n * fallthrough can be suppressed.\r\n */\n\n\nlet accessedAttrs = false;\n\nfunction markAttrsAccessed() {\n  accessedAttrs = true;\n}\n\nfunction renderComponentRoot(instance) {\n  const {\n    type: Component,\n    vnode,\n    proxy,\n    withProxy,\n    props,\n    propsOptions: [propsOptions],\n    slots,\n    attrs,\n    emit,\n    render,\n    renderCache,\n    data,\n    setupState,\n    ctx,\n    inheritAttrs\n  } = instance;\n  let result;\n  let fallthroughAttrs;\n  const prev = setCurrentRenderingInstance(instance);\n\n  if (false) {}\n\n  try {\n    if (vnode.shapeFlag & 4\n    /* STATEFUL_COMPONENT */\n    ) {\n      // withProxy is a proxy with a different `has` trap only for\n      // runtime-compiled render functions using `with` block.\n      const proxyToUse = withProxy || proxy;\n      result = normalizeVNode(render.call(proxyToUse, proxyToUse, renderCache, props, setupState, data, ctx));\n      fallthroughAttrs = attrs;\n    } else {\n      // functional\n      const render = Component; // in dev, mark attrs accessed if optional props (attrs === props)\n\n      if (false) {}\n\n      result = normalizeVNode(render.length > 1 ? render(props,  false ? 0 : {\n        attrs,\n        slots,\n        emit\n      }) : render(props, null\n      /* we know it doesn't need it */\n      ));\n      fallthroughAttrs = Component.props ? attrs : getFunctionalFallthrough(attrs);\n    }\n  } catch (err) {\n    blockStack.length = 0;\n    handleError(err, instance, 1\n    /* RENDER_FUNCTION */\n    );\n    result = createVNode(Comment);\n  } // attr merging\n  // in dev mode, comments are preserved, and it's possible for a template\n  // to have comments along side the root element which makes it a fragment\n\n\n  let root = result;\n  let setRoot = undefined;\n\n  if (false\n  /* DEV_ROOT_FRAGMENT */\n  ) {}\n\n  if (fallthroughAttrs && inheritAttrs !== false) {\n    const keys = Object.keys(fallthroughAttrs);\n    const {\n      shapeFlag\n    } = root;\n\n    if (keys.length) {\n      if (shapeFlag & (1\n      /* ELEMENT */\n      | 6\n      /* COMPONENT */\n      )) {\n        if (propsOptions && keys.some(isModelListener)) {\n          // If a v-model listener (onUpdate:xxx) has a corresponding declared\n          // prop, it indicates this component expects to handle v-model and\n          // it should not fallthrough.\n          // related: #1543, #1643, #1989\n          fallthroughAttrs = filterModelListeners(fallthroughAttrs, propsOptions);\n        }\n\n        root = cloneVNode(root, fallthroughAttrs);\n      } else if (false) {}\n    }\n  } // inherit directives\n\n\n  if (vnode.dirs) {\n    if (false) {}\n\n    root.dirs = root.dirs ? root.dirs.concat(vnode.dirs) : vnode.dirs;\n  } // inherit transition data\n\n\n  if (vnode.transition) {\n    if (false) {}\n\n    root.transition = vnode.transition;\n  }\n\n  if (false) {} else {\n    result = root;\n  }\n\n  setCurrentRenderingInstance(prev);\n  return result;\n}\n/**\r\n * dev only\r\n * In dev mode, template root level comments are rendered, which turns the\r\n * template into a fragment root, but we need to locate the single element\r\n * root for attrs and scope id processing.\r\n */\n\n\nconst getChildRoot = vnode => {\n  const rawChildren = vnode.children;\n  const dynamicChildren = vnode.dynamicChildren;\n  const childRoot = filterSingleRoot(rawChildren);\n\n  if (!childRoot) {\n    return [vnode, undefined];\n  }\n\n  const index = rawChildren.indexOf(childRoot);\n  const dynamicIndex = dynamicChildren ? dynamicChildren.indexOf(childRoot) : -1;\n\n  const setRoot = updatedRoot => {\n    rawChildren[index] = updatedRoot;\n\n    if (dynamicChildren) {\n      if (dynamicIndex > -1) {\n        dynamicChildren[dynamicIndex] = updatedRoot;\n      } else if (updatedRoot.patchFlag > 0) {\n        vnode.dynamicChildren = [...dynamicChildren, updatedRoot];\n      }\n    }\n  };\n\n  return [normalizeVNode(childRoot), setRoot];\n};\n\nfunction filterSingleRoot(children) {\n  let singleRoot;\n\n  for (let i = 0; i < children.length; i++) {\n    const child = children[i];\n\n    if (isVNode(child)) {\n      // ignore user comment\n      if (child.type !== Comment || child.children === 'v-if') {\n        if (singleRoot) {\n          // has more than 1 non-comment child, return now\n          return;\n        } else {\n          singleRoot = child;\n        }\n      }\n    } else {\n      return;\n    }\n  }\n\n  return singleRoot;\n}\n\nconst getFunctionalFallthrough = attrs => {\n  let res;\n\n  for (const key in attrs) {\n    if (key === 'class' || key === 'style' || isOn(key)) {\n      (res || (res = {}))[key] = attrs[key];\n    }\n  }\n\n  return res;\n};\n\nconst filterModelListeners = (attrs, props) => {\n  const res = {};\n\n  for (const key in attrs) {\n    if (!isModelListener(key) || !(key.slice(9) in props)) {\n      res[key] = attrs[key];\n    }\n  }\n\n  return res;\n};\n\nconst isElementRoot = vnode => {\n  return vnode.shapeFlag & (6\n  /* COMPONENT */\n  | 1\n  /* ELEMENT */\n  ) || vnode.type === Comment // potential v-if branch switch\n  ;\n};\n\nfunction shouldUpdateComponent(prevVNode, nextVNode, optimized) {\n  const {\n    props: prevProps,\n    children: prevChildren,\n    component\n  } = prevVNode;\n  const {\n    props: nextProps,\n    children: nextChildren,\n    patchFlag\n  } = nextVNode;\n  const emits = component.emitsOptions; // Parent component's render function was hot-updated. Since this may have\n  // caused the child component's slots content to have changed, we need to\n  // force the child to update as well.\n\n  if (false) {} // force child update for runtime directive or transition on component vnode.\n\n\n  if (nextVNode.dirs || nextVNode.transition) {\n    return true;\n  }\n\n  if (optimized && patchFlag >= 0) {\n    if (patchFlag & 1024\n    /* DYNAMIC_SLOTS */\n    ) {\n      // slot content that references values that might have changed,\n      // e.g. in a v-for\n      return true;\n    }\n\n    if (patchFlag & 16\n    /* FULL_PROPS */\n    ) {\n      if (!prevProps) {\n        return !!nextProps;\n      } // presence of this flag indicates props are always non-null\n\n\n      return hasPropsChanged(prevProps, nextProps, emits);\n    } else if (patchFlag & 8\n    /* PROPS */\n    ) {\n      const dynamicProps = nextVNode.dynamicProps;\n\n      for (let i = 0; i < dynamicProps.length; i++) {\n        const key = dynamicProps[i];\n\n        if (nextProps[key] !== prevProps[key] && !isEmitListener(emits, key)) {\n          return true;\n        }\n      }\n    }\n  } else {\n    // this path is only taken by manually written render functions\n    // so presence of any children leads to a forced update\n    if (prevChildren || nextChildren) {\n      if (!nextChildren || !nextChildren.$stable) {\n        return true;\n      }\n    }\n\n    if (prevProps === nextProps) {\n      return false;\n    }\n\n    if (!prevProps) {\n      return !!nextProps;\n    }\n\n    if (!nextProps) {\n      return true;\n    }\n\n    return hasPropsChanged(prevProps, nextProps, emits);\n  }\n\n  return false;\n}\n\nfunction hasPropsChanged(prevProps, nextProps, emitsOptions) {\n  const nextKeys = Object.keys(nextProps);\n\n  if (nextKeys.length !== Object.keys(prevProps).length) {\n    return true;\n  }\n\n  for (let i = 0; i < nextKeys.length; i++) {\n    const key = nextKeys[i];\n\n    if (nextProps[key] !== prevProps[key] && !isEmitListener(emitsOptions, key)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction updateHOCHostEl({\n  vnode,\n  parent\n}, el // HostNode\n) {\n  while (parent && parent.subTree === vnode) {\n    (vnode = parent.vnode).el = el;\n    parent = parent.parent;\n  }\n}\n\nconst isSuspense = type => type.__isSuspense; // Suspense exposes a component-like API, and is treated like a component\n// in the compiler, but internally it's a special built-in type that hooks\n// directly into the renderer.\n\n\nconst SuspenseImpl = {\n  name: 'Suspense',\n  // In order to make Suspense tree-shakable, we need to avoid importing it\n  // directly in the renderer. The renderer checks for the __isSuspense flag\n  // on a vnode's type and calls the `process` method, passing in renderer\n  // internals.\n  __isSuspense: true,\n\n  process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, // platform-specific impl passed from renderer\n  rendererInternals) {\n    if (n1 == null) {\n      mountSuspense(n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, rendererInternals);\n    } else {\n      patchSuspense(n1, n2, container, anchor, parentComponent, isSVG, slotScopeIds, optimized, rendererInternals);\n    }\n  },\n\n  hydrate: hydrateSuspense,\n  create: createSuspenseBoundary,\n  normalize: normalizeSuspenseChildren\n}; // Force-casted public typing for h and TSX props inference\n\nconst Suspense = SuspenseImpl;\n\nfunction triggerEvent(vnode, name) {\n  const eventListener = vnode.props && vnode.props[name];\n\n  if (isFunction(eventListener)) {\n    eventListener();\n  }\n}\n\nfunction mountSuspense(vnode, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, rendererInternals) {\n  const {\n    p: patch,\n    o: {\n      createElement\n    }\n  } = rendererInternals;\n  const hiddenContainer = createElement('div');\n  const suspense = vnode.suspense = createSuspenseBoundary(vnode, parentSuspense, parentComponent, container, hiddenContainer, anchor, isSVG, slotScopeIds, optimized, rendererInternals); // start mounting the content subtree in an off-dom container\n\n  patch(null, suspense.pendingBranch = vnode.ssContent, hiddenContainer, null, parentComponent, suspense, isSVG, slotScopeIds); // now check if we have encountered any async deps\n\n  if (suspense.deps > 0) {\n    // has async\n    // invoke @fallback event\n    triggerEvent(vnode, 'onPending');\n    triggerEvent(vnode, 'onFallback'); // mount the fallback tree\n\n    patch(null, vnode.ssFallback, container, anchor, parentComponent, null, // fallback tree will not have suspense context\n    isSVG, slotScopeIds);\n    setActiveBranch(suspense, vnode.ssFallback);\n  } else {\n    // Suspense has no async deps. Just resolve.\n    suspense.resolve();\n  }\n}\n\nfunction patchSuspense(n1, n2, container, anchor, parentComponent, isSVG, slotScopeIds, optimized, {\n  p: patch,\n  um: unmount,\n  o: {\n    createElement\n  }\n}) {\n  const suspense = n2.suspense = n1.suspense;\n  suspense.vnode = n2;\n  n2.el = n1.el;\n  const newBranch = n2.ssContent;\n  const newFallback = n2.ssFallback;\n  const {\n    activeBranch,\n    pendingBranch,\n    isInFallback,\n    isHydrating\n  } = suspense;\n\n  if (pendingBranch) {\n    suspense.pendingBranch = newBranch;\n\n    if (isSameVNodeType(newBranch, pendingBranch)) {\n      // same root type but content may have changed.\n      patch(pendingBranch, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG, slotScopeIds, optimized);\n\n      if (suspense.deps <= 0) {\n        suspense.resolve();\n      } else if (isInFallback) {\n        patch(activeBranch, newFallback, container, anchor, parentComponent, null, // fallback tree will not have suspense context\n        isSVG, slotScopeIds, optimized);\n        setActiveBranch(suspense, newFallback);\n      }\n    } else {\n      // toggled before pending tree is resolved\n      suspense.pendingId++;\n\n      if (isHydrating) {\n        // if toggled before hydration is finished, the current DOM tree is\n        // no longer valid. set it as the active branch so it will be unmounted\n        // when resolved\n        suspense.isHydrating = false;\n        suspense.activeBranch = pendingBranch;\n      } else {\n        unmount(pendingBranch, parentComponent, suspense);\n      } // increment pending ID. this is used to invalidate async callbacks\n      // reset suspense state\n\n\n      suspense.deps = 0; // discard effects from pending branch\n\n      suspense.effects.length = 0; // discard previous container\n\n      suspense.hiddenContainer = createElement('div');\n\n      if (isInFallback) {\n        // already in fallback state\n        patch(null, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG, slotScopeIds, optimized);\n\n        if (suspense.deps <= 0) {\n          suspense.resolve();\n        } else {\n          patch(activeBranch, newFallback, container, anchor, parentComponent, null, // fallback tree will not have suspense context\n          isSVG, slotScopeIds, optimized);\n          setActiveBranch(suspense, newFallback);\n        }\n      } else if (activeBranch && isSameVNodeType(newBranch, activeBranch)) {\n        // toggled \"back\" to current active branch\n        patch(activeBranch, newBranch, container, anchor, parentComponent, suspense, isSVG, slotScopeIds, optimized); // force resolve\n\n        suspense.resolve(true);\n      } else {\n        // switched to a 3rd branch\n        patch(null, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG, slotScopeIds, optimized);\n\n        if (suspense.deps <= 0) {\n          suspense.resolve();\n        }\n      }\n    }\n  } else {\n    if (activeBranch && isSameVNodeType(newBranch, activeBranch)) {\n      // root did not change, just normal patch\n      patch(activeBranch, newBranch, container, anchor, parentComponent, suspense, isSVG, slotScopeIds, optimized);\n      setActiveBranch(suspense, newBranch);\n    } else {\n      // root node toggled\n      // invoke @pending event\n      triggerEvent(n2, 'onPending'); // mount pending branch in off-dom container\n\n      suspense.pendingBranch = newBranch;\n      suspense.pendingId++;\n      patch(null, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG, slotScopeIds, optimized);\n\n      if (suspense.deps <= 0) {\n        // incoming branch has no async deps, resolve now.\n        suspense.resolve();\n      } else {\n        const {\n          timeout,\n          pendingId\n        } = suspense;\n\n        if (timeout > 0) {\n          setTimeout(() => {\n            if (suspense.pendingId === pendingId) {\n              suspense.fallback(newFallback);\n            }\n          }, timeout);\n        } else if (timeout === 0) {\n          suspense.fallback(newFallback);\n        }\n      }\n    }\n  }\n}\n\nlet hasWarned = false;\n\nfunction createSuspenseBoundary(vnode, parent, parentComponent, container, hiddenContainer, anchor, isSVG, slotScopeIds, optimized, rendererInternals, isHydrating = false) {\n  /* istanbul ignore if */\n  if (false) {}\n\n  const {\n    p: patch,\n    m: move,\n    um: unmount,\n    n: next,\n    o: {\n      parentNode,\n      remove\n    }\n  } = rendererInternals;\n  const timeout = toNumber(vnode.props && vnode.props.timeout);\n  const suspense = {\n    vnode,\n    parent,\n    parentComponent,\n    isSVG,\n    container,\n    hiddenContainer,\n    anchor,\n    deps: 0,\n    pendingId: 0,\n    timeout: typeof timeout === 'number' ? timeout : -1,\n    activeBranch: null,\n    pendingBranch: null,\n    isInFallback: true,\n    isHydrating,\n    isUnmounted: false,\n    effects: [],\n\n    resolve(resume = false) {\n      if (false) {}\n\n      const {\n        vnode,\n        activeBranch,\n        pendingBranch,\n        pendingId,\n        effects,\n        parentComponent,\n        container\n      } = suspense;\n\n      if (suspense.isHydrating) {\n        suspense.isHydrating = false;\n      } else if (!resume) {\n        const delayEnter = activeBranch && pendingBranch.transition && pendingBranch.transition.mode === 'out-in';\n\n        if (delayEnter) {\n          activeBranch.transition.afterLeave = () => {\n            if (pendingId === suspense.pendingId) {\n              move(pendingBranch, container, anchor, 0\n              /* ENTER */\n              );\n            }\n          };\n        } // this is initial anchor on mount\n\n\n        let {\n          anchor\n        } = suspense; // unmount current active tree\n\n        if (activeBranch) {\n          // if the fallback tree was mounted, it may have been moved\n          // as part of a parent suspense. get the latest anchor for insertion\n          anchor = next(activeBranch);\n          unmount(activeBranch, parentComponent, suspense, true);\n        }\n\n        if (!delayEnter) {\n          // move content from off-dom container to actual container\n          move(pendingBranch, container, anchor, 0\n          /* ENTER */\n          );\n        }\n      }\n\n      setActiveBranch(suspense, pendingBranch);\n      suspense.pendingBranch = null;\n      suspense.isInFallback = false; // flush buffered effects\n      // check if there is a pending parent suspense\n\n      let parent = suspense.parent;\n      let hasUnresolvedAncestor = false;\n\n      while (parent) {\n        if (parent.pendingBranch) {\n          // found a pending parent suspense, merge buffered post jobs\n          // into that parent\n          parent.effects.push(...effects);\n          hasUnresolvedAncestor = true;\n          break;\n        }\n\n        parent = parent.parent;\n      } // no pending parent suspense, flush all jobs\n\n\n      if (!hasUnresolvedAncestor) {\n        queuePostFlushCb(effects);\n      }\n\n      suspense.effects = []; // invoke @resolve event\n\n      triggerEvent(vnode, 'onResolve');\n    },\n\n    fallback(fallbackVNode) {\n      if (!suspense.pendingBranch) {\n        return;\n      }\n\n      const {\n        vnode,\n        activeBranch,\n        parentComponent,\n        container,\n        isSVG\n      } = suspense; // invoke @fallback event\n\n      triggerEvent(vnode, 'onFallback');\n      const anchor = next(activeBranch);\n\n      const mountFallback = () => {\n        if (!suspense.isInFallback) {\n          return;\n        } // mount the fallback tree\n\n\n        patch(null, fallbackVNode, container, anchor, parentComponent, null, // fallback tree will not have suspense context\n        isSVG, slotScopeIds, optimized);\n        setActiveBranch(suspense, fallbackVNode);\n      };\n\n      const delayEnter = fallbackVNode.transition && fallbackVNode.transition.mode === 'out-in';\n\n      if (delayEnter) {\n        activeBranch.transition.afterLeave = mountFallback;\n      }\n\n      suspense.isInFallback = true; // unmount current active branch\n\n      unmount(activeBranch, parentComponent, null, // no suspense so unmount hooks fire now\n      true // shouldRemove\n      );\n\n      if (!delayEnter) {\n        mountFallback();\n      }\n    },\n\n    move(container, anchor, type) {\n      suspense.activeBranch && move(suspense.activeBranch, container, anchor, type);\n      suspense.container = container;\n    },\n\n    next() {\n      return suspense.activeBranch && next(suspense.activeBranch);\n    },\n\n    registerDep(instance, setupRenderEffect) {\n      const isInPendingSuspense = !!suspense.pendingBranch;\n\n      if (isInPendingSuspense) {\n        suspense.deps++;\n      }\n\n      const hydratedEl = instance.vnode.el;\n      instance.asyncDep.catch(err => {\n        handleError(err, instance, 0\n        /* SETUP_FUNCTION */\n        );\n      }).then(asyncSetupResult => {\n        // retry when the setup() promise resolves.\n        // component may have been unmounted before resolve.\n        if (instance.isUnmounted || suspense.isUnmounted || suspense.pendingId !== instance.suspenseId) {\n          return;\n        } // retry from this component\n\n\n        instance.asyncResolved = true;\n        const {\n          vnode\n        } = instance;\n\n        if (false) {}\n\n        handleSetupResult(instance, asyncSetupResult, false);\n\n        if (hydratedEl) {\n          // vnode may have been replaced if an update happened before the\n          // async dep is resolved.\n          vnode.el = hydratedEl;\n        }\n\n        const placeholder = !hydratedEl && instance.subTree.el;\n        setupRenderEffect(instance, vnode, // component may have been moved before resolve.\n        // if this is not a hydration, instance.subTree will be the comment\n        // placeholder.\n        parentNode(hydratedEl || instance.subTree.el), // anchor will not be used if this is hydration, so only need to\n        // consider the comment placeholder case.\n        hydratedEl ? null : next(instance.subTree), suspense, isSVG, optimized);\n\n        if (placeholder) {\n          remove(placeholder);\n        }\n\n        updateHOCHostEl(instance, vnode.el);\n\n        if (false) {} // only decrease deps count if suspense is not already resolved\n\n\n        if (isInPendingSuspense && --suspense.deps === 0) {\n          suspense.resolve();\n        }\n      });\n    },\n\n    unmount(parentSuspense, doRemove) {\n      suspense.isUnmounted = true;\n\n      if (suspense.activeBranch) {\n        unmount(suspense.activeBranch, parentComponent, parentSuspense, doRemove);\n      }\n\n      if (suspense.pendingBranch) {\n        unmount(suspense.pendingBranch, parentComponent, parentSuspense, doRemove);\n      }\n    }\n\n  };\n  return suspense;\n}\n\nfunction hydrateSuspense(node, vnode, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, rendererInternals, hydrateNode) {\n  /* eslint-disable no-restricted-globals */\n  const suspense = vnode.suspense = createSuspenseBoundary(vnode, parentSuspense, parentComponent, node.parentNode, document.createElement('div'), null, isSVG, slotScopeIds, optimized, rendererInternals, true\n  /* hydrating */\n  ); // there are two possible scenarios for server-rendered suspense:\n  // - success: ssr content should be fully resolved\n  // - failure: ssr content should be the fallback branch.\n  // however, on the client we don't really know if it has failed or not\n  // attempt to hydrate the DOM assuming it has succeeded, but we still\n  // need to construct a suspense boundary first\n\n  const result = hydrateNode(node, suspense.pendingBranch = vnode.ssContent, parentComponent, suspense, slotScopeIds, optimized);\n\n  if (suspense.deps === 0) {\n    suspense.resolve();\n  }\n\n  return result;\n  /* eslint-enable no-restricted-globals */\n}\n\nfunction normalizeSuspenseChildren(vnode) {\n  const {\n    shapeFlag,\n    children\n  } = vnode;\n  const isSlotChildren = shapeFlag & 32\n  /* SLOTS_CHILDREN */\n  ;\n  vnode.ssContent = normalizeSuspenseSlot(isSlotChildren ? children.default : children);\n  vnode.ssFallback = isSlotChildren ? normalizeSuspenseSlot(children.fallback) : createVNode(Comment);\n}\n\nfunction normalizeSuspenseSlot(s) {\n  let block;\n\n  if (isFunction(s)) {\n    const trackBlock = isBlockTreeEnabled && s._c;\n\n    if (trackBlock) {\n      // disableTracking: false\n      // allow block tracking for compiled slots\n      // (see ./componentRenderContext.ts)\n      s._d = false;\n      openBlock();\n    }\n\n    s = s();\n\n    if (trackBlock) {\n      s._d = true;\n      block = currentBlock;\n      closeBlock();\n    }\n  }\n\n  if (shared_esm_bundler_isArray(s)) {\n    const singleChild = filterSingleRoot(s);\n\n    if (false) {}\n\n    s = singleChild;\n  }\n\n  s = normalizeVNode(s);\n\n  if (block && !s.dynamicChildren) {\n    s.dynamicChildren = block.filter(c => c !== s);\n  }\n\n  return s;\n}\n\nfunction queueEffectWithSuspense(fn, suspense) {\n  if (suspense && suspense.pendingBranch) {\n    if (shared_esm_bundler_isArray(fn)) {\n      suspense.effects.push(...fn);\n    } else {\n      suspense.effects.push(fn);\n    }\n  } else {\n    queuePostFlushCb(fn);\n  }\n}\n\nfunction setActiveBranch(suspense, branch) {\n  suspense.activeBranch = branch;\n  const {\n    vnode,\n    parentComponent\n  } = suspense;\n  const el = vnode.el = branch.el; // in case suspense is the root node of a component,\n  // recursively update the HOC el\n\n  if (parentComponent && parentComponent.subTree === vnode) {\n    parentComponent.vnode.el = el;\n    updateHOCHostEl(parentComponent, el);\n  }\n}\n\nfunction provide(key, value) {\n  if (!currentInstance) {\n    if (false) {}\n  } else {\n    let provides = currentInstance.provides; // by default an instance inherits its parent's provides object\n    // but when it needs to provide values of its own, it creates its\n    // own provides object using parent provides object as prototype.\n    // this way in `inject` we can simply look up injections from direct\n    // parent and let the prototype chain do the work.\n\n    const parentProvides = currentInstance.parent && currentInstance.parent.provides;\n\n    if (parentProvides === provides) {\n      provides = currentInstance.provides = Object.create(parentProvides);\n    } // TS doesn't allow symbol as index type\n\n\n    provides[key] = value;\n  }\n}\n\nfunction inject(key, defaultValue, treatDefaultAsFactory = false) {\n  // fallback to `currentRenderingInstance` so that this can be called in\n  // a functional component\n  const instance = currentInstance || currentRenderingInstance;\n\n  if (instance) {\n    // #2400\n    // to support `app.use` plugins,\n    // fallback to appContext's `provides` if the instance is at root\n    const provides = instance.parent == null ? instance.vnode.appContext && instance.vnode.appContext.provides : instance.parent.provides;\n\n    if (provides && key in provides) {\n      // TS doesn't allow symbol as index type\n      return provides[key];\n    } else if (arguments.length > 1) {\n      return treatDefaultAsFactory && isFunction(defaultValue) ? defaultValue.call(instance.proxy) : defaultValue;\n    } else if (false) {}\n  } else if (false) {}\n} // Simple effect.\n\n\nfunction watchEffect(effect, options) {\n  return doWatch(effect, null, options);\n}\n\nfunction watchPostEffect(effect, options) {\n  return doWatch(effect, null,  false ? 0 : {\n    flush: 'post'\n  });\n}\n\nfunction watchSyncEffect(effect, options) {\n  return doWatch(effect, null,  false ? 0 : {\n    flush: 'sync'\n  });\n} // initial value for watchers to trigger on undefined initial values\n\n\nconst INITIAL_WATCHER_VALUE = {}; // implementation\n\nfunction watch(source, cb, options) {\n  if (false) {}\n\n  return doWatch(source, cb, options);\n}\n\nfunction doWatch(source, cb, {\n  immediate,\n  deep,\n  flush,\n  onTrack,\n  onTrigger\n} = EMPTY_OBJ) {\n  if (false) {}\n\n  const warnInvalidSource = s => {\n    runtime_core_esm_bundler_warn(`Invalid watch source: `, s, `A watch source can only be a getter/effect function, a ref, ` + `a reactive object, or an array of these types.`);\n  };\n\n  const instance = currentInstance;\n  let getter;\n  let forceTrigger = false;\n  let isMultiSource = false;\n\n  if (isRef(source)) {\n    getter = () => source.value;\n\n    forceTrigger = isShallow(source);\n  } else if (isReactive(source)) {\n    getter = () => source;\n\n    deep = true;\n  } else if (shared_esm_bundler_isArray(source)) {\n    isMultiSource = true;\n    forceTrigger = source.some(isReactive);\n\n    getter = () => source.map(s => {\n      if (isRef(s)) {\n        return s.value;\n      } else if (isReactive(s)) {\n        return traverse(s);\n      } else if (isFunction(s)) {\n        return callWithErrorHandling(s, instance, 2\n        /* WATCH_GETTER */\n        );\n      } else {\n         false && 0;\n      }\n    });\n  } else if (isFunction(source)) {\n    if (cb) {\n      // getter with cb\n      getter = () => callWithErrorHandling(source, instance, 2\n      /* WATCH_GETTER */\n      );\n    } else {\n      // no cb -> simple effect\n      getter = () => {\n        if (instance && instance.isUnmounted) {\n          return;\n        }\n\n        if (cleanup) {\n          cleanup();\n        }\n\n        return callWithAsyncErrorHandling(source, instance, 3\n        /* WATCH_CALLBACK */\n        , [onCleanup]);\n      };\n    }\n  } else {\n    getter = shared_esm_bundler_NOOP;\n     false && 0;\n  }\n\n  if (cb && deep) {\n    const baseGetter = getter;\n\n    getter = () => traverse(baseGetter());\n  }\n\n  let cleanup;\n\n  let onCleanup = fn => {\n    cleanup = effect.onStop = () => {\n      callWithErrorHandling(fn, instance, 4\n      /* WATCH_CLEANUP */\n      );\n    };\n  }; // in SSR there is no need to setup an actual effect, and it should be noop\n  // unless it's eager\n\n\n  if (isInSSRComponentSetup) {\n    // we will also not call the invalidate callback (+ runner is not set up)\n    onCleanup = shared_esm_bundler_NOOP;\n\n    if (!cb) {\n      getter();\n    } else if (immediate) {\n      callWithAsyncErrorHandling(cb, instance, 3\n      /* WATCH_CALLBACK */\n      , [getter(), isMultiSource ? [] : undefined, onCleanup]);\n    }\n\n    return shared_esm_bundler_NOOP;\n  }\n\n  let oldValue = isMultiSource ? [] : INITIAL_WATCHER_VALUE;\n\n  const job = () => {\n    if (!effect.active) {\n      return;\n    }\n\n    if (cb) {\n      // watch(source, cb)\n      const newValue = effect.run();\n\n      if (deep || forceTrigger || (isMultiSource ? newValue.some((v, i) => hasChanged(v, oldValue[i])) : hasChanged(newValue, oldValue)) || false) {\n        // cleanup before running cb again\n        if (cleanup) {\n          cleanup();\n        }\n\n        callWithAsyncErrorHandling(cb, instance, 3\n        /* WATCH_CALLBACK */\n        , [newValue, // pass undefined as the old value when it's changed for the first time\n        oldValue === INITIAL_WATCHER_VALUE ? undefined : oldValue, onCleanup]);\n        oldValue = newValue;\n      }\n    } else {\n      // watchEffect\n      effect.run();\n    }\n  }; // important: mark the job as a watcher callback so that scheduler knows\n  // it is allowed to self-trigger (#1727)\n\n\n  job.allowRecurse = !!cb;\n  let scheduler;\n\n  if (flush === 'sync') {\n    scheduler = job; // the scheduler function gets called directly\n  } else if (flush === 'post') {\n    scheduler = () => queuePostRenderEffect(job, instance && instance.suspense);\n  } else {\n    // default: 'pre'\n    scheduler = () => {\n      if (!instance || instance.isMounted) {\n        queuePreFlushCb(job);\n      } else {\n        // with 'pre' option, the first call must happen before\n        // the component is mounted so it is called synchronously.\n        job();\n      }\n    };\n  }\n\n  const effect = new ReactiveEffect(getter, scheduler);\n\n  if (false) {} // initial run\n\n\n  if (cb) {\n    if (immediate) {\n      job();\n    } else {\n      oldValue = effect.run();\n    }\n  } else if (flush === 'post') {\n    queuePostRenderEffect(effect.run.bind(effect), instance && instance.suspense);\n  } else {\n    effect.run();\n  }\n\n  return () => {\n    effect.stop();\n\n    if (instance && instance.scope) {\n      remove(instance.scope.effects, effect);\n    }\n  };\n} // this.$watch\n\n\nfunction instanceWatch(source, value, options) {\n  const publicThis = this.proxy;\n  const getter = shared_esm_bundler_isString(source) ? source.includes('.') ? createPathGetter(publicThis, source) : () => publicThis[source] : source.bind(publicThis, publicThis);\n  let cb;\n\n  if (isFunction(value)) {\n    cb = value;\n  } else {\n    cb = value.handler;\n    options = value;\n  }\n\n  const cur = currentInstance;\n  setCurrentInstance(this);\n  const res = doWatch(getter, cb.bind(publicThis), options);\n\n  if (cur) {\n    setCurrentInstance(cur);\n  } else {\n    unsetCurrentInstance();\n  }\n\n  return res;\n}\n\nfunction createPathGetter(ctx, path) {\n  const segments = path.split('.');\n  return () => {\n    let cur = ctx;\n\n    for (let i = 0; i < segments.length && cur; i++) {\n      cur = cur[segments[i]];\n    }\n\n    return cur;\n  };\n}\n\nfunction traverse(value, seen) {\n  if (!shared_esm_bundler_isObject(value) || value[\"__v_skip\"\n  /* SKIP */\n  ]) {\n    return value;\n  }\n\n  seen = seen || new Set();\n\n  if (seen.has(value)) {\n    return value;\n  }\n\n  seen.add(value);\n\n  if (isRef(value)) {\n    traverse(value.value, seen);\n  } else if (shared_esm_bundler_isArray(value)) {\n    for (let i = 0; i < value.length; i++) {\n      traverse(value[i], seen);\n    }\n  } else if (isSet(value) || isMap(value)) {\n    value.forEach(v => {\n      traverse(v, seen);\n    });\n  } else if (isPlainObject(value)) {\n    for (const key in value) {\n      traverse(value[key], seen);\n    }\n  }\n\n  return value;\n}\n\nfunction useTransitionState() {\n  const state = {\n    isMounted: false,\n    isLeaving: false,\n    isUnmounting: false,\n    leavingVNodes: new Map()\n  };\n  onMounted(() => {\n    state.isMounted = true;\n  });\n  onBeforeUnmount(() => {\n    state.isUnmounting = true;\n  });\n  return state;\n}\n\nconst TransitionHookValidator = [Function, Array];\nconst BaseTransitionImpl = {\n  name: `BaseTransition`,\n  props: {\n    mode: String,\n    appear: Boolean,\n    persisted: Boolean,\n    // enter\n    onBeforeEnter: TransitionHookValidator,\n    onEnter: TransitionHookValidator,\n    onAfterEnter: TransitionHookValidator,\n    onEnterCancelled: TransitionHookValidator,\n    // leave\n    onBeforeLeave: TransitionHookValidator,\n    onLeave: TransitionHookValidator,\n    onAfterLeave: TransitionHookValidator,\n    onLeaveCancelled: TransitionHookValidator,\n    // appear\n    onBeforeAppear: TransitionHookValidator,\n    onAppear: TransitionHookValidator,\n    onAfterAppear: TransitionHookValidator,\n    onAppearCancelled: TransitionHookValidator\n  },\n\n  setup(props, {\n    slots\n  }) {\n    const instance = getCurrentInstance();\n    const state = useTransitionState();\n    let prevTransitionKey;\n    return () => {\n      const children = slots.default && getTransitionRawChildren(slots.default(), true);\n\n      if (!children || !children.length) {\n        return;\n      }\n\n      let child = children[0];\n\n      if (children.length > 1) {\n        let hasFound = false; // locate first non-comment child\n\n        for (const c of children) {\n          if (c.type !== Comment) {\n            if (false) {}\n\n            child = c;\n            hasFound = true;\n            if (true) break;\n          }\n        }\n      } // there's no need to track reactivity for these props so use the raw\n      // props for a bit better perf\n\n\n      const rawProps = reactivity_esm_bundler_toRaw(props);\n      const {\n        mode\n      } = rawProps; // check mode\n\n      if (false) {}\n\n      if (state.isLeaving) {\n        return emptyPlaceholder(child);\n      } // in the case of <transition><keep-alive/></transition>, we need to\n      // compare the type of the kept-alive children.\n\n\n      const innerChild = getKeepAliveChild(child);\n\n      if (!innerChild) {\n        return emptyPlaceholder(child);\n      }\n\n      const enterHooks = resolveTransitionHooks(innerChild, rawProps, state, instance);\n      setTransitionHooks(innerChild, enterHooks);\n      const oldChild = instance.subTree;\n      const oldInnerChild = oldChild && getKeepAliveChild(oldChild);\n      let transitionKeyChanged = false;\n      const {\n        getTransitionKey\n      } = innerChild.type;\n\n      if (getTransitionKey) {\n        const key = getTransitionKey();\n\n        if (prevTransitionKey === undefined) {\n          prevTransitionKey = key;\n        } else if (key !== prevTransitionKey) {\n          prevTransitionKey = key;\n          transitionKeyChanged = true;\n        }\n      } // handle mode\n\n\n      if (oldInnerChild && oldInnerChild.type !== Comment && (!isSameVNodeType(innerChild, oldInnerChild) || transitionKeyChanged)) {\n        const leavingHooks = resolveTransitionHooks(oldInnerChild, rawProps, state, instance); // update old tree's hooks in case of dynamic transition\n\n        setTransitionHooks(oldInnerChild, leavingHooks); // switching between different views\n\n        if (mode === 'out-in') {\n          state.isLeaving = true; // return placeholder node and queue update when leave finishes\n\n          leavingHooks.afterLeave = () => {\n            state.isLeaving = false;\n            instance.update();\n          };\n\n          return emptyPlaceholder(child);\n        } else if (mode === 'in-out' && innerChild.type !== Comment) {\n          leavingHooks.delayLeave = (el, earlyRemove, delayedLeave) => {\n            const leavingVNodesCache = getLeavingNodesForType(state, oldInnerChild);\n            leavingVNodesCache[String(oldInnerChild.key)] = oldInnerChild; // early removal callback\n\n            el._leaveCb = () => {\n              earlyRemove();\n              el._leaveCb = undefined;\n              delete enterHooks.delayedLeave;\n            };\n\n            enterHooks.delayedLeave = delayedLeave;\n          };\n        }\n      }\n\n      return child;\n    };\n  }\n\n}; // export the public type for h/tsx inference\n// also to avoid inline import() in generated d.ts files\n\nconst BaseTransition = BaseTransitionImpl;\n\nfunction getLeavingNodesForType(state, vnode) {\n  const {\n    leavingVNodes\n  } = state;\n  let leavingVNodesCache = leavingVNodes.get(vnode.type);\n\n  if (!leavingVNodesCache) {\n    leavingVNodesCache = Object.create(null);\n    leavingVNodes.set(vnode.type, leavingVNodesCache);\n  }\n\n  return leavingVNodesCache;\n} // The transition hooks are attached to the vnode as vnode.transition\n// and will be called at appropriate timing in the renderer.\n\n\nfunction resolveTransitionHooks(vnode, props, state, instance) {\n  const {\n    appear,\n    mode,\n    persisted = false,\n    onBeforeEnter,\n    onEnter,\n    onAfterEnter,\n    onEnterCancelled,\n    onBeforeLeave,\n    onLeave,\n    onAfterLeave,\n    onLeaveCancelled,\n    onBeforeAppear,\n    onAppear,\n    onAfterAppear,\n    onAppearCancelled\n  } = props;\n  const key = String(vnode.key);\n  const leavingVNodesCache = getLeavingNodesForType(state, vnode);\n\n  const callHook = (hook, args) => {\n    hook && callWithAsyncErrorHandling(hook, instance, 9\n    /* TRANSITION_HOOK */\n    , args);\n  };\n\n  const hooks = {\n    mode,\n    persisted,\n\n    beforeEnter(el) {\n      let hook = onBeforeEnter;\n\n      if (!state.isMounted) {\n        if (appear) {\n          hook = onBeforeAppear || onBeforeEnter;\n        } else {\n          return;\n        }\n      } // for same element (v-show)\n\n\n      if (el._leaveCb) {\n        el._leaveCb(true\n        /* cancelled */\n        );\n      } // for toggled element with same key (v-if)\n\n\n      const leavingVNode = leavingVNodesCache[key];\n\n      if (leavingVNode && isSameVNodeType(vnode, leavingVNode) && leavingVNode.el._leaveCb) {\n        // force early removal (not cancelled)\n        leavingVNode.el._leaveCb();\n      }\n\n      callHook(hook, [el]);\n    },\n\n    enter(el) {\n      let hook = onEnter;\n      let afterHook = onAfterEnter;\n      let cancelHook = onEnterCancelled;\n\n      if (!state.isMounted) {\n        if (appear) {\n          hook = onAppear || onEnter;\n          afterHook = onAfterAppear || onAfterEnter;\n          cancelHook = onAppearCancelled || onEnterCancelled;\n        } else {\n          return;\n        }\n      }\n\n      let called = false;\n\n      const done = el._enterCb = cancelled => {\n        if (called) return;\n        called = true;\n\n        if (cancelled) {\n          callHook(cancelHook, [el]);\n        } else {\n          callHook(afterHook, [el]);\n        }\n\n        if (hooks.delayedLeave) {\n          hooks.delayedLeave();\n        }\n\n        el._enterCb = undefined;\n      };\n\n      if (hook) {\n        hook(el, done);\n\n        if (hook.length <= 1) {\n          done();\n        }\n      } else {\n        done();\n      }\n    },\n\n    leave(el, remove) {\n      const key = String(vnode.key);\n\n      if (el._enterCb) {\n        el._enterCb(true\n        /* cancelled */\n        );\n      }\n\n      if (state.isUnmounting) {\n        return remove();\n      }\n\n      callHook(onBeforeLeave, [el]);\n      let called = false;\n\n      const done = el._leaveCb = cancelled => {\n        if (called) return;\n        called = true;\n        remove();\n\n        if (cancelled) {\n          callHook(onLeaveCancelled, [el]);\n        } else {\n          callHook(onAfterLeave, [el]);\n        }\n\n        el._leaveCb = undefined;\n\n        if (leavingVNodesCache[key] === vnode) {\n          delete leavingVNodesCache[key];\n        }\n      };\n\n      leavingVNodesCache[key] = vnode;\n\n      if (onLeave) {\n        onLeave(el, done);\n\n        if (onLeave.length <= 1) {\n          done();\n        }\n      } else {\n        done();\n      }\n    },\n\n    clone(vnode) {\n      return resolveTransitionHooks(vnode, props, state, instance);\n    }\n\n  };\n  return hooks;\n} // the placeholder really only handles one special case: KeepAlive\n// in the case of a KeepAlive in a leave phase we need to return a KeepAlive\n// placeholder with empty content to avoid the KeepAlive instance from being\n// unmounted.\n\n\nfunction emptyPlaceholder(vnode) {\n  if (isKeepAlive(vnode)) {\n    vnode = cloneVNode(vnode);\n    vnode.children = null;\n    return vnode;\n  }\n}\n\nfunction getKeepAliveChild(vnode) {\n  return isKeepAlive(vnode) ? vnode.children ? vnode.children[0] : undefined : vnode;\n}\n\nfunction setTransitionHooks(vnode, hooks) {\n  if (vnode.shapeFlag & 6\n  /* COMPONENT */\n  && vnode.component) {\n    setTransitionHooks(vnode.component.subTree, hooks);\n  } else if (vnode.shapeFlag & 128\n  /* SUSPENSE */\n  ) {\n    vnode.ssContent.transition = hooks.clone(vnode.ssContent);\n    vnode.ssFallback.transition = hooks.clone(vnode.ssFallback);\n  } else {\n    vnode.transition = hooks;\n  }\n}\n\nfunction getTransitionRawChildren(children, keepComment = false, parentKey) {\n  let ret = [];\n  let keyedFragmentCount = 0;\n\n  for (let i = 0; i < children.length; i++) {\n    let child = children[i]; // #5360 inherit parent key in case of <template v-for>\n\n    const key = parentKey == null ? child.key : String(parentKey) + String(child.key != null ? child.key : i); // handle fragment children case, e.g. v-for\n\n    if (child.type === Fragment) {\n      if (child.patchFlag & 128\n      /* KEYED_FRAGMENT */\n      ) keyedFragmentCount++;\n      ret = ret.concat(getTransitionRawChildren(child.children, keepComment, key));\n    } // comment placeholders should be skipped, e.g. v-if\n    else if (keepComment || child.type !== Comment) {\n      ret.push(key != null ? cloneVNode(child, {\n        key\n      }) : child);\n    }\n  } // #1126 if a transition children list contains multiple sub fragments, these\n  // fragments will be merged into a flat children array. Since each v-for\n  // fragment may contain different static bindings inside, we need to de-op\n  // these children to force full diffs to ensure correct behavior.\n\n\n  if (keyedFragmentCount > 1) {\n    for (let i = 0; i < ret.length; i++) {\n      ret[i].patchFlag = -2\n      /* BAIL */\n      ;\n    }\n  }\n\n  return ret;\n} // implementation, close to no-op\n\n\nfunction defineComponent(options) {\n  return isFunction(options) ? {\n    setup: options,\n    name: options.name\n  } : options;\n}\n\nconst isAsyncWrapper = i => !!i.type.__asyncLoader;\n\nfunction defineAsyncComponent(source) {\n  if (isFunction(source)) {\n    source = {\n      loader: source\n    };\n  }\n\n  const {\n    loader,\n    loadingComponent,\n    errorComponent,\n    delay = 200,\n    timeout,\n    // undefined = never times out\n    suspensible = true,\n    onError: userOnError\n  } = source;\n  let pendingRequest = null;\n  let resolvedComp;\n  let retries = 0;\n\n  const retry = () => {\n    retries++;\n    pendingRequest = null;\n    return load();\n  };\n\n  const load = () => {\n    let thisRequest;\n    return pendingRequest || (thisRequest = pendingRequest = loader().catch(err => {\n      err = err instanceof Error ? err : new Error(String(err));\n\n      if (userOnError) {\n        return new Promise((resolve, reject) => {\n          const userRetry = () => resolve(retry());\n\n          const userFail = () => reject(err);\n\n          userOnError(err, userRetry, userFail, retries + 1);\n        });\n      } else {\n        throw err;\n      }\n    }).then(comp => {\n      if (thisRequest !== pendingRequest && pendingRequest) {\n        return pendingRequest;\n      }\n\n      if (false) {} // interop module default\n\n\n      if (comp && (comp.__esModule || comp[Symbol.toStringTag] === 'Module')) {\n        comp = comp.default;\n      }\n\n      if (false) {}\n\n      resolvedComp = comp;\n      return comp;\n    }));\n  };\n\n  return defineComponent({\n    name: 'AsyncComponentWrapper',\n    __asyncLoader: load,\n\n    get __asyncResolved() {\n      return resolvedComp;\n    },\n\n    setup() {\n      const instance = currentInstance; // already resolved\n\n      if (resolvedComp) {\n        return () => createInnerComp(resolvedComp, instance);\n      }\n\n      const onError = err => {\n        pendingRequest = null;\n        handleError(err, instance, 13\n        /* ASYNC_COMPONENT_LOADER */\n        , !errorComponent\n        /* do not throw in dev if user provided error component */\n        );\n      }; // suspense-controlled or SSR.\n\n\n      if (suspensible && instance.suspense || isInSSRComponentSetup) {\n        return load().then(comp => {\n          return () => createInnerComp(comp, instance);\n        }).catch(err => {\n          onError(err);\n          return () => errorComponent ? createVNode(errorComponent, {\n            error: err\n          }) : null;\n        });\n      }\n\n      const loaded = ref(false);\n      const error = ref();\n      const delayed = ref(!!delay);\n\n      if (delay) {\n        setTimeout(() => {\n          delayed.value = false;\n        }, delay);\n      }\n\n      if (timeout != null) {\n        setTimeout(() => {\n          if (!loaded.value && !error.value) {\n            const err = new Error(`Async component timed out after ${timeout}ms.`);\n            onError(err);\n            error.value = err;\n          }\n        }, timeout);\n      }\n\n      load().then(() => {\n        loaded.value = true;\n\n        if (instance.parent && isKeepAlive(instance.parent.vnode)) {\n          // parent is keep-alive, force update so the loaded component's\n          // name is taken into account\n          queueJob(instance.parent.update);\n        }\n      }).catch(err => {\n        onError(err);\n        error.value = err;\n      });\n      return () => {\n        if (loaded.value && resolvedComp) {\n          return createInnerComp(resolvedComp, instance);\n        } else if (error.value && errorComponent) {\n          return createVNode(errorComponent, {\n            error: error.value\n          });\n        } else if (loadingComponent && !delayed.value) {\n          return createVNode(loadingComponent);\n        }\n      };\n    }\n\n  });\n}\n\nfunction createInnerComp(comp, {\n  vnode: {\n    ref,\n    props,\n    children\n  }\n}) {\n  const vnode = createVNode(comp, props, children); // ensure inner component inherits the async wrapper's ref owner\n\n  vnode.ref = ref;\n  return vnode;\n}\n\nconst isKeepAlive = vnode => vnode.type.__isKeepAlive;\n\nconst KeepAliveImpl = {\n  name: `KeepAlive`,\n  // Marker for special handling inside the renderer. We are not using a ===\n  // check directly on KeepAlive in the renderer, because importing it directly\n  // would prevent it from being tree-shaken.\n  __isKeepAlive: true,\n  props: {\n    include: [String, RegExp, Array],\n    exclude: [String, RegExp, Array],\n    max: [String, Number]\n  },\n\n  setup(props, {\n    slots\n  }) {\n    const instance = getCurrentInstance(); // KeepAlive communicates with the instantiated renderer via the\n    // ctx where the renderer passes in its internals,\n    // and the KeepAlive instance exposes activate/deactivate implementations.\n    // The whole point of this is to avoid importing KeepAlive directly in the\n    // renderer to facilitate tree-shaking.\n\n    const sharedContext = instance.ctx; // if the internal renderer is not registered, it indicates that this is server-side rendering,\n    // for KeepAlive, we just need to render its children\n\n    if (!sharedContext.renderer) {\n      return slots.default;\n    }\n\n    const cache = new Map();\n    const keys = new Set();\n    let current = null;\n\n    if ( false || __VUE_PROD_DEVTOOLS__) {\n      instance.__v_cache = cache;\n    }\n\n    const parentSuspense = instance.suspense;\n    const {\n      renderer: {\n        p: patch,\n        m: move,\n        um: _unmount,\n        o: {\n          createElement\n        }\n      }\n    } = sharedContext;\n    const storageContainer = createElement('div');\n\n    sharedContext.activate = (vnode, container, anchor, isSVG, optimized) => {\n      const instance = vnode.component;\n      move(vnode, container, anchor, 0\n      /* ENTER */\n      , parentSuspense); // in case props have changed\n\n      patch(instance.vnode, vnode, container, anchor, instance, parentSuspense, isSVG, vnode.slotScopeIds, optimized);\n      queuePostRenderEffect(() => {\n        instance.isDeactivated = false;\n\n        if (instance.a) {\n          invokeArrayFns(instance.a);\n        }\n\n        const vnodeHook = vnode.props && vnode.props.onVnodeMounted;\n\n        if (vnodeHook) {\n          invokeVNodeHook(vnodeHook, instance.parent, vnode);\n        }\n      }, parentSuspense);\n\n      if ( false || __VUE_PROD_DEVTOOLS__) {\n        // Update components tree\n        devtoolsComponentAdded(instance);\n      }\n    };\n\n    sharedContext.deactivate = vnode => {\n      const instance = vnode.component;\n      move(vnode, storageContainer, null, 1\n      /* LEAVE */\n      , parentSuspense);\n      queuePostRenderEffect(() => {\n        if (instance.da) {\n          invokeArrayFns(instance.da);\n        }\n\n        const vnodeHook = vnode.props && vnode.props.onVnodeUnmounted;\n\n        if (vnodeHook) {\n          invokeVNodeHook(vnodeHook, instance.parent, vnode);\n        }\n\n        instance.isDeactivated = true;\n      }, parentSuspense);\n\n      if ( false || __VUE_PROD_DEVTOOLS__) {\n        // Update components tree\n        devtoolsComponentAdded(instance);\n      }\n    };\n\n    function unmount(vnode) {\n      // reset the shapeFlag so it can be properly unmounted\n      resetShapeFlag(vnode);\n\n      _unmount(vnode, instance, parentSuspense, true);\n    }\n\n    function pruneCache(filter) {\n      cache.forEach((vnode, key) => {\n        const name = getComponentName(vnode.type);\n\n        if (name && (!filter || !filter(name))) {\n          pruneCacheEntry(key);\n        }\n      });\n    }\n\n    function pruneCacheEntry(key) {\n      const cached = cache.get(key);\n\n      if (!current || cached.type !== current.type) {\n        unmount(cached);\n      } else if (current) {\n        // current active instance should no longer be kept-alive.\n        // we can't unmount it now but it might be later, so reset its flag now.\n        resetShapeFlag(current);\n      }\n\n      cache.delete(key);\n      keys.delete(key);\n    } // prune cache on include/exclude prop change\n\n\n    watch(() => [props.include, props.exclude], ([include, exclude]) => {\n      include && pruneCache(name => matches(include, name));\n      exclude && pruneCache(name => !matches(exclude, name));\n    }, // prune post-render after `current` has been updated\n    {\n      flush: 'post',\n      deep: true\n    }); // cache sub tree after render\n\n    let pendingCacheKey = null;\n\n    const cacheSubtree = () => {\n      // fix #1621, the pendingCacheKey could be 0\n      if (pendingCacheKey != null) {\n        cache.set(pendingCacheKey, getInnerChild(instance.subTree));\n      }\n    };\n\n    onMounted(cacheSubtree);\n    onUpdated(cacheSubtree);\n    onBeforeUnmount(() => {\n      cache.forEach(cached => {\n        const {\n          subTree,\n          suspense\n        } = instance;\n        const vnode = getInnerChild(subTree);\n\n        if (cached.type === vnode.type) {\n          // current instance will be unmounted as part of keep-alive's unmount\n          resetShapeFlag(vnode); // but invoke its deactivated hook here\n\n          const da = vnode.component.da;\n          da && queuePostRenderEffect(da, suspense);\n          return;\n        }\n\n        unmount(cached);\n      });\n    });\n    return () => {\n      pendingCacheKey = null;\n\n      if (!slots.default) {\n        return null;\n      }\n\n      const children = slots.default();\n      const rawVNode = children[0];\n\n      if (children.length > 1) {\n        if (false) {}\n\n        current = null;\n        return children;\n      } else if (!isVNode(rawVNode) || !(rawVNode.shapeFlag & 4\n      /* STATEFUL_COMPONENT */\n      ) && !(rawVNode.shapeFlag & 128\n      /* SUSPENSE */\n      )) {\n        current = null;\n        return rawVNode;\n      }\n\n      let vnode = getInnerChild(rawVNode);\n      const comp = vnode.type; // for async components, name check should be based in its loaded\n      // inner component if available\n\n      const name = getComponentName(isAsyncWrapper(vnode) ? vnode.type.__asyncResolved || {} : comp);\n      const {\n        include,\n        exclude,\n        max\n      } = props;\n\n      if (include && (!name || !matches(include, name)) || exclude && name && matches(exclude, name)) {\n        current = vnode;\n        return rawVNode;\n      }\n\n      const key = vnode.key == null ? comp : vnode.key;\n      const cachedVNode = cache.get(key); // clone vnode if it's reused because we are going to mutate it\n\n      if (vnode.el) {\n        vnode = cloneVNode(vnode);\n\n        if (rawVNode.shapeFlag & 128\n        /* SUSPENSE */\n        ) {\n          rawVNode.ssContent = vnode;\n        }\n      } // #1513 it's possible for the returned vnode to be cloned due to attr\n      // fallthrough or scopeId, so the vnode here may not be the final vnode\n      // that is mounted. Instead of caching it directly, we store the pending\n      // key and cache `instance.subTree` (the normalized vnode) in\n      // beforeMount/beforeUpdate hooks.\n\n\n      pendingCacheKey = key;\n\n      if (cachedVNode) {\n        // copy over mounted state\n        vnode.el = cachedVNode.el;\n        vnode.component = cachedVNode.component;\n\n        if (vnode.transition) {\n          // recursively update transition hooks on subTree\n          setTransitionHooks(vnode, vnode.transition);\n        } // avoid vnode being mounted as fresh\n\n\n        vnode.shapeFlag |= 512\n        /* COMPONENT_KEPT_ALIVE */\n        ; // make this key the freshest\n\n        keys.delete(key);\n        keys.add(key);\n      } else {\n        keys.add(key); // prune oldest entry\n\n        if (max && keys.size > parseInt(max, 10)) {\n          pruneCacheEntry(keys.values().next().value);\n        }\n      } // avoid vnode being unmounted\n\n\n      vnode.shapeFlag |= 256\n      /* COMPONENT_SHOULD_KEEP_ALIVE */\n      ;\n      current = vnode;\n      return rawVNode;\n    };\n  }\n\n}; // export the public type for h/tsx inference\n// also to avoid inline import() in generated d.ts files\n\nconst KeepAlive = KeepAliveImpl;\n\nfunction matches(pattern, name) {\n  if (shared_esm_bundler_isArray(pattern)) {\n    return pattern.some(p => matches(p, name));\n  } else if (shared_esm_bundler_isString(pattern)) {\n    return pattern.split(',').includes(name);\n  } else if (pattern.test) {\n    return pattern.test(name);\n  }\n  /* istanbul ignore next */\n\n\n  return false;\n}\n\nfunction onActivated(hook, target) {\n  registerKeepAliveHook(hook, \"a\"\n  /* ACTIVATED */\n  , target);\n}\n\nfunction onDeactivated(hook, target) {\n  registerKeepAliveHook(hook, \"da\"\n  /* DEACTIVATED */\n  , target);\n}\n\nfunction registerKeepAliveHook(hook, type, target = currentInstance) {\n  // cache the deactivate branch check wrapper for injected hooks so the same\n  // hook can be properly deduped by the scheduler. \"__wdc\" stands for \"with\n  // deactivation check\".\n  const wrappedHook = hook.__wdc || (hook.__wdc = () => {\n    // only fire the hook if the target instance is NOT in a deactivated branch.\n    let current = target;\n\n    while (current) {\n      if (current.isDeactivated) {\n        return;\n      }\n\n      current = current.parent;\n    }\n\n    return hook();\n  });\n\n  injectHook(type, wrappedHook, target); // In addition to registering it on the target instance, we walk up the parent\n  // chain and register it on all ancestor instances that are keep-alive roots.\n  // This avoids the need to walk the entire component tree when invoking these\n  // hooks, and more importantly, avoids the need to track child components in\n  // arrays.\n\n  if (target) {\n    let current = target.parent;\n\n    while (current && current.parent) {\n      if (isKeepAlive(current.parent.vnode)) {\n        injectToKeepAliveRoot(wrappedHook, type, target, current);\n      }\n\n      current = current.parent;\n    }\n  }\n}\n\nfunction injectToKeepAliveRoot(hook, type, target, keepAliveRoot) {\n  // injectHook wraps the original for error handling, so make sure to remove\n  // the wrapped version.\n  const injected = injectHook(type, hook, keepAliveRoot, true\n  /* prepend */\n  );\n  onUnmounted(() => {\n    remove(keepAliveRoot[type], injected);\n  }, target);\n}\n\nfunction resetShapeFlag(vnode) {\n  let shapeFlag = vnode.shapeFlag;\n\n  if (shapeFlag & 256\n  /* COMPONENT_SHOULD_KEEP_ALIVE */\n  ) {\n    shapeFlag -= 256\n    /* COMPONENT_SHOULD_KEEP_ALIVE */\n    ;\n  }\n\n  if (shapeFlag & 512\n  /* COMPONENT_KEPT_ALIVE */\n  ) {\n    shapeFlag -= 512\n    /* COMPONENT_KEPT_ALIVE */\n    ;\n  }\n\n  vnode.shapeFlag = shapeFlag;\n}\n\nfunction getInnerChild(vnode) {\n  return vnode.shapeFlag & 128\n  /* SUSPENSE */\n  ? vnode.ssContent : vnode;\n}\n\nfunction injectHook(type, hook, target = currentInstance, prepend = false) {\n  if (target) {\n    const hooks = target[type] || (target[type] = []); // cache the error handling wrapper for injected hooks so the same hook\n    // can be properly deduped by the scheduler. \"__weh\" stands for \"with error\n    // handling\".\n\n    const wrappedHook = hook.__weh || (hook.__weh = (...args) => {\n      if (target.isUnmounted) {\n        return;\n      } // disable tracking inside all lifecycle hooks\n      // since they can potentially be called inside effects.\n\n\n      pauseTracking(); // Set currentInstance during hook invocation.\n      // This assumes the hook does not synchronously trigger other hooks, which\n      // can only be false when the user does something really funky.\n\n      setCurrentInstance(target);\n      const res = callWithAsyncErrorHandling(hook, target, type, args);\n      unsetCurrentInstance();\n      resetTracking();\n      return res;\n    });\n\n    if (prepend) {\n      hooks.unshift(wrappedHook);\n    } else {\n      hooks.push(wrappedHook);\n    }\n\n    return wrappedHook;\n  } else if (false) {}\n}\n\nconst createHook = lifecycle => (hook, target = currentInstance) => // post-create lifecycle registrations are noops during SSR (except for serverPrefetch)\n(!isInSSRComponentSetup || lifecycle === \"sp\"\n/* SERVER_PREFETCH */\n) && injectHook(lifecycle, hook, target);\n\nconst onBeforeMount = createHook(\"bm\"\n/* BEFORE_MOUNT */\n);\nconst onMounted = createHook(\"m\"\n/* MOUNTED */\n);\nconst onBeforeUpdate = createHook(\"bu\"\n/* BEFORE_UPDATE */\n);\nconst onUpdated = createHook(\"u\"\n/* UPDATED */\n);\nconst onBeforeUnmount = createHook(\"bum\"\n/* BEFORE_UNMOUNT */\n);\nconst onUnmounted = createHook(\"um\"\n/* UNMOUNTED */\n);\nconst onServerPrefetch = createHook(\"sp\"\n/* SERVER_PREFETCH */\n);\nconst onRenderTriggered = createHook(\"rtg\"\n/* RENDER_TRIGGERED */\n);\nconst onRenderTracked = createHook(\"rtc\"\n/* RENDER_TRACKED */\n);\n\nfunction onErrorCaptured(hook, target = currentInstance) {\n  injectHook(\"ec\"\n  /* ERROR_CAPTURED */\n  , hook, target);\n}\n\nfunction createDuplicateChecker() {\n  const cache = Object.create(null);\n  return (type, key) => {\n    if (cache[key]) {\n      runtime_core_esm_bundler_warn(`${type} property \"${key}\" is already defined in ${cache[key]}.`);\n    } else {\n      cache[key] = type;\n    }\n  };\n}\n\nlet shouldCacheAccess = true;\n\nfunction applyOptions(instance) {\n  const options = resolveMergedOptions(instance);\n  const publicThis = instance.proxy;\n  const ctx = instance.ctx; // do not cache property access on public proxy during state initialization\n\n  shouldCacheAccess = false; // call beforeCreate first before accessing other options since\n  // the hook may mutate resolved options (#2791)\n\n  if (options.beforeCreate) {\n    callHook(options.beforeCreate, instance, \"bc\"\n    /* BEFORE_CREATE */\n    );\n  }\n\n  const {\n    // state\n    data: dataOptions,\n    computed: computedOptions,\n    methods,\n    watch: watchOptions,\n    provide: provideOptions,\n    inject: injectOptions,\n    // lifecycle\n    created,\n    beforeMount,\n    mounted,\n    beforeUpdate,\n    updated,\n    activated,\n    deactivated,\n    beforeDestroy,\n    beforeUnmount,\n    destroyed,\n    unmounted,\n    render,\n    renderTracked,\n    renderTriggered,\n    errorCaptured,\n    serverPrefetch,\n    // public API\n    expose,\n    inheritAttrs,\n    // assets\n    components,\n    directives,\n    filters\n  } = options;\n  const checkDuplicateProperties =  false ? 0 : null;\n\n  if (false) {} // options initialization order (to be consistent with Vue 2):\n  // - props (already done outside of this function)\n  // - inject\n  // - methods\n  // - data (deferred since it relies on `this` access)\n  // - computed\n  // - watch (deferred since it relies on `this` access)\n\n\n  if (injectOptions) {\n    resolveInjections(injectOptions, ctx, checkDuplicateProperties, instance.appContext.config.unwrapInjectedRef);\n  }\n\n  if (methods) {\n    for (const key in methods) {\n      const methodHandler = methods[key];\n\n      if (isFunction(methodHandler)) {\n        // In dev mode, we use the `createRenderContext` function to define\n        // methods to the proxy target, and those are read-only but\n        // reconfigurable, so it needs to be redefined here\n        if (false) {} else {\n          ctx[key] = methodHandler.bind(publicThis);\n        }\n\n        if (false) {}\n      } else if (false) {}\n    }\n  }\n\n  if (dataOptions) {\n    if (false) {}\n\n    const data = dataOptions.call(publicThis, publicThis);\n\n    if (false) {}\n\n    if (!shared_esm_bundler_isObject(data)) {\n       false && 0;\n    } else {\n      instance.data = reactive(data);\n\n      if (false) {}\n    }\n  } // state initialization complete at this point - start caching access\n\n\n  shouldCacheAccess = true;\n\n  if (computedOptions) {\n    for (const key in computedOptions) {\n      const opt = computedOptions[key];\n      const get = isFunction(opt) ? opt.bind(publicThis, publicThis) : isFunction(opt.get) ? opt.get.bind(publicThis, publicThis) : shared_esm_bundler_NOOP;\n\n      if (false) {}\n\n      const set = !isFunction(opt) && isFunction(opt.set) ? opt.set.bind(publicThis) :  false ? 0 : shared_esm_bundler_NOOP;\n      const c = runtime_core_esm_bundler_computed({\n        get,\n        set\n      });\n      Object.defineProperty(ctx, key, {\n        enumerable: true,\n        configurable: true,\n        get: () => c.value,\n        set: v => c.value = v\n      });\n\n      if (false) {}\n    }\n  }\n\n  if (watchOptions) {\n    for (const key in watchOptions) {\n      createWatcher(watchOptions[key], ctx, publicThis, key);\n    }\n  }\n\n  if (provideOptions) {\n    const provides = isFunction(provideOptions) ? provideOptions.call(publicThis) : provideOptions;\n    Reflect.ownKeys(provides).forEach(key => {\n      provide(key, provides[key]);\n    });\n  }\n\n  if (created) {\n    callHook(created, instance, \"c\"\n    /* CREATED */\n    );\n  }\n\n  function registerLifecycleHook(register, hook) {\n    if (shared_esm_bundler_isArray(hook)) {\n      hook.forEach(_hook => register(_hook.bind(publicThis)));\n    } else if (hook) {\n      register(hook.bind(publicThis));\n    }\n  }\n\n  registerLifecycleHook(onBeforeMount, beforeMount);\n  registerLifecycleHook(onMounted, mounted);\n  registerLifecycleHook(onBeforeUpdate, beforeUpdate);\n  registerLifecycleHook(onUpdated, updated);\n  registerLifecycleHook(onActivated, activated);\n  registerLifecycleHook(onDeactivated, deactivated);\n  registerLifecycleHook(onErrorCaptured, errorCaptured);\n  registerLifecycleHook(onRenderTracked, renderTracked);\n  registerLifecycleHook(onRenderTriggered, renderTriggered);\n  registerLifecycleHook(onBeforeUnmount, beforeUnmount);\n  registerLifecycleHook(onUnmounted, unmounted);\n  registerLifecycleHook(onServerPrefetch, serverPrefetch);\n\n  if (shared_esm_bundler_isArray(expose)) {\n    if (expose.length) {\n      const exposed = instance.exposed || (instance.exposed = {});\n      expose.forEach(key => {\n        Object.defineProperty(exposed, key, {\n          get: () => publicThis[key],\n          set: val => publicThis[key] = val\n        });\n      });\n    } else if (!instance.exposed) {\n      instance.exposed = {};\n    }\n  } // options that are handled when creating the instance but also need to be\n  // applied from mixins\n\n\n  if (render && instance.render === shared_esm_bundler_NOOP) {\n    instance.render = render;\n  }\n\n  if (inheritAttrs != null) {\n    instance.inheritAttrs = inheritAttrs;\n  } // asset options.\n\n\n  if (components) instance.components = components;\n  if (directives) instance.directives = directives;\n}\n\nfunction resolveInjections(injectOptions, ctx, checkDuplicateProperties = shared_esm_bundler_NOOP, unwrapRef = false) {\n  if (shared_esm_bundler_isArray(injectOptions)) {\n    injectOptions = normalizeInject(injectOptions);\n  }\n\n  for (const key in injectOptions) {\n    const opt = injectOptions[key];\n    let injected;\n\n    if (shared_esm_bundler_isObject(opt)) {\n      if ('default' in opt) {\n        injected = inject(opt.from || key, opt.default, true\n        /* treat default function as factory */\n        );\n      } else {\n        injected = inject(opt.from || key);\n      }\n    } else {\n      injected = inject(opt);\n    }\n\n    if (isRef(injected)) {\n      // TODO remove the check in 3.3\n      if (unwrapRef) {\n        Object.defineProperty(ctx, key, {\n          enumerable: true,\n          configurable: true,\n          get: () => injected.value,\n          set: v => injected.value = v\n        });\n      } else {\n        if (false) {}\n\n        ctx[key] = injected;\n      }\n    } else {\n      ctx[key] = injected;\n    }\n\n    if (false) {}\n  }\n}\n\nfunction callHook(hook, instance, type) {\n  callWithAsyncErrorHandling(shared_esm_bundler_isArray(hook) ? hook.map(h => h.bind(instance.proxy)) : hook.bind(instance.proxy), instance, type);\n}\n\nfunction createWatcher(raw, ctx, publicThis, key) {\n  const getter = key.includes('.') ? createPathGetter(publicThis, key) : () => publicThis[key];\n\n  if (shared_esm_bundler_isString(raw)) {\n    const handler = ctx[raw];\n\n    if (isFunction(handler)) {\n      watch(getter, handler);\n    } else if (false) {}\n  } else if (isFunction(raw)) {\n    watch(getter, raw.bind(publicThis));\n  } else if (shared_esm_bundler_isObject(raw)) {\n    if (shared_esm_bundler_isArray(raw)) {\n      raw.forEach(r => createWatcher(r, ctx, publicThis, key));\n    } else {\n      const handler = isFunction(raw.handler) ? raw.handler.bind(publicThis) : ctx[raw.handler];\n\n      if (isFunction(handler)) {\n        watch(getter, handler, raw);\n      } else if (false) {}\n    }\n  } else if (false) {}\n}\n/**\r\n * Resolve merged options and cache it on the component.\r\n * This is done only once per-component since the merging does not involve\r\n * instances.\r\n */\n\n\nfunction resolveMergedOptions(instance) {\n  const base = instance.type;\n  const {\n    mixins,\n    extends: extendsOptions\n  } = base;\n  const {\n    mixins: globalMixins,\n    optionsCache: cache,\n    config: {\n      optionMergeStrategies\n    }\n  } = instance.appContext;\n  const cached = cache.get(base);\n  let resolved;\n\n  if (cached) {\n    resolved = cached;\n  } else if (!globalMixins.length && !mixins && !extendsOptions) {\n    {\n      resolved = base;\n    }\n  } else {\n    resolved = {};\n\n    if (globalMixins.length) {\n      globalMixins.forEach(m => mergeOptions(resolved, m, optionMergeStrategies, true));\n    }\n\n    mergeOptions(resolved, base, optionMergeStrategies);\n  }\n\n  cache.set(base, resolved);\n  return resolved;\n}\n\nfunction mergeOptions(to, from, strats, asMixin = false) {\n  const {\n    mixins,\n    extends: extendsOptions\n  } = from;\n\n  if (extendsOptions) {\n    mergeOptions(to, extendsOptions, strats, true);\n  }\n\n  if (mixins) {\n    mixins.forEach(m => mergeOptions(to, m, strats, true));\n  }\n\n  for (const key in from) {\n    if (asMixin && key === 'expose') {\n       false && 0;\n    } else {\n      const strat = internalOptionMergeStrats[key] || strats && strats[key];\n      to[key] = strat ? strat(to[key], from[key]) : from[key];\n    }\n  }\n\n  return to;\n}\n\nconst internalOptionMergeStrats = {\n  data: mergeDataFn,\n  props: mergeObjectOptions,\n  emits: mergeObjectOptions,\n  // objects\n  methods: mergeObjectOptions,\n  computed: mergeObjectOptions,\n  // lifecycle\n  beforeCreate: mergeAsArray,\n  created: mergeAsArray,\n  beforeMount: mergeAsArray,\n  mounted: mergeAsArray,\n  beforeUpdate: mergeAsArray,\n  updated: mergeAsArray,\n  beforeDestroy: mergeAsArray,\n  beforeUnmount: mergeAsArray,\n  destroyed: mergeAsArray,\n  unmounted: mergeAsArray,\n  activated: mergeAsArray,\n  deactivated: mergeAsArray,\n  errorCaptured: mergeAsArray,\n  serverPrefetch: mergeAsArray,\n  // assets\n  components: mergeObjectOptions,\n  directives: mergeObjectOptions,\n  // watch\n  watch: mergeWatchOptions,\n  // provide / inject\n  provide: mergeDataFn,\n  inject: mergeInject\n};\n\nfunction mergeDataFn(to, from) {\n  if (!from) {\n    return to;\n  }\n\n  if (!to) {\n    return from;\n  }\n\n  return function mergedDataFn() {\n    return shared_esm_bundler_extend(isFunction(to) ? to.call(this, this) : to, isFunction(from) ? from.call(this, this) : from);\n  };\n}\n\nfunction mergeInject(to, from) {\n  return mergeObjectOptions(normalizeInject(to), normalizeInject(from));\n}\n\nfunction normalizeInject(raw) {\n  if (shared_esm_bundler_isArray(raw)) {\n    const res = {};\n\n    for (let i = 0; i < raw.length; i++) {\n      res[raw[i]] = raw[i];\n    }\n\n    return res;\n  }\n\n  return raw;\n}\n\nfunction mergeAsArray(to, from) {\n  return to ? [...new Set([].concat(to, from))] : from;\n}\n\nfunction mergeObjectOptions(to, from) {\n  return to ? shared_esm_bundler_extend(shared_esm_bundler_extend(Object.create(null), to), from) : from;\n}\n\nfunction mergeWatchOptions(to, from) {\n  if (!to) return from;\n  if (!from) return to;\n  const merged = shared_esm_bundler_extend(Object.create(null), to);\n\n  for (const key in from) {\n    merged[key] = mergeAsArray(to[key], from[key]);\n  }\n\n  return merged;\n}\n\nfunction initProps(instance, rawProps, isStateful, // result of bitwise flag comparison\nisSSR = false) {\n  const props = {};\n  const attrs = {};\n  def(attrs, InternalObjectKey, 1);\n  instance.propsDefaults = Object.create(null);\n  setFullProps(instance, rawProps, props, attrs); // ensure all declared prop keys are present\n\n  for (const key in instance.propsOptions[0]) {\n    if (!(key in props)) {\n      props[key] = undefined;\n    }\n  } // validation\n\n\n  if (false) {}\n\n  if (isStateful) {\n    // stateful\n    instance.props = isSSR ? props : shallowReactive(props);\n  } else {\n    if (!instance.type.props) {\n      // functional w/ optional props, props === attrs\n      instance.props = attrs;\n    } else {\n      // functional w/ declared props\n      instance.props = props;\n    }\n  }\n\n  instance.attrs = attrs;\n}\n\nfunction updateProps(instance, rawProps, rawPrevProps, optimized) {\n  const {\n    props,\n    attrs,\n    vnode: {\n      patchFlag\n    }\n  } = instance;\n  const rawCurrentProps = reactivity_esm_bundler_toRaw(props);\n  const [options] = instance.propsOptions;\n  let hasAttrsChanged = false;\n\n  if ( // always force full diff in dev\n  // - #1942 if hmr is enabled with sfc component\n  // - vite#872 non-sfc component used by sfc component\n   true && (optimized || patchFlag > 0) && !(patchFlag & 16\n  /* FULL_PROPS */\n  )) {\n    if (patchFlag & 8\n    /* PROPS */\n    ) {\n      // Compiler-generated props & no keys change, just set the updated\n      // the props.\n      const propsToUpdate = instance.vnode.dynamicProps;\n\n      for (let i = 0; i < propsToUpdate.length; i++) {\n        let key = propsToUpdate[i]; // skip if the prop key is a declared emit event listener\n\n        if (isEmitListener(instance.emitsOptions, key)) {\n          continue;\n        } // PROPS flag guarantees rawProps to be non-null\n\n\n        const value = rawProps[key];\n\n        if (options) {\n          // attr / props separation was done on init and will be consistent\n          // in this code path, so just check if attrs have it.\n          if (shared_esm_bundler_hasOwn(attrs, key)) {\n            if (value !== attrs[key]) {\n              attrs[key] = value;\n              hasAttrsChanged = true;\n            }\n          } else {\n            const camelizedKey = camelize(key);\n            props[camelizedKey] = resolvePropValue(options, rawCurrentProps, camelizedKey, value, instance, false\n            /* isAbsent */\n            );\n          }\n        } else {\n          if (value !== attrs[key]) {\n            attrs[key] = value;\n            hasAttrsChanged = true;\n          }\n        }\n      }\n    }\n  } else {\n    // full props update.\n    if (setFullProps(instance, rawProps, props, attrs)) {\n      hasAttrsChanged = true;\n    } // in case of dynamic props, check if we need to delete keys from\n    // the props object\n\n\n    let kebabKey;\n\n    for (const key in rawCurrentProps) {\n      if (!rawProps || // for camelCase\n      !shared_esm_bundler_hasOwn(rawProps, key) && ( // it's possible the original props was passed in as kebab-case\n      // and converted to camelCase (#955)\n      (kebabKey = shared_esm_bundler_hyphenate(key)) === key || !shared_esm_bundler_hasOwn(rawProps, kebabKey))) {\n        if (options) {\n          if (rawPrevProps && ( // for camelCase\n          rawPrevProps[key] !== undefined || // for kebab-case\n          rawPrevProps[kebabKey] !== undefined)) {\n            props[key] = resolvePropValue(options, rawCurrentProps, key, undefined, instance, true\n            /* isAbsent */\n            );\n          }\n        } else {\n          delete props[key];\n        }\n      }\n    } // in the case of functional component w/o props declaration, props and\n    // attrs point to the same object so it should already have been updated.\n\n\n    if (attrs !== rawCurrentProps) {\n      for (const key in attrs) {\n        if (!rawProps || !shared_esm_bundler_hasOwn(rawProps, key) && !false) {\n          delete attrs[key];\n          hasAttrsChanged = true;\n        }\n      }\n    }\n  } // trigger updates for $attrs in case it's used in component slots\n\n\n  if (hasAttrsChanged) {\n    trigger(instance, \"set\"\n    /* SET */\n    , '$attrs');\n  }\n\n  if (false) {}\n}\n\nfunction setFullProps(instance, rawProps, props, attrs) {\n  const [options, needCastKeys] = instance.propsOptions;\n  let hasAttrsChanged = false;\n  let rawCastValues;\n\n  if (rawProps) {\n    for (let key in rawProps) {\n      // key, ref are reserved and never passed down\n      if (isReservedProp(key)) {\n        continue;\n      }\n\n      const value = rawProps[key]; // prop option names are camelized during normalization, so to support\n      // kebab -> camel conversion here we need to camelize the key.\n\n      let camelKey;\n\n      if (options && shared_esm_bundler_hasOwn(options, camelKey = camelize(key))) {\n        if (!needCastKeys || !needCastKeys.includes(camelKey)) {\n          props[camelKey] = value;\n        } else {\n          (rawCastValues || (rawCastValues = {}))[camelKey] = value;\n        }\n      } else if (!isEmitListener(instance.emitsOptions, key)) {\n        if (!(key in attrs) || value !== attrs[key]) {\n          attrs[key] = value;\n          hasAttrsChanged = true;\n        }\n      }\n    }\n  }\n\n  if (needCastKeys) {\n    const rawCurrentProps = reactivity_esm_bundler_toRaw(props);\n    const castValues = rawCastValues || EMPTY_OBJ;\n\n    for (let i = 0; i < needCastKeys.length; i++) {\n      const key = needCastKeys[i];\n      props[key] = resolvePropValue(options, rawCurrentProps, key, castValues[key], instance, !shared_esm_bundler_hasOwn(castValues, key));\n    }\n  }\n\n  return hasAttrsChanged;\n}\n\nfunction resolvePropValue(options, props, key, value, instance, isAbsent) {\n  const opt = options[key];\n\n  if (opt != null) {\n    const hasDefault = shared_esm_bundler_hasOwn(opt, 'default'); // default values\n\n    if (hasDefault && value === undefined) {\n      const defaultValue = opt.default;\n\n      if (opt.type !== Function && isFunction(defaultValue)) {\n        const {\n          propsDefaults\n        } = instance;\n\n        if (key in propsDefaults) {\n          value = propsDefaults[key];\n        } else {\n          setCurrentInstance(instance);\n          value = propsDefaults[key] = defaultValue.call(null, props);\n          unsetCurrentInstance();\n        }\n      } else {\n        value = defaultValue;\n      }\n    } // boolean casting\n\n\n    if (opt[0\n    /* shouldCast */\n    ]) {\n      if (isAbsent && !hasDefault) {\n        value = false;\n      } else if (opt[1\n      /* shouldCastTrue */\n      ] && (value === '' || value === shared_esm_bundler_hyphenate(key))) {\n        value = true;\n      }\n    }\n  }\n\n  return value;\n}\n\nfunction normalizePropsOptions(comp, appContext, asMixin = false) {\n  const cache = appContext.propsCache;\n  const cached = cache.get(comp);\n\n  if (cached) {\n    return cached;\n  }\n\n  const raw = comp.props;\n  const normalized = {};\n  const needCastKeys = []; // apply mixin/extends props\n\n  let hasExtends = false;\n\n  if (__VUE_OPTIONS_API__ && !isFunction(comp)) {\n    const extendProps = raw => {\n      hasExtends = true;\n      const [props, keys] = normalizePropsOptions(raw, appContext, true);\n      shared_esm_bundler_extend(normalized, props);\n      if (keys) needCastKeys.push(...keys);\n    };\n\n    if (!asMixin && appContext.mixins.length) {\n      appContext.mixins.forEach(extendProps);\n    }\n\n    if (comp.extends) {\n      extendProps(comp.extends);\n    }\n\n    if (comp.mixins) {\n      comp.mixins.forEach(extendProps);\n    }\n  }\n\n  if (!raw && !hasExtends) {\n    cache.set(comp, EMPTY_ARR);\n    return EMPTY_ARR;\n  }\n\n  if (shared_esm_bundler_isArray(raw)) {\n    for (let i = 0; i < raw.length; i++) {\n      if (false) {}\n\n      const normalizedKey = camelize(raw[i]);\n\n      if (validatePropName(normalizedKey)) {\n        normalized[normalizedKey] = EMPTY_OBJ;\n      }\n    }\n  } else if (raw) {\n    if (false) {}\n\n    for (const key in raw) {\n      const normalizedKey = camelize(key);\n\n      if (validatePropName(normalizedKey)) {\n        const opt = raw[key];\n        const prop = normalized[normalizedKey] = shared_esm_bundler_isArray(opt) || isFunction(opt) ? {\n          type: opt\n        } : opt;\n\n        if (prop) {\n          const booleanIndex = getTypeIndex(Boolean, prop.type);\n          const stringIndex = getTypeIndex(String, prop.type);\n          prop[0\n          /* shouldCast */\n          ] = booleanIndex > -1;\n          prop[1\n          /* shouldCastTrue */\n          ] = stringIndex < 0 || booleanIndex < stringIndex; // if the prop needs boolean casting or default value\n\n          if (booleanIndex > -1 || shared_esm_bundler_hasOwn(prop, 'default')) {\n            needCastKeys.push(normalizedKey);\n          }\n        }\n      }\n    }\n  }\n\n  const res = [normalized, needCastKeys];\n  cache.set(comp, res);\n  return res;\n}\n\nfunction validatePropName(key) {\n  if (key[0] !== '$') {\n    return true;\n  } else if (false) {}\n\n  return false;\n} // use function string name to check type constructors\n// so that it works across vms / iframes.\n\n\nfunction getType(ctor) {\n  const match = ctor && ctor.toString().match(/^\\s*function (\\w+)/);\n  return match ? match[1] : ctor === null ? 'null' : '';\n}\n\nfunction isSameType(a, b) {\n  return getType(a) === getType(b);\n}\n\nfunction getTypeIndex(type, expectedTypes) {\n  if (shared_esm_bundler_isArray(expectedTypes)) {\n    return expectedTypes.findIndex(t => isSameType(t, type));\n  } else if (isFunction(expectedTypes)) {\n    return isSameType(expectedTypes, type) ? 0 : -1;\n  }\n\n  return -1;\n}\n/**\r\n * dev only\r\n */\n\n\nfunction validateProps(rawProps, props, instance) {\n  const resolvedValues = toRaw(props);\n  const options = instance.propsOptions[0];\n\n  for (const key in options) {\n    let opt = options[key];\n    if (opt == null) continue;\n    validateProp(key, resolvedValues[key], opt, !hasOwn(rawProps, key) && !hasOwn(rawProps, hyphenate(key)));\n  }\n}\n/**\r\n * dev only\r\n */\n\n\nfunction validateProp(name, value, prop, isAbsent) {\n  const {\n    type,\n    required,\n    validator\n  } = prop; // required!\n\n  if (required && isAbsent) {\n    runtime_core_esm_bundler_warn('Missing required prop: \"' + name + '\"');\n    return;\n  } // missing but optional\n\n\n  if (value == null && !prop.required) {\n    return;\n  } // type check\n\n\n  if (type != null && type !== true) {\n    let isValid = false;\n    const types = isArray(type) ? type : [type];\n    const expectedTypes = []; // value is valid as long as one of the specified types match\n\n    for (let i = 0; i < types.length && !isValid; i++) {\n      const {\n        valid,\n        expectedType\n      } = assertType(value, types[i]);\n      expectedTypes.push(expectedType || '');\n      isValid = valid;\n    }\n\n    if (!isValid) {\n      runtime_core_esm_bundler_warn(getInvalidTypeMessage(name, value, expectedTypes));\n      return;\n    }\n  } // custom validator\n\n\n  if (validator && !validator(value)) {\n    runtime_core_esm_bundler_warn('Invalid prop: custom validator check failed for prop \"' + name + '\".');\n  }\n}\n\nconst isSimpleType = /*#__PURE__*/(/* unused pure expression or super */ null && (makeMap('String,Number,Boolean,Function,Symbol,BigInt')));\n/**\r\n * dev only\r\n */\n\nfunction assertType(value, type) {\n  let valid;\n  const expectedType = getType(type);\n\n  if (isSimpleType(expectedType)) {\n    const t = typeof value;\n    valid = t === expectedType.toLowerCase(); // for primitive wrapper objects\n\n    if (!valid && t === 'object') {\n      valid = value instanceof type;\n    }\n  } else if (expectedType === 'Object') {\n    valid = isObject(value);\n  } else if (expectedType === 'Array') {\n    valid = isArray(value);\n  } else if (expectedType === 'null') {\n    valid = value === null;\n  } else {\n    valid = value instanceof type;\n  }\n\n  return {\n    valid,\n    expectedType\n  };\n}\n/**\r\n * dev only\r\n */\n\n\nfunction getInvalidTypeMessage(name, value, expectedTypes) {\n  let message = `Invalid prop: type check failed for prop \"${name}\".` + ` Expected ${expectedTypes.map(capitalize).join(' | ')}`;\n  const expectedType = expectedTypes[0];\n  const receivedType = toRawType(value);\n  const expectedValue = styleValue(value, expectedType);\n  const receivedValue = styleValue(value, receivedType); // check if we need to specify expected value\n\n  if (expectedTypes.length === 1 && isExplicable(expectedType) && !isBoolean(expectedType, receivedType)) {\n    message += ` with value ${expectedValue}`;\n  }\n\n  message += `, got ${receivedType} `; // check if we need to specify received value\n\n  if (isExplicable(receivedType)) {\n    message += `with value ${receivedValue}.`;\n  }\n\n  return message;\n}\n/**\r\n * dev only\r\n */\n\n\nfunction styleValue(value, type) {\n  if (type === 'String') {\n    return `\"${value}\"`;\n  } else if (type === 'Number') {\n    return `${Number(value)}`;\n  } else {\n    return `${value}`;\n  }\n}\n/**\r\n * dev only\r\n */\n\n\nfunction isExplicable(type) {\n  const explicitTypes = ['string', 'number', 'boolean'];\n  return explicitTypes.some(elem => type.toLowerCase() === elem);\n}\n/**\r\n * dev only\r\n */\n\n\nfunction isBoolean(...args) {\n  return args.some(elem => elem.toLowerCase() === 'boolean');\n}\n\nconst isInternalKey = key => key[0] === '_' || key === '$stable';\n\nconst normalizeSlotValue = value => shared_esm_bundler_isArray(value) ? value.map(normalizeVNode) : [normalizeVNode(value)];\n\nconst normalizeSlot = (key, rawSlot, ctx) => {\n  const normalized = withCtx((...args) => {\n    if (false) {}\n\n    return normalizeSlotValue(rawSlot(...args));\n  }, ctx);\n  normalized._c = false;\n  return normalized;\n};\n\nconst normalizeObjectSlots = (rawSlots, slots, instance) => {\n  const ctx = rawSlots._ctx;\n\n  for (const key in rawSlots) {\n    if (isInternalKey(key)) continue;\n    const value = rawSlots[key];\n\n    if (isFunction(value)) {\n      slots[key] = normalizeSlot(key, value, ctx);\n    } else if (value != null) {\n      if (false) {}\n\n      const normalized = normalizeSlotValue(value);\n\n      slots[key] = () => normalized;\n    }\n  }\n};\n\nconst normalizeVNodeSlots = (instance, children) => {\n  if (false) {}\n\n  const normalized = normalizeSlotValue(children);\n\n  instance.slots.default = () => normalized;\n};\n\nconst initSlots = (instance, children) => {\n  if (instance.vnode.shapeFlag & 32\n  /* SLOTS_CHILDREN */\n  ) {\n    const type = children._;\n\n    if (type) {\n      // users can get the shallow readonly version of the slots object through `this.$slots`,\n      // we should avoid the proxy object polluting the slots of the internal instance\n      instance.slots = reactivity_esm_bundler_toRaw(children); // make compiler marker non-enumerable\n\n      def(children, '_', type);\n    } else {\n      normalizeObjectSlots(children, instance.slots = {});\n    }\n  } else {\n    instance.slots = {};\n\n    if (children) {\n      normalizeVNodeSlots(instance, children);\n    }\n  }\n\n  def(instance.slots, InternalObjectKey, 1);\n};\n\nconst updateSlots = (instance, children, optimized) => {\n  const {\n    vnode,\n    slots\n  } = instance;\n  let needDeletionCheck = true;\n  let deletionComparisonTarget = EMPTY_OBJ;\n\n  if (vnode.shapeFlag & 32\n  /* SLOTS_CHILDREN */\n  ) {\n    const type = children._;\n\n    if (type) {\n      // compiled slots.\n      if (false) {} else if (optimized && type === 1\n      /* STABLE */\n      ) {\n        // compiled AND stable.\n        // no need to update, and skip stale slots removal.\n        needDeletionCheck = false;\n      } else {\n        // compiled but dynamic (v-if/v-for on slots) - update slots, but skip\n        // normalization.\n        shared_esm_bundler_extend(slots, children); // #2893\n        // when rendering the optimized slots by manually written render function,\n        // we need to delete the `slots._` flag if necessary to make subsequent updates reliable,\n        // i.e. let the `renderSlot` create the bailed Fragment\n\n        if (!optimized && type === 1\n        /* STABLE */\n        ) {\n          delete slots._;\n        }\n      }\n    } else {\n      needDeletionCheck = !children.$stable;\n      normalizeObjectSlots(children, slots);\n    }\n\n    deletionComparisonTarget = children;\n  } else if (children) {\n    // non slot object children (direct value) passed to a component\n    normalizeVNodeSlots(instance, children);\n    deletionComparisonTarget = {\n      default: 1\n    };\n  } // delete stale slots\n\n\n  if (needDeletionCheck) {\n    for (const key in slots) {\n      if (!isInternalKey(key) && !(key in deletionComparisonTarget)) {\n        delete slots[key];\n      }\n    }\n  }\n};\n/**\r\nRuntime helper for applying directives to a vnode. Example usage:\r\n\nconst comp = resolveComponent('comp')\r\nconst foo = resolveDirective('foo')\r\nconst bar = resolveDirective('bar')\r\n\nreturn withDirectives(h(comp), [\r\n  [foo, this.x],\r\n  [bar, this.y]\r\n])\r\n*/\n\n\nfunction validateDirectiveName(name) {\n  if (isBuiltInDirective(name)) {\n    runtime_core_esm_bundler_warn('Do not use built-in directive ids as custom directive id: ' + name);\n  }\n}\n/**\r\n * Adds directives to a VNode.\r\n */\n\n\nfunction withDirectives(vnode, directives) {\n  const internalInstance = currentRenderingInstance;\n\n  if (internalInstance === null) {\n     false && 0;\n    return vnode;\n  }\n\n  const instance = getExposeProxy(internalInstance) || internalInstance.proxy;\n  const bindings = vnode.dirs || (vnode.dirs = []);\n\n  for (let i = 0; i < directives.length; i++) {\n    let [dir, value, arg, modifiers = EMPTY_OBJ] = directives[i];\n\n    if (isFunction(dir)) {\n      dir = {\n        mounted: dir,\n        updated: dir\n      };\n    }\n\n    if (dir.deep) {\n      traverse(value);\n    }\n\n    bindings.push({\n      dir,\n      instance,\n      value,\n      oldValue: void 0,\n      arg,\n      modifiers\n    });\n  }\n\n  return vnode;\n}\n\nfunction invokeDirectiveHook(vnode, prevVNode, instance, name) {\n  const bindings = vnode.dirs;\n  const oldBindings = prevVNode && prevVNode.dirs;\n\n  for (let i = 0; i < bindings.length; i++) {\n    const binding = bindings[i];\n\n    if (oldBindings) {\n      binding.oldValue = oldBindings[i].value;\n    }\n\n    let hook = binding.dir[name];\n\n    if (hook) {\n      // disable tracking inside all lifecycle hooks\n      // since they can potentially be called inside effects.\n      pauseTracking();\n      callWithAsyncErrorHandling(hook, instance, 8\n      /* DIRECTIVE_HOOK */\n      , [vnode.el, binding, vnode, prevVNode]);\n      resetTracking();\n    }\n  }\n}\n\nfunction createAppContext() {\n  return {\n    app: null,\n    config: {\n      isNativeTag: shared_esm_bundler_NO,\n      performance: false,\n      globalProperties: {},\n      optionMergeStrategies: {},\n      errorHandler: undefined,\n      warnHandler: undefined,\n      compilerOptions: {}\n    },\n    mixins: [],\n    components: {},\n    directives: {},\n    provides: Object.create(null),\n    optionsCache: new WeakMap(),\n    propsCache: new WeakMap(),\n    emitsCache: new WeakMap()\n  };\n}\n\nlet uid = 0;\n\nfunction createAppAPI(render, hydrate) {\n  return function createApp(rootComponent, rootProps = null) {\n    if (!isFunction(rootComponent)) {\n      rootComponent = Object.assign({}, rootComponent);\n    }\n\n    if (rootProps != null && !shared_esm_bundler_isObject(rootProps)) {\n       false && 0;\n      rootProps = null;\n    }\n\n    const context = createAppContext();\n    const installedPlugins = new Set();\n    let isMounted = false;\n    const app = context.app = {\n      _uid: uid++,\n      _component: rootComponent,\n      _props: rootProps,\n      _container: null,\n      _context: context,\n      _instance: null,\n      version,\n\n      get config() {\n        return context.config;\n      },\n\n      set config(v) {\n        if (false) {}\n      },\n\n      use(plugin, ...options) {\n        if (installedPlugins.has(plugin)) {\n           false && 0;\n        } else if (plugin && isFunction(plugin.install)) {\n          installedPlugins.add(plugin);\n          plugin.install(app, ...options);\n        } else if (isFunction(plugin)) {\n          installedPlugins.add(plugin);\n          plugin(app, ...options);\n        } else if (false) {}\n\n        return app;\n      },\n\n      mixin(mixin) {\n        if (__VUE_OPTIONS_API__) {\n          if (!context.mixins.includes(mixin)) {\n            context.mixins.push(mixin);\n          } else if (false) {}\n        } else if (false) {}\n\n        return app;\n      },\n\n      component(name, component) {\n        if (false) {}\n\n        if (!component) {\n          return context.components[name];\n        }\n\n        if (false) {}\n\n        context.components[name] = component;\n        return app;\n      },\n\n      directive(name, directive) {\n        if (false) {}\n\n        if (!directive) {\n          return context.directives[name];\n        }\n\n        if (false) {}\n\n        context.directives[name] = directive;\n        return app;\n      },\n\n      mount(rootContainer, isHydrate, isSVG) {\n        if (!isMounted) {\n          const vnode = createVNode(rootComponent, rootProps); // store app context on the root VNode.\n          // this will be set on the root instance on initial mount.\n\n          vnode.appContext = context; // HMR root reload\n\n          if (false) {}\n\n          if (isHydrate && hydrate) {\n            hydrate(vnode, rootContainer);\n          } else {\n            render(vnode, rootContainer, isSVG);\n          }\n\n          isMounted = true;\n          app._container = rootContainer;\n          rootContainer.__vue_app__ = app;\n\n          if ( false || __VUE_PROD_DEVTOOLS__) {\n            app._instance = vnode.component;\n            devtoolsInitApp(app, version);\n          }\n\n          return getExposeProxy(vnode.component) || vnode.component.proxy;\n        } else if (false) {}\n      },\n\n      unmount() {\n        if (isMounted) {\n          render(null, app._container);\n\n          if ( false || __VUE_PROD_DEVTOOLS__) {\n            app._instance = null;\n            devtoolsUnmountApp(app);\n          }\n\n          delete app._container.__vue_app__;\n        } else if (false) {}\n      },\n\n      provide(key, value) {\n        if (false) {} // TypeScript doesn't allow symbols as index type\n        // https://github.com/Microsoft/TypeScript/issues/24587\n\n\n        context.provides[key] = value;\n        return app;\n      }\n\n    };\n    return app;\n  };\n}\n/**\r\n * Function for handling a template ref\r\n */\n\n\nfunction setRef(rawRef, oldRawRef, parentSuspense, vnode, isUnmount = false) {\n  if (shared_esm_bundler_isArray(rawRef)) {\n    rawRef.forEach((r, i) => setRef(r, oldRawRef && (shared_esm_bundler_isArray(oldRawRef) ? oldRawRef[i] : oldRawRef), parentSuspense, vnode, isUnmount));\n    return;\n  }\n\n  if (isAsyncWrapper(vnode) && !isUnmount) {\n    // when mounting async components, nothing needs to be done,\n    // because the template ref is forwarded to inner component\n    return;\n  }\n\n  const refValue = vnode.shapeFlag & 4\n  /* STATEFUL_COMPONENT */\n  ? getExposeProxy(vnode.component) || vnode.component.proxy : vnode.el;\n  const value = isUnmount ? null : refValue;\n  const {\n    i: owner,\n    r: ref\n  } = rawRef;\n\n  if (false) {}\n\n  const oldRef = oldRawRef && oldRawRef.r;\n  const refs = owner.refs === EMPTY_OBJ ? owner.refs = {} : owner.refs;\n  const setupState = owner.setupState; // dynamic ref changed. unset old ref\n\n  if (oldRef != null && oldRef !== ref) {\n    if (shared_esm_bundler_isString(oldRef)) {\n      refs[oldRef] = null;\n\n      if (shared_esm_bundler_hasOwn(setupState, oldRef)) {\n        setupState[oldRef] = null;\n      }\n    } else if (isRef(oldRef)) {\n      oldRef.value = null;\n    }\n  }\n\n  if (isFunction(ref)) {\n    callWithErrorHandling(ref, owner, 12\n    /* FUNCTION_REF */\n    , [value, refs]);\n  } else {\n    const _isString = shared_esm_bundler_isString(ref);\n\n    const _isRef = isRef(ref);\n\n    if (_isString || _isRef) {\n      const doSet = () => {\n        if (rawRef.f) {\n          const existing = _isString ? refs[ref] : ref.value;\n\n          if (isUnmount) {\n            shared_esm_bundler_isArray(existing) && remove(existing, refValue);\n          } else {\n            if (!shared_esm_bundler_isArray(existing)) {\n              if (_isString) {\n                refs[ref] = [refValue];\n\n                if (shared_esm_bundler_hasOwn(setupState, ref)) {\n                  setupState[ref] = refs[ref];\n                }\n              } else {\n                ref.value = [refValue];\n                if (rawRef.k) refs[rawRef.k] = ref.value;\n              }\n            } else if (!existing.includes(refValue)) {\n              existing.push(refValue);\n            }\n          }\n        } else if (_isString) {\n          refs[ref] = value;\n\n          if (shared_esm_bundler_hasOwn(setupState, ref)) {\n            setupState[ref] = value;\n          }\n        } else if (isRef(ref)) {\n          ref.value = value;\n          if (rawRef.k) refs[rawRef.k] = value;\n        } else if (false) {}\n      };\n\n      if (value) {\n        doSet.id = -1;\n        queuePostRenderEffect(doSet, parentSuspense);\n      } else {\n        doSet();\n      }\n    } else if (false) {}\n  }\n}\n\nlet hasMismatch = false;\n\nconst isSVGContainer = container => /svg/.test(container.namespaceURI) && container.tagName !== 'foreignObject';\n\nconst isComment = node => node.nodeType === 8\n/* COMMENT */\n; // Note: hydration is DOM-specific\n// But we have to place it in core due to tight coupling with core - splitting\n// it out creates a ton of unnecessary complexity.\n// Hydration also depends on some renderer internal logic which needs to be\n// passed in via arguments.\n\n\nfunction createHydrationFunctions(rendererInternals) {\n  const {\n    mt: mountComponent,\n    p: patch,\n    o: {\n      patchProp,\n      nextSibling,\n      parentNode,\n      remove,\n      insert,\n      createComment\n    }\n  } = rendererInternals;\n\n  const hydrate = (vnode, container) => {\n    if (!container.hasChildNodes()) {\n       false && 0;\n      patch(null, vnode, container);\n      flushPostFlushCbs();\n      return;\n    }\n\n    hasMismatch = false;\n    hydrateNode(container.firstChild, vnode, null, null, null);\n    flushPostFlushCbs();\n\n    if (hasMismatch && !false) {\n      // this error should show up in production\n      console.error(`Hydration completed but contains mismatches.`);\n    }\n  };\n\n  const hydrateNode = (node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized = false) => {\n    const isFragmentStart = isComment(node) && node.data === '[';\n\n    const onMismatch = () => handleMismatch(node, vnode, parentComponent, parentSuspense, slotScopeIds, isFragmentStart);\n\n    const {\n      type,\n      ref,\n      shapeFlag\n    } = vnode;\n    const domType = node.nodeType;\n    vnode.el = node;\n    let nextNode = null;\n\n    switch (type) {\n      case Text:\n        if (domType !== 3\n        /* TEXT */\n        ) {\n          nextNode = onMismatch();\n        } else {\n          if (node.data !== vnode.children) {\n            hasMismatch = true;\n             false && 0;\n            node.data = vnode.children;\n          }\n\n          nextNode = nextSibling(node);\n        }\n\n        break;\n\n      case Comment:\n        if (domType !== 8\n        /* COMMENT */\n        || isFragmentStart) {\n          nextNode = onMismatch();\n        } else {\n          nextNode = nextSibling(node);\n        }\n\n        break;\n\n      case Static:\n        if (domType !== 1\n        /* ELEMENT */\n        ) {\n          nextNode = onMismatch();\n        } else {\n          // determine anchor, adopt content\n          nextNode = node; // if the static vnode has its content stripped during build,\n          // adopt it from the server-rendered HTML.\n\n          const needToAdoptContent = !vnode.children.length;\n\n          for (let i = 0; i < vnode.staticCount; i++) {\n            if (needToAdoptContent) vnode.children += nextNode.outerHTML;\n\n            if (i === vnode.staticCount - 1) {\n              vnode.anchor = nextNode;\n            }\n\n            nextNode = nextSibling(nextNode);\n          }\n\n          return nextNode;\n        }\n\n        break;\n\n      case Fragment:\n        if (!isFragmentStart) {\n          nextNode = onMismatch();\n        } else {\n          nextNode = hydrateFragment(node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized);\n        }\n\n        break;\n\n      default:\n        if (shapeFlag & 1\n        /* ELEMENT */\n        ) {\n          if (domType !== 1\n          /* ELEMENT */\n          || vnode.type.toLowerCase() !== node.tagName.toLowerCase()) {\n            nextNode = onMismatch();\n          } else {\n            nextNode = hydrateElement(node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized);\n          }\n        } else if (shapeFlag & 6\n        /* COMPONENT */\n        ) {\n          // when setting up the render effect, if the initial vnode already\n          // has .el set, the component will perform hydration instead of mount\n          // on its sub-tree.\n          vnode.slotScopeIds = slotScopeIds;\n          const container = parentNode(node);\n          mountComponent(vnode, container, null, parentComponent, parentSuspense, isSVGContainer(container), optimized); // component may be async, so in the case of fragments we cannot rely\n          // on component's rendered output to determine the end of the fragment\n          // instead, we do a lookahead to find the end anchor node.\n\n          nextNode = isFragmentStart ? locateClosingAsyncAnchor(node) : nextSibling(node); // #3787\n          // if component is async, it may get moved / unmounted before its\n          // inner component is loaded, so we need to give it a placeholder\n          // vnode that matches its adopted DOM.\n\n          if (isAsyncWrapper(vnode)) {\n            let subTree;\n\n            if (isFragmentStart) {\n              subTree = createVNode(Fragment);\n              subTree.anchor = nextNode ? nextNode.previousSibling : container.lastChild;\n            } else {\n              subTree = node.nodeType === 3 ? createTextVNode('') : createVNode('div');\n            }\n\n            subTree.el = node;\n            vnode.component.subTree = subTree;\n          }\n        } else if (shapeFlag & 64\n        /* TELEPORT */\n        ) {\n          if (domType !== 8\n          /* COMMENT */\n          ) {\n            nextNode = onMismatch();\n          } else {\n            nextNode = vnode.type.hydrate(node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized, rendererInternals, hydrateChildren);\n          }\n        } else if (shapeFlag & 128\n        /* SUSPENSE */\n        ) {\n          nextNode = vnode.type.hydrate(node, vnode, parentComponent, parentSuspense, isSVGContainer(parentNode(node)), slotScopeIds, optimized, rendererInternals, hydrateNode);\n        } else if (false) {}\n\n    }\n\n    if (ref != null) {\n      setRef(ref, null, parentSuspense, vnode);\n    }\n\n    return nextNode;\n  };\n\n  const hydrateElement = (el, vnode, parentComponent, parentSuspense, slotScopeIds, optimized) => {\n    optimized = optimized || !!vnode.dynamicChildren;\n    const {\n      type,\n      props,\n      patchFlag,\n      shapeFlag,\n      dirs\n    } = vnode; // #4006 for form elements with non-string v-model value bindings\n    // e.g. <option :value=\"obj\">, <input type=\"checkbox\" :true-value=\"1\">\n\n    const forcePatchValue = type === 'input' && dirs || type === 'option'; // skip props & children if this is hoisted static nodes\n    // #5405 in dev, always hydrate children for HMR\n\n    if ( false || forcePatchValue || patchFlag !== -1\n    /* HOISTED */\n    ) {\n      if (dirs) {\n        invokeDirectiveHook(vnode, null, parentComponent, 'created');\n      } // props\n\n\n      if (props) {\n        if (forcePatchValue || !optimized || patchFlag & (16\n        /* FULL_PROPS */\n        | 32\n        /* HYDRATE_EVENTS */\n        )) {\n          for (const key in props) {\n            if (forcePatchValue && key.endsWith('value') || isOn(key) && !isReservedProp(key)) {\n              patchProp(el, key, null, props[key], false, undefined, parentComponent);\n            }\n          }\n        } else if (props.onClick) {\n          // Fast path for click listeners (which is most often) to avoid\n          // iterating through props.\n          patchProp(el, 'onClick', null, props.onClick, false, undefined, parentComponent);\n        }\n      } // vnode / directive hooks\n\n\n      let vnodeHooks;\n\n      if (vnodeHooks = props && props.onVnodeBeforeMount) {\n        invokeVNodeHook(vnodeHooks, parentComponent, vnode);\n      }\n\n      if (dirs) {\n        invokeDirectiveHook(vnode, null, parentComponent, 'beforeMount');\n      }\n\n      if ((vnodeHooks = props && props.onVnodeMounted) || dirs) {\n        queueEffectWithSuspense(() => {\n          vnodeHooks && invokeVNodeHook(vnodeHooks, parentComponent, vnode);\n          dirs && invokeDirectiveHook(vnode, null, parentComponent, 'mounted');\n        }, parentSuspense);\n      } // children\n\n\n      if (shapeFlag & 16\n      /* ARRAY_CHILDREN */\n      && // skip if element has innerHTML / textContent\n      !(props && (props.innerHTML || props.textContent))) {\n        let next = hydrateChildren(el.firstChild, vnode, el, parentComponent, parentSuspense, slotScopeIds, optimized);\n        let hasWarned = false;\n\n        while (next) {\n          hasMismatch = true;\n\n          if (false) {} // The SSRed DOM contains more nodes than it should. Remove them.\n\n\n          const cur = next;\n          next = next.nextSibling;\n          remove(cur);\n        }\n      } else if (shapeFlag & 8\n      /* TEXT_CHILDREN */\n      ) {\n        if (el.textContent !== vnode.children) {\n          hasMismatch = true;\n           false && 0;\n          el.textContent = vnode.children;\n        }\n      }\n    }\n\n    return el.nextSibling;\n  };\n\n  const hydrateChildren = (node, parentVNode, container, parentComponent, parentSuspense, slotScopeIds, optimized) => {\n    optimized = optimized || !!parentVNode.dynamicChildren;\n    const children = parentVNode.children;\n    const l = children.length;\n    let hasWarned = false;\n\n    for (let i = 0; i < l; i++) {\n      const vnode = optimized ? children[i] : children[i] = normalizeVNode(children[i]);\n\n      if (node) {\n        node = hydrateNode(node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized);\n      } else if (vnode.type === Text && !vnode.children) {\n        continue;\n      } else {\n        hasMismatch = true;\n\n        if (false) {} // the SSRed DOM didn't contain enough nodes. Mount the missing ones.\n\n\n        patch(null, vnode, container, null, parentComponent, parentSuspense, isSVGContainer(container), slotScopeIds);\n      }\n    }\n\n    return node;\n  };\n\n  const hydrateFragment = (node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized) => {\n    const {\n      slotScopeIds: fragmentSlotScopeIds\n    } = vnode;\n\n    if (fragmentSlotScopeIds) {\n      slotScopeIds = slotScopeIds ? slotScopeIds.concat(fragmentSlotScopeIds) : fragmentSlotScopeIds;\n    }\n\n    const container = parentNode(node);\n    const next = hydrateChildren(nextSibling(node), vnode, container, parentComponent, parentSuspense, slotScopeIds, optimized);\n\n    if (next && isComment(next) && next.data === ']') {\n      return nextSibling(vnode.anchor = next);\n    } else {\n      // fragment didn't hydrate successfully, since we didn't get a end anchor\n      // back. This should have led to node/children mismatch warnings.\n      hasMismatch = true; // since the anchor is missing, we need to create one and insert it\n\n      insert(vnode.anchor = createComment(`]`), container, next);\n      return next;\n    }\n  };\n\n  const handleMismatch = (node, vnode, parentComponent, parentSuspense, slotScopeIds, isFragment) => {\n    hasMismatch = true;\n     false && 0;\n    vnode.el = null;\n\n    if (isFragment) {\n      // remove excessive fragment nodes\n      const end = locateClosingAsyncAnchor(node);\n\n      while (true) {\n        const next = nextSibling(node);\n\n        if (next && next !== end) {\n          remove(next);\n        } else {\n          break;\n        }\n      }\n    }\n\n    const next = nextSibling(node);\n    const container = parentNode(node);\n    remove(node);\n    patch(null, vnode, container, next, parentComponent, parentSuspense, isSVGContainer(container), slotScopeIds);\n    return next;\n  };\n\n  const locateClosingAsyncAnchor = node => {\n    let match = 0;\n\n    while (node) {\n      node = nextSibling(node);\n\n      if (node && isComment(node)) {\n        if (node.data === '[') match++;\n\n        if (node.data === ']') {\n          if (match === 0) {\n            return nextSibling(node);\n          } else {\n            match--;\n          }\n        }\n      }\n    }\n\n    return node;\n  };\n\n  return [hydrate, hydrateNode];\n}\n/* eslint-disable no-restricted-globals */\n\n\nlet supported;\nlet perf;\n\nfunction startMeasure(instance, type) {\n  if (instance.appContext.config.performance && isSupported()) {\n    perf.mark(`vue-${type}-${instance.uid}`);\n  }\n\n  if ( false || __VUE_PROD_DEVTOOLS__) {\n    devtoolsPerfStart(instance, type, isSupported() ? perf.now() : Date.now());\n  }\n}\n\nfunction endMeasure(instance, type) {\n  if (instance.appContext.config.performance && isSupported()) {\n    const startTag = `vue-${type}-${instance.uid}`;\n    const endTag = startTag + `:end`;\n    perf.mark(endTag);\n    perf.measure(`<${formatComponentName(instance, instance.type)}> ${type}`, startTag, endTag);\n    perf.clearMarks(startTag);\n    perf.clearMarks(endTag);\n  }\n\n  if ( false || __VUE_PROD_DEVTOOLS__) {\n    devtoolsPerfEnd(instance, type, isSupported() ? perf.now() : Date.now());\n  }\n}\n\nfunction isSupported() {\n  if (supported !== undefined) {\n    return supported;\n  }\n\n  if (typeof window !== 'undefined' && window.performance) {\n    supported = true;\n    perf = window.performance;\n  } else {\n    supported = false;\n  }\n\n  return supported;\n}\n/**\r\n * This is only called in esm-bundler builds.\r\n * It is called when a renderer is created, in `baseCreateRenderer` so that\r\n * importing runtime-core is side-effects free.\r\n *\r\n * istanbul-ignore-next\r\n */\n\n\nfunction initFeatureFlags() {\n  const needWarn = [];\n\n  if (typeof __VUE_OPTIONS_API__ !== 'boolean') {\n     false && 0;\n    getGlobalThis().__VUE_OPTIONS_API__ = true;\n  }\n\n  if (typeof __VUE_PROD_DEVTOOLS__ !== 'boolean') {\n     false && 0;\n    getGlobalThis().__VUE_PROD_DEVTOOLS__ = false;\n  }\n\n  if (false) {}\n}\n\nconst queuePostRenderEffect = queueEffectWithSuspense;\n/**\r\n * The createRenderer function accepts two generic arguments:\r\n * HostNode and HostElement, corresponding to Node and Element types in the\r\n * host environment. For example, for runtime-dom, HostNode would be the DOM\r\n * `Node` interface and HostElement would be the DOM `Element` interface.\r\n *\r\n * Custom renderers can pass in the platform specific types like this:\r\n *\r\n * ``` js\r\n * const { render, createApp } = createRenderer<Node, Element>({\r\n *   patchProp,\r\n *   ...nodeOps\r\n * })\r\n * ```\r\n */\n\nfunction createRenderer(options) {\n  return baseCreateRenderer(options);\n} // Separate API for creating hydration-enabled renderer.\n// Hydration logic is only used when calling this function, making it\n// tree-shakable.\n\n\nfunction createHydrationRenderer(options) {\n  return baseCreateRenderer(options, createHydrationFunctions);\n} // implementation\n\n\nfunction baseCreateRenderer(options, createHydrationFns) {\n  // compile-time feature flags check\n  {\n    initFeatureFlags();\n  }\n  const target = getGlobalThis();\n  target.__VUE__ = true;\n\n  if ( false || __VUE_PROD_DEVTOOLS__) {\n    setDevtoolsHook(target.__VUE_DEVTOOLS_GLOBAL_HOOK__, target);\n  }\n\n  const {\n    insert: hostInsert,\n    remove: hostRemove,\n    patchProp: hostPatchProp,\n    createElement: hostCreateElement,\n    createText: hostCreateText,\n    createComment: hostCreateComment,\n    setText: hostSetText,\n    setElementText: hostSetElementText,\n    parentNode: hostParentNode,\n    nextSibling: hostNextSibling,\n    setScopeId: hostSetScopeId = shared_esm_bundler_NOOP,\n    cloneNode: hostCloneNode,\n    insertStaticContent: hostInsertStaticContent\n  } = options; // Note: functions inside this closure should use `const xxx = () => {}`\n  // style in order to prevent being inlined by minifiers.\n\n  const patch = (n1, n2, container, anchor = null, parentComponent = null, parentSuspense = null, isSVG = false, slotScopeIds = null, optimized =  false ? 0 : !!n2.dynamicChildren) => {\n    if (n1 === n2) {\n      return;\n    } // patching & not same type, unmount old tree\n\n\n    if (n1 && !isSameVNodeType(n1, n2)) {\n      anchor = getNextHostNode(n1);\n      unmount(n1, parentComponent, parentSuspense, true);\n      n1 = null;\n    }\n\n    if (n2.patchFlag === -2\n    /* BAIL */\n    ) {\n      optimized = false;\n      n2.dynamicChildren = null;\n    }\n\n    const {\n      type,\n      ref,\n      shapeFlag\n    } = n2;\n\n    switch (type) {\n      case Text:\n        processText(n1, n2, container, anchor);\n        break;\n\n      case Comment:\n        processCommentNode(n1, n2, container, anchor);\n        break;\n\n      case Static:\n        if (n1 == null) {\n          mountStaticNode(n2, container, anchor, isSVG);\n        } else if (false) {}\n\n        break;\n\n      case Fragment:\n        processFragment(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\n        break;\n\n      default:\n        if (shapeFlag & 1\n        /* ELEMENT */\n        ) {\n          processElement(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\n        } else if (shapeFlag & 6\n        /* COMPONENT */\n        ) {\n          processComponent(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\n        } else if (shapeFlag & 64\n        /* TELEPORT */\n        ) {\n          type.process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, internals);\n        } else if (shapeFlag & 128\n        /* SUSPENSE */\n        ) {\n          type.process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, internals);\n        } else if (false) {}\n\n    } // set ref\n\n\n    if (ref != null && parentComponent) {\n      setRef(ref, n1 && n1.ref, parentSuspense, n2 || n1, !n2);\n    }\n  };\n\n  const processText = (n1, n2, container, anchor) => {\n    if (n1 == null) {\n      hostInsert(n2.el = hostCreateText(n2.children), container, anchor);\n    } else {\n      const el = n2.el = n1.el;\n\n      if (n2.children !== n1.children) {\n        hostSetText(el, n2.children);\n      }\n    }\n  };\n\n  const processCommentNode = (n1, n2, container, anchor) => {\n    if (n1 == null) {\n      hostInsert(n2.el = hostCreateComment(n2.children || ''), container, anchor);\n    } else {\n      // there's no support for dynamic comments\n      n2.el = n1.el;\n    }\n  };\n\n  const mountStaticNode = (n2, container, anchor, isSVG) => {\n    [n2.el, n2.anchor] = hostInsertStaticContent(n2.children, container, anchor, isSVG, n2.el, n2.anchor);\n  };\n  /**\r\n   * Dev / HMR only\r\n   */\n\n\n  const patchStaticNode = (n1, n2, container, isSVG) => {\n    // static nodes are only patched during dev for HMR\n    if (n2.children !== n1.children) {\n      const anchor = hostNextSibling(n1.anchor); // remove existing\n\n      removeStaticNode(n1);\n      [n2.el, n2.anchor] = hostInsertStaticContent(n2.children, container, anchor, isSVG);\n    } else {\n      n2.el = n1.el;\n      n2.anchor = n1.anchor;\n    }\n  };\n\n  const moveStaticNode = ({\n    el,\n    anchor\n  }, container, nextSibling) => {\n    let next;\n\n    while (el && el !== anchor) {\n      next = hostNextSibling(el);\n      hostInsert(el, container, nextSibling);\n      el = next;\n    }\n\n    hostInsert(anchor, container, nextSibling);\n  };\n\n  const removeStaticNode = ({\n    el,\n    anchor\n  }) => {\n    let next;\n\n    while (el && el !== anchor) {\n      next = hostNextSibling(el);\n      hostRemove(el);\n      el = next;\n    }\n\n    hostRemove(anchor);\n  };\n\n  const processElement = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\n    isSVG = isSVG || n2.type === 'svg';\n\n    if (n1 == null) {\n      mountElement(n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\n    } else {\n      patchElement(n1, n2, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\n    }\n  };\n\n  const mountElement = (vnode, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\n    let el;\n    let vnodeHook;\n    const {\n      type,\n      props,\n      shapeFlag,\n      transition,\n      patchFlag,\n      dirs\n    } = vnode;\n\n    if ( true && vnode.el && hostCloneNode !== undefined && patchFlag === -1\n    /* HOISTED */\n    ) {\n      // If a vnode has non-null el, it means it's being reused.\n      // Only static vnodes can be reused, so its mounted DOM nodes should be\n      // exactly the same, and we can simply do a clone here.\n      // only do this in production since cloned trees cannot be HMR updated.\n      el = vnode.el = hostCloneNode(vnode.el);\n    } else {\n      el = vnode.el = hostCreateElement(vnode.type, isSVG, props && props.is, props); // mount children first, since some props may rely on child content\n      // being already rendered, e.g. `<select value>`\n\n      if (shapeFlag & 8\n      /* TEXT_CHILDREN */\n      ) {\n        hostSetElementText(el, vnode.children);\n      } else if (shapeFlag & 16\n      /* ARRAY_CHILDREN */\n      ) {\n        mountChildren(vnode.children, el, null, parentComponent, parentSuspense, isSVG && type !== 'foreignObject', slotScopeIds, optimized);\n      }\n\n      if (dirs) {\n        invokeDirectiveHook(vnode, null, parentComponent, 'created');\n      } // props\n\n\n      if (props) {\n        for (const key in props) {\n          if (key !== 'value' && !isReservedProp(key)) {\n            hostPatchProp(el, key, null, props[key], isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);\n          }\n        }\n        /**\r\n         * Special case for setting value on DOM elements:\r\n         * - it can be order-sensitive (e.g. should be set *after* min/max, #2325, #4024)\r\n         * - it needs to be forced (#1471)\r\n         * #2353 proposes adding another renderer option to configure this, but\r\n         * the properties affects are so finite it is worth special casing it\r\n         * here to reduce the complexity. (Special casing it also should not\r\n         * affect non-DOM renderers)\r\n         */\n\n\n        if ('value' in props) {\n          hostPatchProp(el, 'value', null, props.value);\n        }\n\n        if (vnodeHook = props.onVnodeBeforeMount) {\n          invokeVNodeHook(vnodeHook, parentComponent, vnode);\n        }\n      } // scopeId\n\n\n      setScopeId(el, vnode, vnode.scopeId, slotScopeIds, parentComponent);\n    }\n\n    if ( false || __VUE_PROD_DEVTOOLS__) {\n      Object.defineProperty(el, '__vnode', {\n        value: vnode,\n        enumerable: false\n      });\n      Object.defineProperty(el, '__vueParentComponent', {\n        value: parentComponent,\n        enumerable: false\n      });\n    }\n\n    if (dirs) {\n      invokeDirectiveHook(vnode, null, parentComponent, 'beforeMount');\n    } // #1583 For inside suspense + suspense not resolved case, enter hook should call when suspense resolved\n    // #1689 For inside suspense + suspense resolved case, just call it\n\n\n    const needCallTransitionHooks = (!parentSuspense || parentSuspense && !parentSuspense.pendingBranch) && transition && !transition.persisted;\n\n    if (needCallTransitionHooks) {\n      transition.beforeEnter(el);\n    }\n\n    hostInsert(el, container, anchor);\n\n    if ((vnodeHook = props && props.onVnodeMounted) || needCallTransitionHooks || dirs) {\n      queuePostRenderEffect(() => {\n        vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode);\n        needCallTransitionHooks && transition.enter(el);\n        dirs && invokeDirectiveHook(vnode, null, parentComponent, 'mounted');\n      }, parentSuspense);\n    }\n  };\n\n  const setScopeId = (el, vnode, scopeId, slotScopeIds, parentComponent) => {\n    if (scopeId) {\n      hostSetScopeId(el, scopeId);\n    }\n\n    if (slotScopeIds) {\n      for (let i = 0; i < slotScopeIds.length; i++) {\n        hostSetScopeId(el, slotScopeIds[i]);\n      }\n    }\n\n    if (parentComponent) {\n      let subTree = parentComponent.subTree;\n\n      if (false\n      /* DEV_ROOT_FRAGMENT */\n      ) {}\n\n      if (vnode === subTree) {\n        const parentVNode = parentComponent.vnode;\n        setScopeId(el, parentVNode, parentVNode.scopeId, parentVNode.slotScopeIds, parentComponent.parent);\n      }\n    }\n  };\n\n  const mountChildren = (children, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, start = 0) => {\n    for (let i = start; i < children.length; i++) {\n      const child = children[i] = optimized ? cloneIfMounted(children[i]) : normalizeVNode(children[i]);\n      patch(null, child, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\n    }\n  };\n\n  const patchElement = (n1, n2, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\n    const el = n2.el = n1.el;\n    let {\n      patchFlag,\n      dynamicChildren,\n      dirs\n    } = n2; // #1426 take the old vnode's patch flag into account since user may clone a\n    // compiler-generated vnode, which de-opts to FULL_PROPS\n\n    patchFlag |= n1.patchFlag & 16\n    /* FULL_PROPS */\n    ;\n    const oldProps = n1.props || EMPTY_OBJ;\n    const newProps = n2.props || EMPTY_OBJ;\n    let vnodeHook; // disable recurse in beforeUpdate hooks\n\n    parentComponent && toggleRecurse(parentComponent, false);\n\n    if (vnodeHook = newProps.onVnodeBeforeUpdate) {\n      invokeVNodeHook(vnodeHook, parentComponent, n2, n1);\n    }\n\n    if (dirs) {\n      invokeDirectiveHook(n2, n1, parentComponent, 'beforeUpdate');\n    }\n\n    parentComponent && toggleRecurse(parentComponent, true);\n\n    if (false) {}\n\n    const areChildrenSVG = isSVG && n2.type !== 'foreignObject';\n\n    if (dynamicChildren) {\n      patchBlockChildren(n1.dynamicChildren, dynamicChildren, el, parentComponent, parentSuspense, areChildrenSVG, slotScopeIds);\n\n      if (false) {}\n    } else if (!optimized) {\n      // full diff\n      patchChildren(n1, n2, el, null, parentComponent, parentSuspense, areChildrenSVG, slotScopeIds, false);\n    }\n\n    if (patchFlag > 0) {\n      // the presence of a patchFlag means this element's render code was\n      // generated by the compiler and can take the fast path.\n      // in this path old node and new node are guaranteed to have the same shape\n      // (i.e. at the exact same position in the source template)\n      if (patchFlag & 16\n      /* FULL_PROPS */\n      ) {\n        // element props contain dynamic keys, full diff needed\n        patchProps(el, n2, oldProps, newProps, parentComponent, parentSuspense, isSVG);\n      } else {\n        // class\n        // this flag is matched when the element has dynamic class bindings.\n        if (patchFlag & 2\n        /* CLASS */\n        ) {\n          if (oldProps.class !== newProps.class) {\n            hostPatchProp(el, 'class', null, newProps.class, isSVG);\n          }\n        } // style\n        // this flag is matched when the element has dynamic style bindings\n\n\n        if (patchFlag & 4\n        /* STYLE */\n        ) {\n          hostPatchProp(el, 'style', oldProps.style, newProps.style, isSVG);\n        } // props\n        // This flag is matched when the element has dynamic prop/attr bindings\n        // other than class and style. The keys of dynamic prop/attrs are saved for\n        // faster iteration.\n        // Note dynamic keys like :[foo]=\"bar\" will cause this optimization to\n        // bail out and go through a full diff because we need to unset the old key\n\n\n        if (patchFlag & 8\n        /* PROPS */\n        ) {\n          // if the flag is present then dynamicProps must be non-null\n          const propsToUpdate = n2.dynamicProps;\n\n          for (let i = 0; i < propsToUpdate.length; i++) {\n            const key = propsToUpdate[i];\n            const prev = oldProps[key];\n            const next = newProps[key]; // #1471 force patch value\n\n            if (next !== prev || key === 'value') {\n              hostPatchProp(el, key, prev, next, isSVG, n1.children, parentComponent, parentSuspense, unmountChildren);\n            }\n          }\n        }\n      } // text\n      // This flag is matched when the element has only dynamic text children.\n\n\n      if (patchFlag & 1\n      /* TEXT */\n      ) {\n        if (n1.children !== n2.children) {\n          hostSetElementText(el, n2.children);\n        }\n      }\n    } else if (!optimized && dynamicChildren == null) {\n      // unoptimized, full diff\n      patchProps(el, n2, oldProps, newProps, parentComponent, parentSuspense, isSVG);\n    }\n\n    if ((vnodeHook = newProps.onVnodeUpdated) || dirs) {\n      queuePostRenderEffect(() => {\n        vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, n2, n1);\n        dirs && invokeDirectiveHook(n2, n1, parentComponent, 'updated');\n      }, parentSuspense);\n    }\n  }; // The fast path for blocks.\n\n\n  const patchBlockChildren = (oldChildren, newChildren, fallbackContainer, parentComponent, parentSuspense, isSVG, slotScopeIds) => {\n    for (let i = 0; i < newChildren.length; i++) {\n      const oldVNode = oldChildren[i];\n      const newVNode = newChildren[i]; // Determine the container (parent element) for the patch.\n\n      const container = // oldVNode may be an errored async setup() component inside Suspense\n      // which will not have a mounted element\n      oldVNode.el && ( // - In the case of a Fragment, we need to provide the actual parent\n      // of the Fragment itself so it can move its children.\n      oldVNode.type === Fragment || // - In the case of different nodes, there is going to be a replacement\n      // which also requires the correct parent container\n      !isSameVNodeType(oldVNode, newVNode) || // - In the case of a component, it could contain anything.\n      oldVNode.shapeFlag & (6\n      /* COMPONENT */\n      | 64\n      /* TELEPORT */\n      )) ? hostParentNode(oldVNode.el) : // In other cases, the parent container is not actually used so we\n      // just pass the block element here to avoid a DOM parentNode call.\n      fallbackContainer;\n      patch(oldVNode, newVNode, container, null, parentComponent, parentSuspense, isSVG, slotScopeIds, true);\n    }\n  };\n\n  const patchProps = (el, vnode, oldProps, newProps, parentComponent, parentSuspense, isSVG) => {\n    if (oldProps !== newProps) {\n      for (const key in newProps) {\n        // empty string is not valid prop\n        if (isReservedProp(key)) continue;\n        const next = newProps[key];\n        const prev = oldProps[key]; // defer patching value\n\n        if (next !== prev && key !== 'value') {\n          hostPatchProp(el, key, prev, next, isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);\n        }\n      }\n\n      if (oldProps !== EMPTY_OBJ) {\n        for (const key in oldProps) {\n          if (!isReservedProp(key) && !(key in newProps)) {\n            hostPatchProp(el, key, oldProps[key], null, isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);\n          }\n        }\n      }\n\n      if ('value' in newProps) {\n        hostPatchProp(el, 'value', oldProps.value, newProps.value);\n      }\n    }\n  };\n\n  const processFragment = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\n    const fragmentStartAnchor = n2.el = n1 ? n1.el : hostCreateText('');\n    const fragmentEndAnchor = n2.anchor = n1 ? n1.anchor : hostCreateText('');\n    let {\n      patchFlag,\n      dynamicChildren,\n      slotScopeIds: fragmentSlotScopeIds\n    } = n2;\n\n    if (false) {} // check if this is a slot fragment with :slotted scope ids\n\n\n    if (fragmentSlotScopeIds) {\n      slotScopeIds = slotScopeIds ? slotScopeIds.concat(fragmentSlotScopeIds) : fragmentSlotScopeIds;\n    }\n\n    if (n1 == null) {\n      hostInsert(fragmentStartAnchor, container, anchor);\n      hostInsert(fragmentEndAnchor, container, anchor); // a fragment can only have array children\n      // since they are either generated by the compiler, or implicitly created\n      // from arrays.\n\n      mountChildren(n2.children, container, fragmentEndAnchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\n    } else {\n      if (patchFlag > 0 && patchFlag & 64\n      /* STABLE_FRAGMENT */\n      && dynamicChildren && // #2715 the previous fragment could've been a BAILed one as a result\n      // of renderSlot() with no valid children\n      n1.dynamicChildren) {\n        // a stable fragment (template root or <template v-for>) doesn't need to\n        // patch children order, but it may contain dynamicChildren.\n        patchBlockChildren(n1.dynamicChildren, dynamicChildren, container, parentComponent, parentSuspense, isSVG, slotScopeIds);\n\n        if (false) {} else if ( // #2080 if the stable fragment has a key, it's a <template v-for> that may\n        //  get moved around. Make sure all root level vnodes inherit el.\n        // #2134 or if it's a component root, it may also get moved around\n        // as the component is being moved.\n        n2.key != null || parentComponent && n2 === parentComponent.subTree) {\n          traverseStaticChildren(n1, n2, true\n          /* shallow */\n          );\n        }\n      } else {\n        // keyed / unkeyed, or manual fragments.\n        // for keyed & unkeyed, since they are compiler generated from v-for,\n        // each child is guaranteed to be a block so the fragment will never\n        // have dynamicChildren.\n        patchChildren(n1, n2, container, fragmentEndAnchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\n      }\n    }\n  };\n\n  const processComponent = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\n    n2.slotScopeIds = slotScopeIds;\n\n    if (n1 == null) {\n      if (n2.shapeFlag & 512\n      /* COMPONENT_KEPT_ALIVE */\n      ) {\n        parentComponent.ctx.activate(n2, container, anchor, isSVG, optimized);\n      } else {\n        mountComponent(n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\n      }\n    } else {\n      updateComponent(n1, n2, optimized);\n    }\n  };\n\n  const mountComponent = (initialVNode, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\n    const instance = initialVNode.component = createComponentInstance(initialVNode, parentComponent, parentSuspense);\n\n    if (false) {}\n\n    if (false) {} // inject renderer internals for keepAlive\n\n\n    if (isKeepAlive(initialVNode)) {\n      instance.ctx.renderer = internals;\n    } // resolve props and slots for setup context\n\n\n    {\n      if (false) {}\n\n      setupComponent(instance);\n\n      if (false) {}\n    } // setup() is async. This component relies on async logic to be resolved\n    // before proceeding\n\n    if (instance.asyncDep) {\n      parentSuspense && parentSuspense.registerDep(instance, setupRenderEffect); // Give it a placeholder if this is not hydration\n      // TODO handle self-defined fallback\n\n      if (!initialVNode.el) {\n        const placeholder = instance.subTree = createVNode(Comment);\n        processCommentNode(null, placeholder, container, anchor);\n      }\n\n      return;\n    }\n\n    setupRenderEffect(instance, initialVNode, container, anchor, parentSuspense, isSVG, optimized);\n\n    if (false) {}\n  };\n\n  const updateComponent = (n1, n2, optimized) => {\n    const instance = n2.component = n1.component;\n\n    if (shouldUpdateComponent(n1, n2, optimized)) {\n      if (instance.asyncDep && !instance.asyncResolved) {\n        // async & still pending - just update props and slots\n        // since the component's reactive effect for render isn't set-up yet\n        if (false) {}\n\n        updateComponentPreRender(instance, n2, optimized);\n\n        if (false) {}\n\n        return;\n      } else {\n        // normal update\n        instance.next = n2; // in case the child component is also queued, remove it to avoid\n        // double updating the same child component in the same flush.\n\n        invalidateJob(instance.update); // instance.update is the reactive effect.\n\n        instance.update();\n      }\n    } else {\n      // no update needed. just copy over properties\n      n2.component = n1.component;\n      n2.el = n1.el;\n      instance.vnode = n2;\n    }\n  };\n\n  const setupRenderEffect = (instance, initialVNode, container, anchor, parentSuspense, isSVG, optimized) => {\n    const componentUpdateFn = () => {\n      if (!instance.isMounted) {\n        let vnodeHook;\n        const {\n          el,\n          props\n        } = initialVNode;\n        const {\n          bm,\n          m,\n          parent\n        } = instance;\n        const isAsyncWrapperVNode = isAsyncWrapper(initialVNode);\n        toggleRecurse(instance, false); // beforeMount hook\n\n        if (bm) {\n          invokeArrayFns(bm);\n        } // onVnodeBeforeMount\n\n\n        if (!isAsyncWrapperVNode && (vnodeHook = props && props.onVnodeBeforeMount)) {\n          invokeVNodeHook(vnodeHook, parent, initialVNode);\n        }\n\n        toggleRecurse(instance, true);\n\n        if (el && hydrateNode) {\n          // vnode has adopted host node - perform hydration instead of mount.\n          const hydrateSubTree = () => {\n            if (false) {}\n\n            instance.subTree = renderComponentRoot(instance);\n\n            if (false) {}\n\n            if (false) {}\n\n            hydrateNode(el, instance.subTree, instance, parentSuspense, null);\n\n            if (false) {}\n          };\n\n          if (isAsyncWrapperVNode) {\n            initialVNode.type.__asyncLoader().then( // note: we are moving the render call into an async callback,\n            // which means it won't track dependencies - but it's ok because\n            // a server-rendered async wrapper is already in resolved state\n            // and it will never need to change.\n            () => !instance.isUnmounted && hydrateSubTree());\n          } else {\n            hydrateSubTree();\n          }\n        } else {\n          if (false) {}\n\n          const subTree = instance.subTree = renderComponentRoot(instance);\n\n          if (false) {}\n\n          if (false) {}\n\n          patch(null, subTree, container, anchor, instance, parentSuspense, isSVG);\n\n          if (false) {}\n\n          initialVNode.el = subTree.el;\n        } // mounted hook\n\n\n        if (m) {\n          queuePostRenderEffect(m, parentSuspense);\n        } // onVnodeMounted\n\n\n        if (!isAsyncWrapperVNode && (vnodeHook = props && props.onVnodeMounted)) {\n          const scopedInitialVNode = initialVNode;\n          queuePostRenderEffect(() => invokeVNodeHook(vnodeHook, parent, scopedInitialVNode), parentSuspense);\n        } // activated hook for keep-alive roots.\n        // #1742 activated hook must be accessed after first render\n        // since the hook may be injected by a child keep-alive\n\n\n        if (initialVNode.shapeFlag & 256\n        /* COMPONENT_SHOULD_KEEP_ALIVE */\n        ) {\n          instance.a && queuePostRenderEffect(instance.a, parentSuspense);\n        }\n\n        instance.isMounted = true;\n\n        if ( false || __VUE_PROD_DEVTOOLS__) {\n          devtoolsComponentAdded(instance);\n        } // #2458: deference mount-only object parameters to prevent memleaks\n\n\n        initialVNode = container = anchor = null;\n      } else {\n        // updateComponent\n        // This is triggered by mutation of component's own state (next: null)\n        // OR parent calling processComponent (next: VNode)\n        let {\n          next,\n          bu,\n          u,\n          parent,\n          vnode\n        } = instance;\n        let originNext = next;\n        let vnodeHook;\n\n        if (false) {} // Disallow component effect recursion during pre-lifecycle hooks.\n\n\n        toggleRecurse(instance, false);\n\n        if (next) {\n          next.el = vnode.el;\n          updateComponentPreRender(instance, next, optimized);\n        } else {\n          next = vnode;\n        } // beforeUpdate hook\n\n\n        if (bu) {\n          invokeArrayFns(bu);\n        } // onVnodeBeforeUpdate\n\n\n        if (vnodeHook = next.props && next.props.onVnodeBeforeUpdate) {\n          invokeVNodeHook(vnodeHook, parent, next, vnode);\n        }\n\n        toggleRecurse(instance, true); // render\n\n        if (false) {}\n\n        const nextTree = renderComponentRoot(instance);\n\n        if (false) {}\n\n        const prevTree = instance.subTree;\n        instance.subTree = nextTree;\n\n        if (false) {}\n\n        patch(prevTree, nextTree, // parent may have changed if it's in a teleport\n        hostParentNode(prevTree.el), // anchor may have changed if it's in a fragment\n        getNextHostNode(prevTree), instance, parentSuspense, isSVG);\n\n        if (false) {}\n\n        next.el = nextTree.el;\n\n        if (originNext === null) {\n          // self-triggered update. In case of HOC, update parent component\n          // vnode el. HOC is indicated by parent instance's subTree pointing\n          // to child component's vnode\n          updateHOCHostEl(instance, nextTree.el);\n        } // updated hook\n\n\n        if (u) {\n          queuePostRenderEffect(u, parentSuspense);\n        } // onVnodeUpdated\n\n\n        if (vnodeHook = next.props && next.props.onVnodeUpdated) {\n          queuePostRenderEffect(() => invokeVNodeHook(vnodeHook, parent, next, vnode), parentSuspense);\n        }\n\n        if ( false || __VUE_PROD_DEVTOOLS__) {\n          devtoolsComponentUpdated(instance);\n        }\n\n        if (false) {}\n      }\n    }; // create reactive effect for rendering\n\n\n    const effect = instance.effect = new ReactiveEffect(componentUpdateFn, () => queueJob(instance.update), instance.scope // track it in component's effect scope\n    );\n    const update = instance.update = effect.run.bind(effect);\n    update.id = instance.uid; // allowRecurse\n    // #1801, #2043 component render effects should allow recursive updates\n\n    toggleRecurse(instance, true);\n\n    if (false) {}\n\n    update();\n  };\n\n  const updateComponentPreRender = (instance, nextVNode, optimized) => {\n    nextVNode.component = instance;\n    const prevProps = instance.vnode.props;\n    instance.vnode = nextVNode;\n    instance.next = null;\n    updateProps(instance, nextVNode.props, prevProps, optimized);\n    updateSlots(instance, nextVNode.children, optimized);\n    pauseTracking(); // props update may have triggered pre-flush watchers.\n    // flush them before the render update.\n\n    flushPreFlushCbs(undefined, instance.update);\n    resetTracking();\n  };\n\n  const patchChildren = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized = false) => {\n    const c1 = n1 && n1.children;\n    const prevShapeFlag = n1 ? n1.shapeFlag : 0;\n    const c2 = n2.children;\n    const {\n      patchFlag,\n      shapeFlag\n    } = n2; // fast path\n\n    if (patchFlag > 0) {\n      if (patchFlag & 128\n      /* KEYED_FRAGMENT */\n      ) {\n        // this could be either fully-keyed or mixed (some keyed some not)\n        // presence of patchFlag means children are guaranteed to be arrays\n        patchKeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\n        return;\n      } else if (patchFlag & 256\n      /* UNKEYED_FRAGMENT */\n      ) {\n        // unkeyed\n        patchUnkeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\n        return;\n      }\n    } // children has 3 possibilities: text, array or no children.\n\n\n    if (shapeFlag & 8\n    /* TEXT_CHILDREN */\n    ) {\n      // text children fast path\n      if (prevShapeFlag & 16\n      /* ARRAY_CHILDREN */\n      ) {\n        unmountChildren(c1, parentComponent, parentSuspense);\n      }\n\n      if (c2 !== c1) {\n        hostSetElementText(container, c2);\n      }\n    } else {\n      if (prevShapeFlag & 16\n      /* ARRAY_CHILDREN */\n      ) {\n        // prev children was array\n        if (shapeFlag & 16\n        /* ARRAY_CHILDREN */\n        ) {\n          // two arrays, cannot assume anything, do full diff\n          patchKeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\n        } else {\n          // no new children, just unmount old\n          unmountChildren(c1, parentComponent, parentSuspense, true);\n        }\n      } else {\n        // prev children was text OR null\n        // new children is array OR null\n        if (prevShapeFlag & 8\n        /* TEXT_CHILDREN */\n        ) {\n          hostSetElementText(container, '');\n        } // mount new if array\n\n\n        if (shapeFlag & 16\n        /* ARRAY_CHILDREN */\n        ) {\n          mountChildren(c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\n        }\n      }\n    }\n  };\n\n  const patchUnkeyedChildren = (c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\n    c1 = c1 || EMPTY_ARR;\n    c2 = c2 || EMPTY_ARR;\n    const oldLength = c1.length;\n    const newLength = c2.length;\n    const commonLength = Math.min(oldLength, newLength);\n    let i;\n\n    for (i = 0; i < commonLength; i++) {\n      const nextChild = c2[i] = optimized ? cloneIfMounted(c2[i]) : normalizeVNode(c2[i]);\n      patch(c1[i], nextChild, container, null, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\n    }\n\n    if (oldLength > newLength) {\n      // remove old\n      unmountChildren(c1, parentComponent, parentSuspense, true, false, commonLength);\n    } else {\n      // mount new\n      mountChildren(c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, commonLength);\n    }\n  }; // can be all-keyed or mixed\n\n\n  const patchKeyedChildren = (c1, c2, container, parentAnchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\n    let i = 0;\n    const l2 = c2.length;\n    let e1 = c1.length - 1; // prev ending index\n\n    let e2 = l2 - 1; // next ending index\n    // 1. sync from start\n    // (a b) c\n    // (a b) d e\n\n    while (i <= e1 && i <= e2) {\n      const n1 = c1[i];\n      const n2 = c2[i] = optimized ? cloneIfMounted(c2[i]) : normalizeVNode(c2[i]);\n\n      if (isSameVNodeType(n1, n2)) {\n        patch(n1, n2, container, null, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\n      } else {\n        break;\n      }\n\n      i++;\n    } // 2. sync from end\n    // a (b c)\n    // d e (b c)\n\n\n    while (i <= e1 && i <= e2) {\n      const n1 = c1[e1];\n      const n2 = c2[e2] = optimized ? cloneIfMounted(c2[e2]) : normalizeVNode(c2[e2]);\n\n      if (isSameVNodeType(n1, n2)) {\n        patch(n1, n2, container, null, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\n      } else {\n        break;\n      }\n\n      e1--;\n      e2--;\n    } // 3. common sequence + mount\n    // (a b)\n    // (a b) c\n    // i = 2, e1 = 1, e2 = 2\n    // (a b)\n    // c (a b)\n    // i = 0, e1 = -1, e2 = 0\n\n\n    if (i > e1) {\n      if (i <= e2) {\n        const nextPos = e2 + 1;\n        const anchor = nextPos < l2 ? c2[nextPos].el : parentAnchor;\n\n        while (i <= e2) {\n          patch(null, c2[i] = optimized ? cloneIfMounted(c2[i]) : normalizeVNode(c2[i]), container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\n          i++;\n        }\n      }\n    } // 4. common sequence + unmount\n    // (a b) c\n    // (a b)\n    // i = 2, e1 = 2, e2 = 1\n    // a (b c)\n    // (b c)\n    // i = 0, e1 = 0, e2 = -1\n    else if (i > e2) {\n      while (i <= e1) {\n        unmount(c1[i], parentComponent, parentSuspense, true);\n        i++;\n      }\n    } // 5. unknown sequence\n    // [i ... e1 + 1]: a b [c d e] f g\n    // [i ... e2 + 1]: a b [e d c h] f g\n    // i = 2, e1 = 4, e2 = 5\n    else {\n      const s1 = i; // prev starting index\n\n      const s2 = i; // next starting index\n      // 5.1 build key:index map for newChildren\n\n      const keyToNewIndexMap = new Map();\n\n      for (i = s2; i <= e2; i++) {\n        const nextChild = c2[i] = optimized ? cloneIfMounted(c2[i]) : normalizeVNode(c2[i]);\n\n        if (nextChild.key != null) {\n          if (false) {}\n\n          keyToNewIndexMap.set(nextChild.key, i);\n        }\n      } // 5.2 loop through old children left to be patched and try to patch\n      // matching nodes & remove nodes that are no longer present\n\n\n      let j;\n      let patched = 0;\n      const toBePatched = e2 - s2 + 1;\n      let moved = false; // used to track whether any node has moved\n\n      let maxNewIndexSoFar = 0; // works as Map<newIndex, oldIndex>\n      // Note that oldIndex is offset by +1\n      // and oldIndex = 0 is a special value indicating the new node has\n      // no corresponding old node.\n      // used for determining longest stable subsequence\n\n      const newIndexToOldIndexMap = new Array(toBePatched);\n\n      for (i = 0; i < toBePatched; i++) newIndexToOldIndexMap[i] = 0;\n\n      for (i = s1; i <= e1; i++) {\n        const prevChild = c1[i];\n\n        if (patched >= toBePatched) {\n          // all new children have been patched so this can only be a removal\n          unmount(prevChild, parentComponent, parentSuspense, true);\n          continue;\n        }\n\n        let newIndex;\n\n        if (prevChild.key != null) {\n          newIndex = keyToNewIndexMap.get(prevChild.key);\n        } else {\n          // key-less node, try to locate a key-less node of the same type\n          for (j = s2; j <= e2; j++) {\n            if (newIndexToOldIndexMap[j - s2] === 0 && isSameVNodeType(prevChild, c2[j])) {\n              newIndex = j;\n              break;\n            }\n          }\n        }\n\n        if (newIndex === undefined) {\n          unmount(prevChild, parentComponent, parentSuspense, true);\n        } else {\n          newIndexToOldIndexMap[newIndex - s2] = i + 1;\n\n          if (newIndex >= maxNewIndexSoFar) {\n            maxNewIndexSoFar = newIndex;\n          } else {\n            moved = true;\n          }\n\n          patch(prevChild, c2[newIndex], container, null, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\n          patched++;\n        }\n      } // 5.3 move and mount\n      // generate longest stable subsequence only when nodes have moved\n\n\n      const increasingNewIndexSequence = moved ? getSequence(newIndexToOldIndexMap) : EMPTY_ARR;\n      j = increasingNewIndexSequence.length - 1; // looping backwards so that we can use last patched node as anchor\n\n      for (i = toBePatched - 1; i >= 0; i--) {\n        const nextIndex = s2 + i;\n        const nextChild = c2[nextIndex];\n        const anchor = nextIndex + 1 < l2 ? c2[nextIndex + 1].el : parentAnchor;\n\n        if (newIndexToOldIndexMap[i] === 0) {\n          // mount new\n          patch(null, nextChild, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\n        } else if (moved) {\n          // move if:\n          // There is no stable subsequence (e.g. a reverse)\n          // OR current node is not among the stable sequence\n          if (j < 0 || i !== increasingNewIndexSequence[j]) {\n            move(nextChild, container, anchor, 2\n            /* REORDER */\n            );\n          } else {\n            j--;\n          }\n        }\n      }\n    }\n  };\n\n  const move = (vnode, container, anchor, moveType, parentSuspense = null) => {\n    const {\n      el,\n      type,\n      transition,\n      children,\n      shapeFlag\n    } = vnode;\n\n    if (shapeFlag & 6\n    /* COMPONENT */\n    ) {\n      move(vnode.component.subTree, container, anchor, moveType);\n      return;\n    }\n\n    if (shapeFlag & 128\n    /* SUSPENSE */\n    ) {\n      vnode.suspense.move(container, anchor, moveType);\n      return;\n    }\n\n    if (shapeFlag & 64\n    /* TELEPORT */\n    ) {\n      type.move(vnode, container, anchor, internals);\n      return;\n    }\n\n    if (type === Fragment) {\n      hostInsert(el, container, anchor);\n\n      for (let i = 0; i < children.length; i++) {\n        move(children[i], container, anchor, moveType);\n      }\n\n      hostInsert(vnode.anchor, container, anchor);\n      return;\n    }\n\n    if (type === Static) {\n      moveStaticNode(vnode, container, anchor);\n      return;\n    } // single nodes\n\n\n    const needTransition = moveType !== 2\n    /* REORDER */\n    && shapeFlag & 1\n    /* ELEMENT */\n    && transition;\n\n    if (needTransition) {\n      if (moveType === 0\n      /* ENTER */\n      ) {\n        transition.beforeEnter(el);\n        hostInsert(el, container, anchor);\n        queuePostRenderEffect(() => transition.enter(el), parentSuspense);\n      } else {\n        const {\n          leave,\n          delayLeave,\n          afterLeave\n        } = transition;\n\n        const remove = () => hostInsert(el, container, anchor);\n\n        const performLeave = () => {\n          leave(el, () => {\n            remove();\n            afterLeave && afterLeave();\n          });\n        };\n\n        if (delayLeave) {\n          delayLeave(el, remove, performLeave);\n        } else {\n          performLeave();\n        }\n      }\n    } else {\n      hostInsert(el, container, anchor);\n    }\n  };\n\n  const unmount = (vnode, parentComponent, parentSuspense, doRemove = false, optimized = false) => {\n    const {\n      type,\n      props,\n      ref,\n      children,\n      dynamicChildren,\n      shapeFlag,\n      patchFlag,\n      dirs\n    } = vnode; // unset ref\n\n    if (ref != null) {\n      setRef(ref, null, parentSuspense, vnode, true);\n    }\n\n    if (shapeFlag & 256\n    /* COMPONENT_SHOULD_KEEP_ALIVE */\n    ) {\n      parentComponent.ctx.deactivate(vnode);\n      return;\n    }\n\n    const shouldInvokeDirs = shapeFlag & 1\n    /* ELEMENT */\n    && dirs;\n    const shouldInvokeVnodeHook = !isAsyncWrapper(vnode);\n    let vnodeHook;\n\n    if (shouldInvokeVnodeHook && (vnodeHook = props && props.onVnodeBeforeUnmount)) {\n      invokeVNodeHook(vnodeHook, parentComponent, vnode);\n    }\n\n    if (shapeFlag & 6\n    /* COMPONENT */\n    ) {\n      unmountComponent(vnode.component, parentSuspense, doRemove);\n    } else {\n      if (shapeFlag & 128\n      /* SUSPENSE */\n      ) {\n        vnode.suspense.unmount(parentSuspense, doRemove);\n        return;\n      }\n\n      if (shouldInvokeDirs) {\n        invokeDirectiveHook(vnode, null, parentComponent, 'beforeUnmount');\n      }\n\n      if (shapeFlag & 64\n      /* TELEPORT */\n      ) {\n        vnode.type.remove(vnode, parentComponent, parentSuspense, optimized, internals, doRemove);\n      } else if (dynamicChildren && ( // #1153: fast path should not be taken for non-stable (v-for) fragments\n      type !== Fragment || patchFlag > 0 && patchFlag & 64\n      /* STABLE_FRAGMENT */\n      )) {\n        // fast path for block nodes: only need to unmount dynamic children.\n        unmountChildren(dynamicChildren, parentComponent, parentSuspense, false, true);\n      } else if (type === Fragment && patchFlag & (128\n      /* KEYED_FRAGMENT */\n      | 256\n      /* UNKEYED_FRAGMENT */\n      ) || !optimized && shapeFlag & 16\n      /* ARRAY_CHILDREN */\n      ) {\n        unmountChildren(children, parentComponent, parentSuspense);\n      }\n\n      if (doRemove) {\n        remove(vnode);\n      }\n    }\n\n    if (shouldInvokeVnodeHook && (vnodeHook = props && props.onVnodeUnmounted) || shouldInvokeDirs) {\n      queuePostRenderEffect(() => {\n        vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode);\n        shouldInvokeDirs && invokeDirectiveHook(vnode, null, parentComponent, 'unmounted');\n      }, parentSuspense);\n    }\n  };\n\n  const remove = vnode => {\n    const {\n      type,\n      el,\n      anchor,\n      transition\n    } = vnode;\n\n    if (type === Fragment) {\n      if (false) {} else {\n        removeFragment(el, anchor);\n      }\n\n      return;\n    }\n\n    if (type === Static) {\n      removeStaticNode(vnode);\n      return;\n    }\n\n    const performRemove = () => {\n      hostRemove(el);\n\n      if (transition && !transition.persisted && transition.afterLeave) {\n        transition.afterLeave();\n      }\n    };\n\n    if (vnode.shapeFlag & 1\n    /* ELEMENT */\n    && transition && !transition.persisted) {\n      const {\n        leave,\n        delayLeave\n      } = transition;\n\n      const performLeave = () => leave(el, performRemove);\n\n      if (delayLeave) {\n        delayLeave(vnode.el, performRemove, performLeave);\n      } else {\n        performLeave();\n      }\n    } else {\n      performRemove();\n    }\n  };\n\n  const removeFragment = (cur, end) => {\n    // For fragments, directly remove all contained DOM nodes.\n    // (fragment child nodes cannot have transition)\n    let next;\n\n    while (cur !== end) {\n      next = hostNextSibling(cur);\n      hostRemove(cur);\n      cur = next;\n    }\n\n    hostRemove(end);\n  };\n\n  const unmountComponent = (instance, parentSuspense, doRemove) => {\n    if (false) {}\n\n    const {\n      bum,\n      scope,\n      update,\n      subTree,\n      um\n    } = instance; // beforeUnmount hook\n\n    if (bum) {\n      invokeArrayFns(bum);\n    } // stop effects in component scope\n\n\n    scope.stop(); // update may be null if a component is unmounted before its async\n    // setup has resolved.\n\n    if (update) {\n      // so that scheduler will no longer invoke it\n      update.active = false;\n      unmount(subTree, instance, parentSuspense, doRemove);\n    } // unmounted hook\n\n\n    if (um) {\n      queuePostRenderEffect(um, parentSuspense);\n    }\n\n    queuePostRenderEffect(() => {\n      instance.isUnmounted = true;\n    }, parentSuspense); // A component with async dep inside a pending suspense is unmounted before\n    // its async dep resolves. This should remove the dep from the suspense, and\n    // cause the suspense to resolve immediately if that was the last dep.\n\n    if (parentSuspense && parentSuspense.pendingBranch && !parentSuspense.isUnmounted && instance.asyncDep && !instance.asyncResolved && instance.suspenseId === parentSuspense.pendingId) {\n      parentSuspense.deps--;\n\n      if (parentSuspense.deps === 0) {\n        parentSuspense.resolve();\n      }\n    }\n\n    if ( false || __VUE_PROD_DEVTOOLS__) {\n      devtoolsComponentRemoved(instance);\n    }\n  };\n\n  const unmountChildren = (children, parentComponent, parentSuspense, doRemove = false, optimized = false, start = 0) => {\n    for (let i = start; i < children.length; i++) {\n      unmount(children[i], parentComponent, parentSuspense, doRemove, optimized);\n    }\n  };\n\n  const getNextHostNode = vnode => {\n    if (vnode.shapeFlag & 6\n    /* COMPONENT */\n    ) {\n      return getNextHostNode(vnode.component.subTree);\n    }\n\n    if (vnode.shapeFlag & 128\n    /* SUSPENSE */\n    ) {\n      return vnode.suspense.next();\n    }\n\n    return hostNextSibling(vnode.anchor || vnode.el);\n  };\n\n  const render = (vnode, container, isSVG) => {\n    if (vnode == null) {\n      if (container._vnode) {\n        unmount(container._vnode, null, null, true);\n      }\n    } else {\n      patch(container._vnode || null, vnode, container, null, null, null, isSVG);\n    }\n\n    flushPostFlushCbs();\n    container._vnode = vnode;\n  };\n\n  const internals = {\n    p: patch,\n    um: unmount,\n    m: move,\n    r: remove,\n    mt: mountComponent,\n    mc: mountChildren,\n    pc: patchChildren,\n    pbc: patchBlockChildren,\n    n: getNextHostNode,\n    o: options\n  };\n  let hydrate;\n  let hydrateNode;\n\n  if (createHydrationFns) {\n    [hydrate, hydrateNode] = createHydrationFns(internals);\n  }\n\n  return {\n    render,\n    hydrate,\n    createApp: createAppAPI(render, hydrate)\n  };\n}\n\nfunction toggleRecurse({\n  effect,\n  update\n}, allowed) {\n  effect.allowRecurse = update.allowRecurse = allowed;\n}\n/**\r\n * #1156\r\n * When a component is HMR-enabled, we need to make sure that all static nodes\r\n * inside a block also inherit the DOM element from the previous tree so that\r\n * HMR updates (which are full updates) can retrieve the element for patching.\r\n *\r\n * #2080\r\n * Inside keyed `template` fragment static children, if a fragment is moved,\r\n * the children will always be moved. Therefore, in order to ensure correct move\r\n * position, el should be inherited from previous nodes.\r\n */\n\n\nfunction traverseStaticChildren(n1, n2, shallow = false) {\n  const ch1 = n1.children;\n  const ch2 = n2.children;\n\n  if (shared_esm_bundler_isArray(ch1) && shared_esm_bundler_isArray(ch2)) {\n    for (let i = 0; i < ch1.length; i++) {\n      // this is only called in the optimized path so array children are\n      // guaranteed to be vnodes\n      const c1 = ch1[i];\n      let c2 = ch2[i];\n\n      if (c2.shapeFlag & 1\n      /* ELEMENT */\n      && !c2.dynamicChildren) {\n        if (c2.patchFlag <= 0 || c2.patchFlag === 32\n        /* HYDRATE_EVENTS */\n        ) {\n          c2 = ch2[i] = cloneIfMounted(ch2[i]);\n          c2.el = c1.el;\n        }\n\n        if (!shallow) traverseStaticChildren(c1, c2);\n      } // also inherit for comment nodes, but not placeholders (e.g. v-if which\n      // would have received .el during block patch)\n\n\n      if (false) {}\n    }\n  }\n} // https://en.wikipedia.org/wiki/Longest_increasing_subsequence\n\n\nfunction getSequence(arr) {\n  const p = arr.slice();\n  const result = [0];\n  let i, j, u, v, c;\n  const len = arr.length;\n\n  for (i = 0; i < len; i++) {\n    const arrI = arr[i];\n\n    if (arrI !== 0) {\n      j = result[result.length - 1];\n\n      if (arr[j] < arrI) {\n        p[i] = j;\n        result.push(i);\n        continue;\n      }\n\n      u = 0;\n      v = result.length - 1;\n\n      while (u < v) {\n        c = u + v >> 1;\n\n        if (arr[result[c]] < arrI) {\n          u = c + 1;\n        } else {\n          v = c;\n        }\n      }\n\n      if (arrI < arr[result[u]]) {\n        if (u > 0) {\n          p[i] = result[u - 1];\n        }\n\n        result[u] = i;\n      }\n    }\n  }\n\n  u = result.length;\n  v = result[u - 1];\n\n  while (u-- > 0) {\n    result[u] = v;\n    v = p[v];\n  }\n\n  return result;\n}\n\nconst isTeleport = type => type.__isTeleport;\n\nconst isTeleportDisabled = props => props && (props.disabled || props.disabled === '');\n\nconst isTargetSVG = target => typeof SVGElement !== 'undefined' && target instanceof SVGElement;\n\nconst resolveTarget = (props, select) => {\n  const targetSelector = props && props.to;\n\n  if (shared_esm_bundler_isString(targetSelector)) {\n    if (!select) {\n       false && 0;\n      return null;\n    } else {\n      const target = select(targetSelector);\n\n      if (!target) {\n         false && 0;\n      }\n\n      return target;\n    }\n  } else {\n    if (false) {}\n\n    return targetSelector;\n  }\n};\n\nconst TeleportImpl = {\n  __isTeleport: true,\n\n  process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, internals) {\n    const {\n      mc: mountChildren,\n      pc: patchChildren,\n      pbc: patchBlockChildren,\n      o: {\n        insert,\n        querySelector,\n        createText,\n        createComment\n      }\n    } = internals;\n    const disabled = isTeleportDisabled(n2.props);\n    let {\n      shapeFlag,\n      children,\n      dynamicChildren\n    } = n2; // #3302\n    // HMR updated, force full diff\n\n    if (false) {}\n\n    if (n1 == null) {\n      // insert anchors in the main view\n      const placeholder = n2.el =  false ? 0 : createText('');\n      const mainAnchor = n2.anchor =  false ? 0 : createText('');\n      insert(placeholder, container, anchor);\n      insert(mainAnchor, container, anchor);\n      const target = n2.target = resolveTarget(n2.props, querySelector);\n      const targetAnchor = n2.targetAnchor = createText('');\n\n      if (target) {\n        insert(targetAnchor, target); // #2652 we could be teleporting from a non-SVG tree into an SVG tree\n\n        isSVG = isSVG || isTargetSVG(target);\n      } else if (false) {}\n\n      const mount = (container, anchor) => {\n        // Teleport *always* has Array children. This is enforced in both the\n        // compiler and vnode children normalization.\n        if (shapeFlag & 16\n        /* ARRAY_CHILDREN */\n        ) {\n          mountChildren(children, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\n        }\n      };\n\n      if (disabled) {\n        mount(container, mainAnchor);\n      } else if (target) {\n        mount(target, targetAnchor);\n      }\n    } else {\n      // update content\n      n2.el = n1.el;\n      const mainAnchor = n2.anchor = n1.anchor;\n      const target = n2.target = n1.target;\n      const targetAnchor = n2.targetAnchor = n1.targetAnchor;\n      const wasDisabled = isTeleportDisabled(n1.props);\n      const currentContainer = wasDisabled ? container : target;\n      const currentAnchor = wasDisabled ? mainAnchor : targetAnchor;\n      isSVG = isSVG || isTargetSVG(target);\n\n      if (dynamicChildren) {\n        // fast path when the teleport happens to be a block root\n        patchBlockChildren(n1.dynamicChildren, dynamicChildren, currentContainer, parentComponent, parentSuspense, isSVG, slotScopeIds); // even in block tree mode we need to make sure all root-level nodes\n        // in the teleport inherit previous DOM references so that they can\n        // be moved in future patches.\n\n        traverseStaticChildren(n1, n2, true);\n      } else if (!optimized) {\n        patchChildren(n1, n2, currentContainer, currentAnchor, parentComponent, parentSuspense, isSVG, slotScopeIds, false);\n      }\n\n      if (disabled) {\n        if (!wasDisabled) {\n          // enabled -> disabled\n          // move into main container\n          moveTeleport(n2, container, mainAnchor, internals, 1\n          /* TOGGLE */\n          );\n        }\n      } else {\n        // target changed\n        if ((n2.props && n2.props.to) !== (n1.props && n1.props.to)) {\n          const nextTarget = n2.target = resolveTarget(n2.props, querySelector);\n\n          if (nextTarget) {\n            moveTeleport(n2, nextTarget, null, internals, 0\n            /* TARGET_CHANGE */\n            );\n          } else if (false) {}\n        } else if (wasDisabled) {\n          // disabled -> enabled\n          // move into teleport target\n          moveTeleport(n2, target, targetAnchor, internals, 1\n          /* TOGGLE */\n          );\n        }\n      }\n    }\n  },\n\n  remove(vnode, parentComponent, parentSuspense, optimized, {\n    um: unmount,\n    o: {\n      remove: hostRemove\n    }\n  }, doRemove) {\n    const {\n      shapeFlag,\n      children,\n      anchor,\n      targetAnchor,\n      target,\n      props\n    } = vnode;\n\n    if (target) {\n      hostRemove(targetAnchor);\n    } // an unmounted teleport should always remove its children if not disabled\n\n\n    if (doRemove || !isTeleportDisabled(props)) {\n      hostRemove(anchor);\n\n      if (shapeFlag & 16\n      /* ARRAY_CHILDREN */\n      ) {\n        for (let i = 0; i < children.length; i++) {\n          const child = children[i];\n          unmount(child, parentComponent, parentSuspense, true, !!child.dynamicChildren);\n        }\n      }\n    }\n  },\n\n  move: moveTeleport,\n  hydrate: hydrateTeleport\n};\n\nfunction moveTeleport(vnode, container, parentAnchor, {\n  o: {\n    insert\n  },\n  m: move\n}, moveType = 2\n/* REORDER */\n) {\n  // move target anchor if this is a target change.\n  if (moveType === 0\n  /* TARGET_CHANGE */\n  ) {\n    insert(vnode.targetAnchor, container, parentAnchor);\n  }\n\n  const {\n    el,\n    anchor,\n    shapeFlag,\n    children,\n    props\n  } = vnode;\n  const isReorder = moveType === 2\n  /* REORDER */\n  ; // move main view anchor if this is a re-order.\n\n  if (isReorder) {\n    insert(el, container, parentAnchor);\n  } // if this is a re-order and teleport is enabled (content is in target)\n  // do not move children. So the opposite is: only move children if this\n  // is not a reorder, or the teleport is disabled\n\n\n  if (!isReorder || isTeleportDisabled(props)) {\n    // Teleport has either Array children or no children.\n    if (shapeFlag & 16\n    /* ARRAY_CHILDREN */\n    ) {\n      for (let i = 0; i < children.length; i++) {\n        move(children[i], container, parentAnchor, 2\n        /* REORDER */\n        );\n      }\n    }\n  } // move main view anchor if this is a re-order.\n\n\n  if (isReorder) {\n    insert(anchor, container, parentAnchor);\n  }\n}\n\nfunction hydrateTeleport(node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized, {\n  o: {\n    nextSibling,\n    parentNode,\n    querySelector\n  }\n}, hydrateChildren) {\n  const target = vnode.target = resolveTarget(vnode.props, querySelector);\n\n  if (target) {\n    // if multiple teleports rendered to the same target element, we need to\n    // pick up from where the last teleport finished instead of the first node\n    const targetNode = target._lpa || target.firstChild;\n\n    if (vnode.shapeFlag & 16\n    /* ARRAY_CHILDREN */\n    ) {\n      if (isTeleportDisabled(vnode.props)) {\n        vnode.anchor = hydrateChildren(nextSibling(node), vnode, parentNode(node), parentComponent, parentSuspense, slotScopeIds, optimized);\n        vnode.targetAnchor = targetNode;\n      } else {\n        vnode.anchor = nextSibling(node);\n        vnode.targetAnchor = hydrateChildren(targetNode, vnode, target, parentComponent, parentSuspense, slotScopeIds, optimized);\n      }\n\n      target._lpa = vnode.targetAnchor && nextSibling(vnode.targetAnchor);\n    }\n  }\n\n  return vnode.anchor && nextSibling(vnode.anchor);\n} // Force-casted public typing for h and TSX props inference\n\n\nconst Teleport = TeleportImpl;\nconst COMPONENTS = 'components';\nconst DIRECTIVES = 'directives';\n/**\r\n * @private\r\n */\n\nfunction resolveComponent(name, maybeSelfReference) {\n  return resolveAsset(COMPONENTS, name, true, maybeSelfReference) || name;\n}\n\nconst NULL_DYNAMIC_COMPONENT = Symbol();\n/**\r\n * @private\r\n */\n\nfunction resolveDynamicComponent(component) {\n  if (shared_esm_bundler_isString(component)) {\n    return resolveAsset(COMPONENTS, component, false) || component;\n  } else {\n    // invalid types will fallthrough to createVNode and raise warning\n    return component || NULL_DYNAMIC_COMPONENT;\n  }\n}\n/**\r\n * @private\r\n */\n\n\nfunction resolveDirective(name) {\n  return resolveAsset(DIRECTIVES, name);\n} // implementation\n\n\nfunction resolveAsset(type, name, warnMissing = true, maybeSelfReference = false) {\n  const instance = currentRenderingInstance || currentInstance;\n\n  if (instance) {\n    const Component = instance.type; // explicit self name has highest priority\n\n    if (type === COMPONENTS) {\n      const selfName = getComponentName(Component);\n\n      if (selfName && (selfName === name || selfName === camelize(name) || selfName === shared_esm_bundler_capitalize(camelize(name)))) {\n        return Component;\n      }\n    }\n\n    const res = // local registration\n    // check instance[type] first which is resolved for options API\n    resolve(instance[type] || Component[type], name) || // global registration\n    resolve(instance.appContext[type], name);\n\n    if (!res && maybeSelfReference) {\n      // fallback to implicit self-reference\n      return Component;\n    }\n\n    if (false) {}\n\n    return res;\n  } else if (false) {}\n}\n\nfunction resolve(registry, name) {\n  return registry && (registry[name] || registry[camelize(name)] || registry[shared_esm_bundler_capitalize(camelize(name))]);\n}\n\nconst Fragment = Symbol( false ? 0 : undefined);\nconst Text = Symbol( false ? 0 : undefined);\nconst Comment = Symbol( false ? 0 : undefined);\nconst Static = Symbol( false ? 0 : undefined); // Since v-if and v-for are the two possible ways node structure can dynamically\n// change, once we consider v-if branches and each v-for fragment a block, we\n// can divide a template into nested blocks, and within each block the node\n// structure would be stable. This allows us to skip most children diffing\n// and only worry about the dynamic nodes (indicated by patch flags).\n\nconst blockStack = [];\nlet currentBlock = null;\n/**\r\n * Open a block.\r\n * This must be called before `createBlock`. It cannot be part of `createBlock`\r\n * because the children of the block are evaluated before `createBlock` itself\r\n * is called. The generated code typically looks like this:\r\n *\r\n * ```js\r\n * function render() {\r\n *   return (openBlock(),createBlock('div', null, [...]))\r\n * }\r\n * ```\r\n * disableTracking is true when creating a v-for fragment block, since a v-for\r\n * fragment always diffs its children.\r\n *\r\n * @private\r\n */\n\nfunction openBlock(disableTracking = false) {\n  blockStack.push(currentBlock = disableTracking ? null : []);\n}\n\nfunction closeBlock() {\n  blockStack.pop();\n  currentBlock = blockStack[blockStack.length - 1] || null;\n} // Whether we should be tracking dynamic child nodes inside a block.\n// Only tracks when this value is > 0\n// We are not using a simple boolean because this value may need to be\n// incremented/decremented by nested usage of v-once (see below)\n\n\nlet isBlockTreeEnabled = 1;\n/**\r\n * Block tracking sometimes needs to be disabled, for example during the\r\n * creation of a tree that needs to be cached by v-once. The compiler generates\r\n * code like this:\r\n *\r\n * ``` js\r\n * _cache[1] || (\r\n *   setBlockTracking(-1),\r\n *   _cache[1] = createVNode(...),\r\n *   setBlockTracking(1),\r\n *   _cache[1]\r\n * )\r\n * ```\r\n *\r\n * @private\r\n */\n\nfunction setBlockTracking(value) {\n  isBlockTreeEnabled += value;\n}\n\nfunction setupBlock(vnode) {\n  // save current block children on the block vnode\n  vnode.dynamicChildren = isBlockTreeEnabled > 0 ? currentBlock || EMPTY_ARR : null; // close block\n\n  closeBlock(); // a block is always going to be patched, so track it as a child of its\n  // parent block\n\n  if (isBlockTreeEnabled > 0 && currentBlock) {\n    currentBlock.push(vnode);\n  }\n\n  return vnode;\n}\n/**\r\n * @private\r\n */\n\n\nfunction createElementBlock(type, props, children, patchFlag, dynamicProps, shapeFlag) {\n  return setupBlock(createBaseVNode(type, props, children, patchFlag, dynamicProps, shapeFlag, true\n  /* isBlock */\n  ));\n}\n/**\r\n * Create a block root vnode. Takes the same exact arguments as `createVNode`.\r\n * A block root keeps track of dynamic nodes within the block in the\r\n * `dynamicChildren` array.\r\n *\r\n * @private\r\n */\n\n\nfunction createBlock(type, props, children, patchFlag, dynamicProps) {\n  return setupBlock(createVNode(type, props, children, patchFlag, dynamicProps, true\n  /* isBlock: prevent a block from tracking itself */\n  ));\n}\n\nfunction isVNode(value) {\n  return value ? value.__v_isVNode === true : false;\n}\n\nfunction isSameVNodeType(n1, n2) {\n  if (false) {}\n\n  return n1.type === n2.type && n1.key === n2.key;\n}\n\nlet vnodeArgsTransformer;\n/**\r\n * Internal API for registering an arguments transform for createVNode\r\n * used for creating stubs in the test-utils\r\n * It is *internal* but needs to be exposed for test-utils to pick up proper\r\n * typings\r\n */\n\nfunction transformVNodeArgs(transformer) {\n  vnodeArgsTransformer = transformer;\n}\n\nconst createVNodeWithArgsTransform = (...args) => {\n  return _createVNode(...(vnodeArgsTransformer ? vnodeArgsTransformer(args, currentRenderingInstance) : args));\n};\n\nconst InternalObjectKey = `__vInternal`;\n\nconst normalizeKey = ({\n  key\n}) => key != null ? key : null;\n\nconst normalizeRef = ({\n  ref,\n  ref_key,\n  ref_for\n}) => {\n  return ref != null ? shared_esm_bundler_isString(ref) || isRef(ref) || isFunction(ref) ? {\n    i: currentRenderingInstance,\n    r: ref,\n    k: ref_key,\n    f: !!ref_for\n  } : ref : null;\n};\n\nfunction createBaseVNode(type, props = null, children = null, patchFlag = 0, dynamicProps = null, shapeFlag = type === Fragment ? 0 : 1\n/* ELEMENT */\n, isBlockNode = false, needFullChildrenNormalization = false) {\n  const vnode = {\n    __v_isVNode: true,\n    __v_skip: true,\n    type,\n    props,\n    key: props && normalizeKey(props),\n    ref: props && normalizeRef(props),\n    scopeId: currentScopeId,\n    slotScopeIds: null,\n    children,\n    component: null,\n    suspense: null,\n    ssContent: null,\n    ssFallback: null,\n    dirs: null,\n    transition: null,\n    el: null,\n    anchor: null,\n    target: null,\n    targetAnchor: null,\n    staticCount: 0,\n    shapeFlag,\n    patchFlag,\n    dynamicProps,\n    dynamicChildren: null,\n    appContext: null\n  };\n\n  if (needFullChildrenNormalization) {\n    normalizeChildren(vnode, children); // normalize suspense children\n\n    if (shapeFlag & 128\n    /* SUSPENSE */\n    ) {\n      type.normalize(vnode);\n    }\n  } else if (children) {\n    // compiled element vnode - if children is passed, only possible types are\n    // string or Array.\n    vnode.shapeFlag |= shared_esm_bundler_isString(children) ? 8\n    /* TEXT_CHILDREN */\n    : 16\n    /* ARRAY_CHILDREN */\n    ;\n  } // validate key\n\n\n  if (false) {} // track vnode for block tree\n\n\n  if (isBlockTreeEnabled > 0 && // avoid a block node from tracking itself\n  !isBlockNode && // has current parent block\n  currentBlock && ( // presence of a patch flag indicates this node needs patching on updates.\n  // component nodes also should always be patched, because even if the\n  // component doesn't need to update, it needs to persist the instance on to\n  // the next vnode so that it can be properly unmounted later.\n  vnode.patchFlag > 0 || shapeFlag & 6\n  /* COMPONENT */\n  ) && // the EVENTS flag is only for hydration and if it is the only flag, the\n  // vnode should not be considered dynamic due to handler caching.\n  vnode.patchFlag !== 32\n  /* HYDRATE_EVENTS */\n  ) {\n    currentBlock.push(vnode);\n  }\n\n  return vnode;\n}\n\nconst createVNode =  false ? 0 : _createVNode;\n\nfunction _createVNode(type, props = null, children = null, patchFlag = 0, dynamicProps = null, isBlockNode = false) {\n  if (!type || type === NULL_DYNAMIC_COMPONENT) {\n    if (false) {}\n\n    type = Comment;\n  }\n\n  if (isVNode(type)) {\n    // createVNode receiving an existing vnode. This happens in cases like\n    // <component :is=\"vnode\"/>\n    // #2078 make sure to merge refs during the clone instead of overwriting it\n    const cloned = cloneVNode(type, props, true\n    /* mergeRef: true */\n    );\n\n    if (children) {\n      normalizeChildren(cloned, children);\n    }\n\n    return cloned;\n  } // class component normalization.\n\n\n  if (isClassComponent(type)) {\n    type = type.__vccOpts;\n  } // class & style normalization.\n\n\n  if (props) {\n    // for reactive or proxy objects, we need to clone it to enable mutation.\n    props = guardReactiveProps(props);\n    let {\n      class: klass,\n      style\n    } = props;\n\n    if (klass && !shared_esm_bundler_isString(klass)) {\n      props.class = normalizeClass(klass);\n    }\n\n    if (shared_esm_bundler_isObject(style)) {\n      // reactive state objects need to be cloned since they are likely to be\n      // mutated\n      if (isProxy(style) && !shared_esm_bundler_isArray(style)) {\n        style = shared_esm_bundler_extend({}, style);\n      }\n\n      props.style = normalizeStyle(style);\n    }\n  } // encode the vnode type information into a bitmap\n\n\n  const shapeFlag = shared_esm_bundler_isString(type) ? 1\n  /* ELEMENT */\n  : isSuspense(type) ? 128\n  /* SUSPENSE */\n  : isTeleport(type) ? 64\n  /* TELEPORT */\n  : shared_esm_bundler_isObject(type) ? 4\n  /* STATEFUL_COMPONENT */\n  : isFunction(type) ? 2\n  /* FUNCTIONAL_COMPONENT */\n  : 0;\n\n  if (false) {}\n\n  return createBaseVNode(type, props, children, patchFlag, dynamicProps, shapeFlag, isBlockNode, true);\n}\n\nfunction guardReactiveProps(props) {\n  if (!props) return null;\n  return isProxy(props) || InternalObjectKey in props ? shared_esm_bundler_extend({}, props) : props;\n}\n\nfunction cloneVNode(vnode, extraProps, mergeRef = false) {\n  // This is intentionally NOT using spread or extend to avoid the runtime\n  // key enumeration cost.\n  const {\n    props,\n    ref,\n    patchFlag,\n    children\n  } = vnode;\n  const mergedProps = extraProps ? mergeProps(props || {}, extraProps) : props;\n  const cloned = {\n    __v_isVNode: true,\n    __v_skip: true,\n    type: vnode.type,\n    props: mergedProps,\n    key: mergedProps && normalizeKey(mergedProps),\n    ref: extraProps && extraProps.ref ? // #2078 in the case of <component :is=\"vnode\" ref=\"extra\"/>\n    // if the vnode itself already has a ref, cloneVNode will need to merge\n    // the refs so the single vnode can be set on multiple refs\n    mergeRef && ref ? shared_esm_bundler_isArray(ref) ? ref.concat(normalizeRef(extraProps)) : [ref, normalizeRef(extraProps)] : normalizeRef(extraProps) : ref,\n    scopeId: vnode.scopeId,\n    slotScopeIds: vnode.slotScopeIds,\n    children:  false ? 0 : children,\n    target: vnode.target,\n    targetAnchor: vnode.targetAnchor,\n    staticCount: vnode.staticCount,\n    shapeFlag: vnode.shapeFlag,\n    // if the vnode is cloned with extra props, we can no longer assume its\n    // existing patch flag to be reliable and need to add the FULL_PROPS flag.\n    // note: preserve flag for fragments since they use the flag for children\n    // fast paths only.\n    patchFlag: extraProps && vnode.type !== Fragment ? patchFlag === -1 // hoisted node\n    ? 16\n    /* FULL_PROPS */\n    : patchFlag | 16\n    /* FULL_PROPS */\n    : patchFlag,\n    dynamicProps: vnode.dynamicProps,\n    dynamicChildren: vnode.dynamicChildren,\n    appContext: vnode.appContext,\n    dirs: vnode.dirs,\n    transition: vnode.transition,\n    // These should technically only be non-null on mounted VNodes. However,\n    // they *should* be copied for kept-alive vnodes. So we just always copy\n    // them since them being non-null during a mount doesn't affect the logic as\n    // they will simply be overwritten.\n    component: vnode.component,\n    suspense: vnode.suspense,\n    ssContent: vnode.ssContent && cloneVNode(vnode.ssContent),\n    ssFallback: vnode.ssFallback && cloneVNode(vnode.ssFallback),\n    el: vnode.el,\n    anchor: vnode.anchor\n  };\n  return cloned;\n}\n/**\r\n * Dev only, for HMR of hoisted vnodes reused in v-for\r\n * https://github.com/vitejs/vite/issues/2022\r\n */\n\n\nfunction deepCloneVNode(vnode) {\n  const cloned = cloneVNode(vnode);\n\n  if (isArray(vnode.children)) {\n    cloned.children = vnode.children.map(deepCloneVNode);\n  }\n\n  return cloned;\n}\n/**\r\n * @private\r\n */\n\n\nfunction createTextVNode(text = ' ', flag = 0) {\n  return createVNode(Text, null, text, flag);\n}\n/**\r\n * @private\r\n */\n\n\nfunction createStaticVNode(content, numberOfNodes) {\n  // A static vnode can contain multiple stringified elements, and the number\n  // of elements is necessary for hydration.\n  const vnode = createVNode(Static, null, content);\n  vnode.staticCount = numberOfNodes;\n  return vnode;\n}\n/**\r\n * @private\r\n */\n\n\nfunction createCommentVNode(text = '', // when used as the v-else branch, the comment node must be created as a\n// block to ensure correct updates.\nasBlock = false) {\n  return asBlock ? (openBlock(), createBlock(Comment, null, text)) : createVNode(Comment, null, text);\n}\n\nfunction normalizeVNode(child) {\n  if (child == null || typeof child === 'boolean') {\n    // empty placeholder\n    return createVNode(Comment);\n  } else if (shared_esm_bundler_isArray(child)) {\n    // fragment\n    return createVNode(Fragment, null, // #3666, avoid reference pollution when reusing vnode\n    child.slice());\n  } else if (typeof child === 'object') {\n    // already vnode, this should be the most common since compiled templates\n    // always produce all-vnode children arrays\n    return cloneIfMounted(child);\n  } else {\n    // strings and numbers\n    return createVNode(Text, null, String(child));\n  }\n} // optimized normalization for template-compiled render fns\n\n\nfunction cloneIfMounted(child) {\n  return child.el === null || child.memo ? child : cloneVNode(child);\n}\n\nfunction normalizeChildren(vnode, children) {\n  let type = 0;\n  const {\n    shapeFlag\n  } = vnode;\n\n  if (children == null) {\n    children = null;\n  } else if (shared_esm_bundler_isArray(children)) {\n    type = 16\n    /* ARRAY_CHILDREN */\n    ;\n  } else if (typeof children === 'object') {\n    if (shapeFlag & (1\n    /* ELEMENT */\n    | 64\n    /* TELEPORT */\n    )) {\n      // Normalize slot to plain children for plain element and Teleport\n      const slot = children.default;\n\n      if (slot) {\n        // _c marker is added by withCtx() indicating this is a compiled slot\n        slot._c && (slot._d = false);\n        normalizeChildren(vnode, slot());\n        slot._c && (slot._d = true);\n      }\n\n      return;\n    } else {\n      type = 32\n      /* SLOTS_CHILDREN */\n      ;\n      const slotFlag = children._;\n\n      if (!slotFlag && !(InternalObjectKey in children)) {\n        children._ctx = currentRenderingInstance;\n      } else if (slotFlag === 3\n      /* FORWARDED */\n      && currentRenderingInstance) {\n        // a child component receives forwarded slots from the parent.\n        // its slot type is determined by its parent's slot type.\n        if (currentRenderingInstance.slots._ === 1\n        /* STABLE */\n        ) {\n          children._ = 1\n          /* STABLE */\n          ;\n        } else {\n          children._ = 2\n          /* DYNAMIC */\n          ;\n          vnode.patchFlag |= 1024\n          /* DYNAMIC_SLOTS */\n          ;\n        }\n      }\n    }\n  } else if (isFunction(children)) {\n    children = {\n      default: children,\n      _ctx: currentRenderingInstance\n    };\n    type = 32\n    /* SLOTS_CHILDREN */\n    ;\n  } else {\n    children = String(children); // force teleport children to array so it can be moved around\n\n    if (shapeFlag & 64\n    /* TELEPORT */\n    ) {\n      type = 16\n      /* ARRAY_CHILDREN */\n      ;\n      children = [createTextVNode(children)];\n    } else {\n      type = 8\n      /* TEXT_CHILDREN */\n      ;\n    }\n  }\n\n  vnode.children = children;\n  vnode.shapeFlag |= type;\n}\n\nfunction mergeProps(...args) {\n  const ret = {};\n\n  for (let i = 0; i < args.length; i++) {\n    const toMerge = args[i];\n\n    for (const key in toMerge) {\n      if (key === 'class') {\n        if (ret.class !== toMerge.class) {\n          ret.class = normalizeClass([ret.class, toMerge.class]);\n        }\n      } else if (key === 'style') {\n        ret.style = normalizeStyle([ret.style, toMerge.style]);\n      } else if (isOn(key)) {\n        const existing = ret[key];\n        const incoming = toMerge[key];\n\n        if (incoming && existing !== incoming && !(shared_esm_bundler_isArray(existing) && existing.includes(incoming))) {\n          ret[key] = existing ? [].concat(existing, incoming) : incoming;\n        }\n      } else if (key !== '') {\n        ret[key] = toMerge[key];\n      }\n    }\n  }\n\n  return ret;\n}\n\nfunction invokeVNodeHook(hook, instance, vnode, prevVNode = null) {\n  callWithAsyncErrorHandling(hook, instance, 7\n  /* VNODE_HOOK */\n  , [vnode, prevVNode]);\n}\n/**\r\n * Actual implementation\r\n */\n\n\nfunction renderList(source, renderItem, cache, index) {\n  let ret;\n  const cached = cache && cache[index];\n\n  if (shared_esm_bundler_isArray(source) || shared_esm_bundler_isString(source)) {\n    ret = new Array(source.length);\n\n    for (let i = 0, l = source.length; i < l; i++) {\n      ret[i] = renderItem(source[i], i, undefined, cached && cached[i]);\n    }\n  } else if (typeof source === 'number') {\n    if (false) {}\n\n    ret = new Array(source);\n\n    for (let i = 0; i < source; i++) {\n      ret[i] = renderItem(i + 1, i, undefined, cached && cached[i]);\n    }\n  } else if (shared_esm_bundler_isObject(source)) {\n    if (source[Symbol.iterator]) {\n      ret = Array.from(source, (item, i) => renderItem(item, i, undefined, cached && cached[i]));\n    } else {\n      const keys = Object.keys(source);\n      ret = new Array(keys.length);\n\n      for (let i = 0, l = keys.length; i < l; i++) {\n        const key = keys[i];\n        ret[i] = renderItem(source[key], key, i, cached && cached[i]);\n      }\n    }\n  } else {\n    ret = [];\n  }\n\n  if (cache) {\n    cache[index] = ret;\n  }\n\n  return ret;\n}\n/**\r\n * Compiler runtime helper for creating dynamic slots object\r\n * @private\r\n */\n\n\nfunction createSlots(slots, dynamicSlots) {\n  for (let i = 0; i < dynamicSlots.length; i++) {\n    const slot = dynamicSlots[i]; // array of dynamic slot generated by <template v-for=\"...\" #[...]>\n\n    if (shared_esm_bundler_isArray(slot)) {\n      for (let j = 0; j < slot.length; j++) {\n        slots[slot[j].name] = slot[j].fn;\n      }\n    } else if (slot) {\n      // conditional single slot generated by <template v-if=\"...\" #foo>\n      slots[slot.name] = slot.fn;\n    }\n  }\n\n  return slots;\n}\n/**\r\n * Compiler runtime helper for rendering `<slot/>`\r\n * @private\r\n */\n\n\nfunction renderSlot(slots, name, props = {}, // this is not a user-facing function, so the fallback is always generated by\n// the compiler and guaranteed to be a function returning an array\nfallback, noSlotted) {\n  if (currentRenderingInstance.isCE || currentRenderingInstance.parent && isAsyncWrapper(currentRenderingInstance.parent) && currentRenderingInstance.parent.isCE) {\n    return createVNode('slot', name === 'default' ? null : {\n      name\n    }, fallback && fallback());\n  }\n\n  let slot = slots[name];\n\n  if (false) {} // a compiled slot disables block tracking by default to avoid manual\n  // invocation interfering with template-based block tracking, but in\n  // `renderSlot` we can be sure that it's template-based so we can force\n  // enable it.\n\n\n  if (slot && slot._c) {\n    slot._d = false;\n  }\n\n  openBlock();\n  const validSlotContent = slot && ensureValidVNode(slot(props));\n  const rendered = createBlock(Fragment, {\n    key: props.key || `_${name}`\n  }, validSlotContent || (fallback ? fallback() : []), validSlotContent && slots._ === 1\n  /* STABLE */\n  ? 64\n  /* STABLE_FRAGMENT */\n  : -2\n  /* BAIL */\n  );\n\n  if (!noSlotted && rendered.scopeId) {\n    rendered.slotScopeIds = [rendered.scopeId + '-s'];\n  }\n\n  if (slot && slot._c) {\n    slot._d = true;\n  }\n\n  return rendered;\n}\n\nfunction ensureValidVNode(vnodes) {\n  return vnodes.some(child => {\n    if (!isVNode(child)) return true;\n    if (child.type === Comment) return false;\n    if (child.type === Fragment && !ensureValidVNode(child.children)) return false;\n    return true;\n  }) ? vnodes : null;\n}\n/**\r\n * For prefixing keys in v-on=\"obj\" with \"on\"\r\n * @private\r\n */\n\n\nfunction toHandlers(obj) {\n  const ret = {};\n\n  if (false) {}\n\n  for (const key in obj) {\n    ret[toHandlerKey(key)] = obj[key];\n  }\n\n  return ret;\n}\n/**\r\n * #2437 In Vue 3, functional components do not have a public instance proxy but\r\n * they exist in the internal parent chain. For code that relies on traversing\r\n * public $parent chains, skip functional ones and go to the parent instead.\r\n */\n\n\nconst getPublicInstance = i => {\n  if (!i) return null;\n  if (isStatefulComponent(i)) return getExposeProxy(i) || i.proxy;\n  return getPublicInstance(i.parent);\n};\n\nconst publicPropertiesMap = // Move PURE marker to new line to workaround compiler discarding it\n// due to type annotation\n\n/*#__PURE__*/\nshared_esm_bundler_extend(Object.create(null), {\n  $: i => i,\n  $el: i => i.vnode.el,\n  $data: i => i.data,\n  $props: i =>  false ? 0 : i.props,\n  $attrs: i =>  false ? 0 : i.attrs,\n  $slots: i =>  false ? 0 : i.slots,\n  $refs: i =>  false ? 0 : i.refs,\n  $parent: i => getPublicInstance(i.parent),\n  $root: i => getPublicInstance(i.root),\n  $emit: i => i.emit,\n  $options: i => __VUE_OPTIONS_API__ ? resolveMergedOptions(i) : i.type,\n  $forceUpdate: i => () => queueJob(i.update),\n  $nextTick: i => nextTick.bind(i.proxy),\n  $watch: i => __VUE_OPTIONS_API__ ? instanceWatch.bind(i) : shared_esm_bundler_NOOP\n});\nconst PublicInstanceProxyHandlers = {\n  get({\n    _: instance\n  }, key) {\n    const {\n      ctx,\n      setupState,\n      data,\n      props,\n      accessCache,\n      type,\n      appContext\n    } = instance; // for internal formatters to know that this is a Vue instance\n\n    if (false) {} // prioritize <script setup> bindings during dev.\n    // this allows even properties that start with _ or $ to be used - so that\n    // it aligns with the production behavior where the render fn is inlined and\n    // indeed has access to all declared variables.\n\n\n    if (false) {} // data / props / ctx\n    // This getter gets called for every property access on the render context\n    // during render and is a major hotspot. The most expensive part of this\n    // is the multiple hasOwn() calls. It's much faster to do a simple property\n    // access on a plain object, so we use an accessCache object (with null\n    // prototype) to memoize what access type a key corresponds to.\n\n\n    let normalizedProps;\n\n    if (key[0] !== '$') {\n      const n = accessCache[key];\n\n      if (n !== undefined) {\n        switch (n) {\n          case 1\n          /* SETUP */\n          :\n            return setupState[key];\n\n          case 2\n          /* DATA */\n          :\n            return data[key];\n\n          case 4\n          /* CONTEXT */\n          :\n            return ctx[key];\n\n          case 3\n          /* PROPS */\n          :\n            return props[key];\n          // default: just fallthrough\n        }\n      } else if (setupState !== EMPTY_OBJ && shared_esm_bundler_hasOwn(setupState, key)) {\n        accessCache[key] = 1\n        /* SETUP */\n        ;\n        return setupState[key];\n      } else if (data !== EMPTY_OBJ && shared_esm_bundler_hasOwn(data, key)) {\n        accessCache[key] = 2\n        /* DATA */\n        ;\n        return data[key];\n      } else if ( // only cache other properties when instance has declared (thus stable)\n      // props\n      (normalizedProps = instance.propsOptions[0]) && shared_esm_bundler_hasOwn(normalizedProps, key)) {\n        accessCache[key] = 3\n        /* PROPS */\n        ;\n        return props[key];\n      } else if (ctx !== EMPTY_OBJ && shared_esm_bundler_hasOwn(ctx, key)) {\n        accessCache[key] = 4\n        /* CONTEXT */\n        ;\n        return ctx[key];\n      } else if (!__VUE_OPTIONS_API__ || shouldCacheAccess) {\n        accessCache[key] = 0\n        /* OTHER */\n        ;\n      }\n    }\n\n    const publicGetter = publicPropertiesMap[key];\n    let cssModule, globalProperties; // public $xxx properties\n\n    if (publicGetter) {\n      if (key === '$attrs') {\n        track(instance, \"get\"\n        /* GET */\n        , key);\n         false && 0;\n      }\n\n      return publicGetter(instance);\n    } else if ( // css module (injected by vue-loader)\n    (cssModule = type.__cssModules) && (cssModule = cssModule[key])) {\n      return cssModule;\n    } else if (ctx !== EMPTY_OBJ && shared_esm_bundler_hasOwn(ctx, key)) {\n      // user may set custom properties to `this` that start with `$`\n      accessCache[key] = 4\n      /* CONTEXT */\n      ;\n      return ctx[key];\n    } else if ( // global properties\n    globalProperties = appContext.config.globalProperties, shared_esm_bundler_hasOwn(globalProperties, key)) {\n      {\n        return globalProperties[key];\n      }\n    } else if (false) {}\n  },\n\n  set({\n    _: instance\n  }, key, value) {\n    const {\n      data,\n      setupState,\n      ctx\n    } = instance;\n\n    if (setupState !== EMPTY_OBJ && shared_esm_bundler_hasOwn(setupState, key)) {\n      setupState[key] = value;\n      return true;\n    } else if (data !== EMPTY_OBJ && shared_esm_bundler_hasOwn(data, key)) {\n      data[key] = value;\n      return true;\n    } else if (shared_esm_bundler_hasOwn(instance.props, key)) {\n       false && 0;\n      return false;\n    }\n\n    if (key[0] === '$' && key.slice(1) in instance) {\n       false && 0;\n      return false;\n    } else {\n      if (false) {} else {\n        ctx[key] = value;\n      }\n    }\n\n    return true;\n  },\n\n  has({\n    _: {\n      data,\n      setupState,\n      accessCache,\n      ctx,\n      appContext,\n      propsOptions\n    }\n  }, key) {\n    let normalizedProps;\n    return !!accessCache[key] || data !== EMPTY_OBJ && shared_esm_bundler_hasOwn(data, key) || setupState !== EMPTY_OBJ && shared_esm_bundler_hasOwn(setupState, key) || (normalizedProps = propsOptions[0]) && shared_esm_bundler_hasOwn(normalizedProps, key) || shared_esm_bundler_hasOwn(ctx, key) || shared_esm_bundler_hasOwn(publicPropertiesMap, key) || shared_esm_bundler_hasOwn(appContext.config.globalProperties, key);\n  },\n\n  defineProperty(target, key, descriptor) {\n    if (descriptor.get != null) {\n      // invalidate key cache of a getter based property #5417\n      target._.accessCache[key] = 0;\n    } else if (shared_esm_bundler_hasOwn(descriptor, 'value')) {\n      this.set(target, key, descriptor.value, null);\n    }\n\n    return Reflect.defineProperty(target, key, descriptor);\n  }\n\n};\n\nif (false) {}\n\nconst RuntimeCompiledPublicInstanceProxyHandlers = /*#__PURE__*/shared_esm_bundler_extend({}, PublicInstanceProxyHandlers, {\n  get(target, key) {\n    // fast path for unscopables when using `with` block\n    if (key === Symbol.unscopables) {\n      return;\n    }\n\n    return PublicInstanceProxyHandlers.get(target, key, target);\n  },\n\n  has(_, key) {\n    const has = key[0] !== '_' && !isGloballyWhitelisted(key);\n\n    if (false) {}\n\n    return has;\n  }\n\n}); // dev only\n// In dev mode, the proxy target exposes the same properties as seen on `this`\n// for easier console inspection. In prod mode it will be an empty object so\n// these properties definitions can be skipped.\n\nfunction createDevRenderContext(instance) {\n  const target = {}; // expose internal instance for proxy handlers\n\n  Object.defineProperty(target, `_`, {\n    configurable: true,\n    enumerable: false,\n    get: () => instance\n  }); // expose public properties\n\n  Object.keys(publicPropertiesMap).forEach(key => {\n    Object.defineProperty(target, key, {\n      configurable: true,\n      enumerable: false,\n      get: () => publicPropertiesMap[key](instance),\n      // intercepted by the proxy so no need for implementation,\n      // but needed to prevent set errors\n      set: NOOP\n    });\n  });\n  return target;\n} // dev only\n\n\nfunction exposePropsOnRenderContext(instance) {\n  const {\n    ctx,\n    propsOptions: [propsOptions]\n  } = instance;\n\n  if (propsOptions) {\n    Object.keys(propsOptions).forEach(key => {\n      Object.defineProperty(ctx, key, {\n        enumerable: true,\n        configurable: true,\n        get: () => instance.props[key],\n        set: NOOP\n      });\n    });\n  }\n} // dev only\n\n\nfunction exposeSetupStateOnRenderContext(instance) {\n  const {\n    ctx,\n    setupState\n  } = instance;\n  Object.keys(toRaw(setupState)).forEach(key => {\n    if (!setupState.__isScriptSetup) {\n      if (key[0] === '$' || key[0] === '_') {\n        runtime_core_esm_bundler_warn(`setup() return property ${JSON.stringify(key)} should not start with \"$\" or \"_\" ` + `which are reserved prefixes for Vue internals.`);\n        return;\n      }\n\n      Object.defineProperty(ctx, key, {\n        enumerable: true,\n        configurable: true,\n        get: () => setupState[key],\n        set: NOOP\n      });\n    }\n  });\n}\n\nconst emptyAppContext = createAppContext();\nlet uid$1 = 0;\n\nfunction createComponentInstance(vnode, parent, suspense) {\n  const type = vnode.type; // inherit parent app context - or - if root, adopt from root vnode\n\n  const appContext = (parent ? parent.appContext : vnode.appContext) || emptyAppContext;\n  const instance = {\n    uid: uid$1++,\n    vnode,\n    type,\n    parent,\n    appContext,\n    root: null,\n    next: null,\n    subTree: null,\n    effect: null,\n    update: null,\n    scope: new EffectScope(true\n    /* detached */\n    ),\n    render: null,\n    proxy: null,\n    exposed: null,\n    exposeProxy: null,\n    withProxy: null,\n    provides: parent ? parent.provides : Object.create(appContext.provides),\n    accessCache: null,\n    renderCache: [],\n    // local resovled assets\n    components: null,\n    directives: null,\n    // resolved props and emits options\n    propsOptions: normalizePropsOptions(type, appContext),\n    emitsOptions: normalizeEmitsOptions(type, appContext),\n    // emit\n    emit: null,\n    emitted: null,\n    // props default value\n    propsDefaults: EMPTY_OBJ,\n    // inheritAttrs\n    inheritAttrs: type.inheritAttrs,\n    // state\n    ctx: EMPTY_OBJ,\n    data: EMPTY_OBJ,\n    props: EMPTY_OBJ,\n    attrs: EMPTY_OBJ,\n    slots: EMPTY_OBJ,\n    refs: EMPTY_OBJ,\n    setupState: EMPTY_OBJ,\n    setupContext: null,\n    // suspense related\n    suspense,\n    suspenseId: suspense ? suspense.pendingId : 0,\n    asyncDep: null,\n    asyncResolved: false,\n    // lifecycle hooks\n    // not using enums here because it results in computed properties\n    isMounted: false,\n    isUnmounted: false,\n    isDeactivated: false,\n    bc: null,\n    c: null,\n    bm: null,\n    m: null,\n    bu: null,\n    u: null,\n    um: null,\n    bum: null,\n    da: null,\n    a: null,\n    rtg: null,\n    rtc: null,\n    ec: null,\n    sp: null\n  };\n\n  if (false) {} else {\n    instance.ctx = {\n      _: instance\n    };\n  }\n\n  instance.root = parent ? parent.root : instance;\n  instance.emit = emit$1.bind(null, instance); // apply custom element special handling\n\n  if (vnode.ce) {\n    vnode.ce(instance);\n  }\n\n  return instance;\n}\n\nlet currentInstance = null;\n\nconst getCurrentInstance = () => currentInstance || currentRenderingInstance;\n\nconst setCurrentInstance = instance => {\n  currentInstance = instance;\n  instance.scope.on();\n};\n\nconst unsetCurrentInstance = () => {\n  currentInstance && currentInstance.scope.off();\n  currentInstance = null;\n};\n\nconst isBuiltInTag = /*#__PURE__*/(/* unused pure expression or super */ null && (makeMap('slot,component')));\n\nfunction validateComponentName(name, config) {\n  const appIsNativeTag = config.isNativeTag || NO;\n\n  if (isBuiltInTag(name) || appIsNativeTag(name)) {\n    runtime_core_esm_bundler_warn('Do not use built-in or reserved HTML elements as component id: ' + name);\n  }\n}\n\nfunction isStatefulComponent(instance) {\n  return instance.vnode.shapeFlag & 4\n  /* STATEFUL_COMPONENT */\n  ;\n}\n\nlet isInSSRComponentSetup = false;\n\nfunction setupComponent(instance, isSSR = false) {\n  isInSSRComponentSetup = isSSR;\n  const {\n    props,\n    children\n  } = instance.vnode;\n  const isStateful = isStatefulComponent(instance);\n  initProps(instance, props, isStateful, isSSR);\n  initSlots(instance, children);\n  const setupResult = isStateful ? setupStatefulComponent(instance, isSSR) : undefined;\n  isInSSRComponentSetup = false;\n  return setupResult;\n}\n\nfunction setupStatefulComponent(instance, isSSR) {\n  var _a;\n\n  const Component = instance.type;\n\n  if (false) {} // 0. create render proxy property access cache\n\n\n  instance.accessCache = Object.create(null); // 1. create public instance / render proxy\n  // also mark it raw so it's never observed\n\n  instance.proxy = markRaw(new Proxy(instance.ctx, PublicInstanceProxyHandlers));\n\n  if (false) {} // 2. call setup()\n\n\n  const {\n    setup\n  } = Component;\n\n  if (setup) {\n    const setupContext = instance.setupContext = setup.length > 1 ? createSetupContext(instance) : null;\n    setCurrentInstance(instance);\n    pauseTracking();\n    const setupResult = callWithErrorHandling(setup, instance, 0\n    /* SETUP_FUNCTION */\n    , [ false ? 0 : instance.props, setupContext]);\n    resetTracking();\n    unsetCurrentInstance();\n\n    if (isPromise(setupResult)) {\n      setupResult.then(unsetCurrentInstance, unsetCurrentInstance);\n\n      if (isSSR) {\n        // return the promise so server-renderer can wait on it\n        return setupResult.then(resolvedResult => {\n          handleSetupResult(instance, resolvedResult, isSSR);\n        }).catch(e => {\n          handleError(e, instance, 0\n          /* SETUP_FUNCTION */\n          );\n        });\n      } else {\n        // async setup returned Promise.\n        // bail here and wait for re-entry.\n        instance.asyncDep = setupResult;\n\n        if (false) {}\n      }\n    } else {\n      handleSetupResult(instance, setupResult, isSSR);\n    }\n  } else {\n    finishComponentSetup(instance, isSSR);\n  }\n}\n\nfunction handleSetupResult(instance, setupResult, isSSR) {\n  if (isFunction(setupResult)) {\n    // setup returned an inline render function\n    if (instance.type.__ssrInlineRender) {\n      // when the function's name is `ssrRender` (compiled by SFC inline mode),\n      // set it as ssrRender instead.\n      instance.ssrRender = setupResult;\n    } else {\n      instance.render = setupResult;\n    }\n  } else if (shared_esm_bundler_isObject(setupResult)) {\n    if (false) {} // setup returned bindings.\n    // assuming a render function compiled from template is present.\n\n\n    if ( false || __VUE_PROD_DEVTOOLS__) {\n      instance.devtoolsRawSetupState = setupResult;\n    }\n\n    instance.setupState = proxyRefs(setupResult);\n\n    if (false) {}\n  } else if (false) {}\n\n  finishComponentSetup(instance, isSSR);\n}\n\nlet compile;\nlet installWithProxy;\n/**\r\n * For runtime-dom to register the compiler.\r\n * Note the exported method uses any to avoid d.ts relying on the compiler types.\r\n */\n\nfunction registerRuntimeCompiler(_compile) {\n  compile = _compile;\n\n  installWithProxy = i => {\n    if (i.render._rc) {\n      i.withProxy = new Proxy(i.ctx, RuntimeCompiledPublicInstanceProxyHandlers);\n    }\n  };\n} // dev only\n\n\nconst runtime_core_esm_bundler_isRuntimeOnly = () => !compile;\n\nfunction finishComponentSetup(instance, isSSR, skipOptions) {\n  const Component = instance.type; // template / render function normalization\n  // could be already set when returned from setup()\n\n  if (!instance.render) {\n    // only do on-the-fly compile if not in SSR - SSR on-the-fly compilation\n    // is done by server-renderer\n    if (!isSSR && compile && !Component.render) {\n      const template = Component.template;\n\n      if (template) {\n        if (false) {}\n\n        const {\n          isCustomElement,\n          compilerOptions\n        } = instance.appContext.config;\n        const {\n          delimiters,\n          compilerOptions: componentCompilerOptions\n        } = Component;\n        const finalCompilerOptions = shared_esm_bundler_extend(shared_esm_bundler_extend({\n          isCustomElement,\n          delimiters\n        }, compilerOptions), componentCompilerOptions);\n        Component.render = compile(template, finalCompilerOptions);\n\n        if (false) {}\n      }\n    }\n\n    instance.render = Component.render || shared_esm_bundler_NOOP; // for runtime-compiled render functions using `with` blocks, the render\n    // proxy used needs a different `has` handler which is more performant and\n    // also only allows a whitelist of globals to fallthrough.\n\n    if (installWithProxy) {\n      installWithProxy(instance);\n    }\n  } // support for 2.x options\n\n\n  if (__VUE_OPTIONS_API__ && !false) {\n    setCurrentInstance(instance);\n    pauseTracking();\n    applyOptions(instance);\n    resetTracking();\n    unsetCurrentInstance();\n  } // warn missing template/render\n  // the runtime compilation of template in SSR is done by server-render\n\n\n  if (false) {}\n}\n\nfunction createAttrsProxy(instance) {\n  return new Proxy(instance.attrs,  false ? 0 : {\n    get(target, key) {\n      track(instance, \"get\"\n      /* GET */\n      , '$attrs');\n      return target[key];\n    }\n\n  });\n}\n\nfunction createSetupContext(instance) {\n  const expose = exposed => {\n    if (false) {}\n\n    instance.exposed = exposed || {};\n  };\n\n  let attrs;\n\n  if (false) {} else {\n    return {\n      get attrs() {\n        return attrs || (attrs = createAttrsProxy(instance));\n      },\n\n      slots: instance.slots,\n      emit: instance.emit,\n      expose\n    };\n  }\n}\n\nfunction getExposeProxy(instance) {\n  if (instance.exposed) {\n    return instance.exposeProxy || (instance.exposeProxy = new Proxy(proxyRefs(markRaw(instance.exposed)), {\n      get(target, key) {\n        if (key in target) {\n          return target[key];\n        } else if (key in publicPropertiesMap) {\n          return publicPropertiesMap[key](instance);\n        }\n      }\n\n    }));\n  }\n}\n\nconst classifyRE = /(?:^|[-_])(\\w)/g;\n\nconst classify = str => str.replace(classifyRE, c => c.toUpperCase()).replace(/[-_]/g, '');\n\nfunction getComponentName(Component) {\n  return isFunction(Component) ? Component.displayName || Component.name : Component.name;\n}\n/* istanbul ignore next */\n\n\nfunction formatComponentName(instance, Component, isRoot = false) {\n  let name = getComponentName(Component);\n\n  if (!name && Component.__file) {\n    const match = Component.__file.match(/([^/\\\\]+)\\.\\w+$/);\n\n    if (match) {\n      name = match[1];\n    }\n  }\n\n  if (!name && instance && instance.parent) {\n    // try to infer the name based on reverse resolution\n    const inferFromRegistry = registry => {\n      for (const key in registry) {\n        if (registry[key] === Component) {\n          return key;\n        }\n      }\n    };\n\n    name = inferFromRegistry(instance.components || instance.parent.type.components) || inferFromRegistry(instance.appContext.components);\n  }\n\n  return name ? classify(name) : isRoot ? `App` : `Anonymous`;\n}\n\nfunction isClassComponent(value) {\n  return isFunction(value) && '__vccOpts' in value;\n}\n\nconst runtime_core_esm_bundler_computed = (getterOrOptions, debugOptions) => {\n  // @ts-ignore\n  return computed(getterOrOptions, debugOptions, isInSSRComponentSetup);\n}; // dev only\n\n\nconst warnRuntimeUsage = method => runtime_core_esm_bundler_warn(`${method}() is a compiler-hint helper that is only usable inside ` + `<script setup> of a single file component. Its arguments should be ` + `compiled away and passing it at runtime has no effect.`); // implementation\n\n\nfunction defineProps() {\n  if (false) {}\n\n  return null;\n} // implementation\n\n\nfunction defineEmits() {\n  if (false) {}\n\n  return null;\n}\n/**\r\n * Vue `<script setup>` compiler macro for declaring a component's exposed\r\n * instance properties when it is accessed by a parent component via template\r\n * refs.\r\n *\r\n * `<script setup>` components are closed by default - i.e. variables inside\r\n * the `<script setup>` scope is not exposed to parent unless explicitly exposed\r\n * via `defineExpose`.\r\n *\r\n * This is only usable inside `<script setup>`, is compiled away in the\r\n * output and should **not** be actually called at runtime.\r\n */\n\n\nfunction defineExpose(exposed) {\n  if (false) {}\n}\n/**\r\n * Vue `<script setup>` compiler macro for providing props default values when\r\n * using type-based `defineProps` declaration.\r\n *\r\n * Example usage:\r\n * ```ts\r\n * withDefaults(defineProps<{\r\n *   size?: number\r\n *   labels?: string[]\r\n * }>(), {\r\n *   size: 3,\r\n *   labels: () => ['default label']\r\n * })\r\n * ```\r\n *\r\n * This is only usable inside `<script setup>`, is compiled away in the output\r\n * and should **not** be actually called at runtime.\r\n */\n\n\nfunction withDefaults(props, defaults) {\n  if (false) {}\n\n  return null;\n}\n\nfunction useSlots() {\n  return getContext().slots;\n}\n\nfunction useAttrs() {\n  return getContext().attrs;\n}\n\nfunction getContext() {\n  const i = getCurrentInstance();\n\n  if (false) {}\n\n  return i.setupContext || (i.setupContext = createSetupContext(i));\n}\n/**\r\n * Runtime helper for merging default declarations. Imported by compiled code\r\n * only.\r\n * @internal\r\n */\n\n\nfunction mergeDefaults(raw, defaults) {\n  const props = shared_esm_bundler_isArray(raw) ? raw.reduce((normalized, p) => (normalized[p] = {}, normalized), {}) : raw;\n\n  for (const key in defaults) {\n    const opt = props[key];\n\n    if (opt) {\n      if (shared_esm_bundler_isArray(opt) || isFunction(opt)) {\n        props[key] = {\n          type: opt,\n          default: defaults[key]\n        };\n      } else {\n        opt.default = defaults[key];\n      }\n    } else if (opt === null) {\n      props[key] = {\n        default: defaults[key]\n      };\n    } else if (false) {}\n  }\n\n  return props;\n}\n/**\r\n * Used to create a proxy for the rest element when destructuring props with\r\n * defineProps().\r\n * @internal\r\n */\n\n\nfunction createPropsRestProxy(props, excludedKeys) {\n  const ret = {};\n\n  for (const key in props) {\n    if (!excludedKeys.includes(key)) {\n      Object.defineProperty(ret, key, {\n        enumerable: true,\n        get: () => props[key]\n      });\n    }\n  }\n\n  return ret;\n}\n/**\r\n * `<script setup>` helper for persisting the current instance context over\r\n * async/await flows.\r\n *\r\n * `@vue/compiler-sfc` converts the following:\r\n *\r\n * ```ts\r\n * const x = await foo()\r\n * ```\r\n *\r\n * into:\r\n *\r\n * ```ts\r\n * let __temp, __restore\r\n * const x = (([__temp, __restore] = withAsyncContext(() => foo())),__temp=await __temp,__restore(),__temp)\r\n * ```\r\n * @internal\r\n */\n\n\nfunction withAsyncContext(getAwaitable) {\n  const ctx = getCurrentInstance();\n\n  if (false) {}\n\n  let awaitable = getAwaitable();\n  unsetCurrentInstance();\n\n  if (isPromise(awaitable)) {\n    awaitable = awaitable.catch(e => {\n      setCurrentInstance(ctx);\n      throw e;\n    });\n  }\n\n  return [awaitable, () => setCurrentInstance(ctx)];\n} // Actual implementation\n\n\nfunction h(type, propsOrChildren, children) {\n  const l = arguments.length;\n\n  if (l === 2) {\n    if (shared_esm_bundler_isObject(propsOrChildren) && !shared_esm_bundler_isArray(propsOrChildren)) {\n      // single vnode without props\n      if (isVNode(propsOrChildren)) {\n        return createVNode(type, null, [propsOrChildren]);\n      } // props without children\n\n\n      return createVNode(type, propsOrChildren);\n    } else {\n      // omit props\n      return createVNode(type, null, propsOrChildren);\n    }\n  } else {\n    if (l > 3) {\n      children = Array.prototype.slice.call(arguments, 2);\n    } else if (l === 3 && isVNode(children)) {\n      children = [children];\n    }\n\n    return createVNode(type, propsOrChildren, children);\n  }\n}\n\nconst ssrContextKey = Symbol( false ? 0 : ``);\n\nconst useSSRContext = () => {\n  {\n    const ctx = inject(ssrContextKey);\n\n    if (!ctx) {\n      runtime_core_esm_bundler_warn(`Server rendering context not provided. Make sure to only call ` + `useSSRContext() conditionally in the server build.`);\n    }\n\n    return ctx;\n  }\n};\n\nfunction runtime_core_esm_bundler_isShallow(value) {\n  return !!(value && value[\"__v_isShallow\"\n  /* IS_SHALLOW */\n  ]);\n}\n\nfunction runtime_core_esm_bundler_initCustomFormatter() {\n  /* eslint-disable no-restricted-globals */\n  if (true) {\n    return;\n  }\n\n  const vueStyle = {\n    style: 'color:#3ba776'\n  };\n  const numberStyle = {\n    style: 'color:#0b1bc9'\n  };\n  const stringStyle = {\n    style: 'color:#b62e24'\n  };\n  const keywordStyle = {\n    style: 'color:#9d288c'\n  }; // custom formatter for Chrome\n  // https://www.mattzeunert.com/2016/02/19/custom-chrome-devtools-object-formatters.html\n\n  const formatter = {\n    header(obj) {\n      // TODO also format ComponentPublicInstance & ctx.slots/attrs in setup\n      if (!shared_esm_bundler_isObject(obj)) {\n        return null;\n      }\n\n      if (obj.__isVue) {\n        return ['div', vueStyle, `VueInstance`];\n      } else if (isRef(obj)) {\n        return ['div', {}, ['span', vueStyle, genRefFlag(obj)], '<', formatValue(obj.value), `>`];\n      } else if (isReactive(obj)) {\n        return ['div', {}, ['span', vueStyle, runtime_core_esm_bundler_isShallow(obj) ? 'ShallowReactive' : 'Reactive'], '<', formatValue(obj), `>${isReadonly(obj) ? ` (readonly)` : ``}`];\n      } else if (isReadonly(obj)) {\n        return ['div', {}, ['span', vueStyle, runtime_core_esm_bundler_isShallow(obj) ? 'ShallowReadonly' : 'Readonly'], '<', formatValue(obj), '>'];\n      }\n\n      return null;\n    },\n\n    hasBody(obj) {\n      return obj && obj.__isVue;\n    },\n\n    body(obj) {\n      if (obj && obj.__isVue) {\n        return ['div', {}, ...formatInstance(obj.$)];\n      }\n    }\n\n  };\n\n  function formatInstance(instance) {\n    const blocks = [];\n\n    if (instance.type.props && instance.props) {\n      blocks.push(createInstanceBlock('props', reactivity_esm_bundler_toRaw(instance.props)));\n    }\n\n    if (instance.setupState !== EMPTY_OBJ) {\n      blocks.push(createInstanceBlock('setup', instance.setupState));\n    }\n\n    if (instance.data !== EMPTY_OBJ) {\n      blocks.push(createInstanceBlock('data', reactivity_esm_bundler_toRaw(instance.data)));\n    }\n\n    const computed = extractKeys(instance, 'computed');\n\n    if (computed) {\n      blocks.push(createInstanceBlock('computed', computed));\n    }\n\n    const injected = extractKeys(instance, 'inject');\n\n    if (injected) {\n      blocks.push(createInstanceBlock('injected', injected));\n    }\n\n    blocks.push(['div', {}, ['span', {\n      style: keywordStyle.style + ';opacity:0.66'\n    }, '$ (internal): '], ['object', {\n      object: instance\n    }]]);\n    return blocks;\n  }\n\n  function createInstanceBlock(type, target) {\n    target = shared_esm_bundler_extend({}, target);\n\n    if (!Object.keys(target).length) {\n      return ['span', {}];\n    }\n\n    return ['div', {\n      style: 'line-height:1.25em;margin-bottom:0.6em'\n    }, ['div', {\n      style: 'color:#476582'\n    }, type], ['div', {\n      style: 'padding-left:1.25em'\n    }, ...Object.keys(target).map(key => {\n      return ['div', {}, ['span', keywordStyle, key + ': '], formatValue(target[key], false)];\n    })]];\n  }\n\n  function formatValue(v, asRaw = true) {\n    if (typeof v === 'number') {\n      return ['span', numberStyle, v];\n    } else if (typeof v === 'string') {\n      return ['span', stringStyle, JSON.stringify(v)];\n    } else if (typeof v === 'boolean') {\n      return ['span', keywordStyle, v];\n    } else if (shared_esm_bundler_isObject(v)) {\n      return ['object', {\n        object: asRaw ? reactivity_esm_bundler_toRaw(v) : v\n      }];\n    } else {\n      return ['span', stringStyle, String(v)];\n    }\n  }\n\n  function extractKeys(instance, type) {\n    const Comp = instance.type;\n\n    if (isFunction(Comp)) {\n      return;\n    }\n\n    const extracted = {};\n\n    for (const key in instance.ctx) {\n      if (isKeyOfType(Comp, key, type)) {\n        extracted[key] = instance.ctx[key];\n      }\n    }\n\n    return extracted;\n  }\n\n  function isKeyOfType(Comp, key, type) {\n    const opts = Comp[type];\n\n    if (shared_esm_bundler_isArray(opts) && opts.includes(key) || shared_esm_bundler_isObject(opts) && key in opts) {\n      return true;\n    }\n\n    if (Comp.extends && isKeyOfType(Comp.extends, key, type)) {\n      return true;\n    }\n\n    if (Comp.mixins && Comp.mixins.some(m => isKeyOfType(m, key, type))) {\n      return true;\n    }\n  }\n\n  function genRefFlag(v) {\n    if (runtime_core_esm_bundler_isShallow(v)) {\n      return `ShallowRef`;\n    }\n\n    if (v.effect) {\n      return `ComputedRef`;\n    }\n\n    return `Ref`;\n  }\n\n  if (window.devtoolsFormatters) {\n    window.devtoolsFormatters.push(formatter);\n  } else {\n    window.devtoolsFormatters = [formatter];\n  }\n}\n\nfunction withMemo(memo, render, cache, index) {\n  const cached = cache[index];\n\n  if (cached && isMemoSame(cached, memo)) {\n    return cached;\n  }\n\n  const ret = render(); // shallow clone\n\n  ret.memo = memo.slice();\n  return cache[index] = ret;\n}\n\nfunction isMemoSame(cached, memo) {\n  const prev = cached.memo;\n\n  if (prev.length != memo.length) {\n    return false;\n  }\n\n  for (let i = 0; i < prev.length; i++) {\n    if (prev[i] !== memo[i]) {\n      return false;\n    }\n  } // make sure to let parent block track it when returning cached\n\n\n  if (isBlockTreeEnabled > 0 && currentBlock) {\n    currentBlock.push(cached);\n  }\n\n  return true;\n} // Core API ------------------------------------------------------------------\n\n\nconst version = \"3.2.33\";\nconst _ssrUtils = {\n  createComponentInstance,\n  setupComponent,\n  renderComponentRoot,\n  setCurrentRenderingInstance,\n  isVNode,\n  normalizeVNode\n};\n/**\r\n * SSR utils for \\@vue/server-renderer. Only exposed in cjs builds.\r\n * @internal\r\n */\n\nconst ssrUtils = _ssrUtils;\n/**\r\n * @internal only exposed in compat builds\r\n */\n\nconst resolveFilter = null;\n/**\r\n * @internal only exposed in compat builds.\r\n */\n\nconst compatUtils = null;\n\n;// CONCATENATED MODULE: ./node_modules/@vue/runtime-dom/dist/runtime-dom.esm-bundler.js\n\n\n\nconst svgNS = 'http://www.w3.org/2000/svg';\nconst doc = typeof document !== 'undefined' ? document : null;\nconst templateContainer = doc && /*#__PURE__*/doc.createElement('template');\nconst nodeOps = {\n  insert: (child, parent, anchor) => {\n    parent.insertBefore(child, anchor || null);\n  },\n  remove: child => {\n    const parent = child.parentNode;\n\n    if (parent) {\n      parent.removeChild(child);\n    }\n  },\n  createElement: (tag, isSVG, is, props) => {\n    const el = isSVG ? doc.createElementNS(svgNS, tag) : doc.createElement(tag, is ? {\n      is\n    } : undefined);\n\n    if (tag === 'select' && props && props.multiple != null) {\n      el.setAttribute('multiple', props.multiple);\n    }\n\n    return el;\n  },\n  createText: text => doc.createTextNode(text),\n  createComment: text => doc.createComment(text),\n  setText: (node, text) => {\n    node.nodeValue = text;\n  },\n  setElementText: (el, text) => {\n    el.textContent = text;\n  },\n  parentNode: node => node.parentNode,\n  nextSibling: node => node.nextSibling,\n  querySelector: selector => doc.querySelector(selector),\n\n  setScopeId(el, id) {\n    el.setAttribute(id, '');\n  },\n\n  cloneNode(el) {\n    const cloned = el.cloneNode(true); // #3072\n    // - in `patchDOMProp`, we store the actual value in the `el._value` property.\n    // - normally, elements using `:value` bindings will not be hoisted, but if\n    //   the bound value is a constant, e.g. `:value=\"true\"` - they do get\n    //   hoisted.\n    // - in production, hoisted nodes are cloned when subsequent inserts, but\n    //   cloneNode() does not copy the custom property we attached.\n    // - This may need to account for other custom DOM properties we attach to\n    //   elements in addition to `_value` in the future.\n\n    if (`_value` in el) {\n      cloned._value = el._value;\n    }\n\n    return cloned;\n  },\n\n  // __UNSAFE__\n  // Reason: innerHTML.\n  // Static content here can only come from compiled templates.\n  // As long as the user only uses trusted templates, this is safe.\n  insertStaticContent(content, parent, anchor, isSVG, start, end) {\n    // <parent> before | first ... last | anchor </parent>\n    const before = anchor ? anchor.previousSibling : parent.lastChild; // #5308 can only take cached path if:\n    // - has a single root node\n    // - nextSibling info is still available\n\n    if (start && (start === end || start.nextSibling)) {\n      // cached\n      while (true) {\n        parent.insertBefore(start.cloneNode(true), anchor);\n        if (start === end || !(start = start.nextSibling)) break;\n      }\n    } else {\n      // fresh insert\n      templateContainer.innerHTML = isSVG ? `<svg>${content}</svg>` : content;\n      const template = templateContainer.content;\n\n      if (isSVG) {\n        // remove outer svg wrapper\n        const wrapper = template.firstChild;\n\n        while (wrapper.firstChild) {\n          template.appendChild(wrapper.firstChild);\n        }\n\n        template.removeChild(wrapper);\n      }\n\n      parent.insertBefore(template, anchor);\n    }\n\n    return [// first\n    before ? before.nextSibling : parent.firstChild, // last\n    anchor ? anchor.previousSibling : parent.lastChild];\n  }\n\n}; // compiler should normalize class + :class bindings on the same element\n// into a single binding ['staticClass', dynamic]\n\nfunction patchClass(el, value, isSVG) {\n  // directly setting className should be faster than setAttribute in theory\n  // if this is an element during a transition, take the temporary transition\n  // classes into account.\n  const transitionClasses = el._vtc;\n\n  if (transitionClasses) {\n    value = (value ? [value, ...transitionClasses] : [...transitionClasses]).join(' ');\n  }\n\n  if (value == null) {\n    el.removeAttribute('class');\n  } else if (isSVG) {\n    el.setAttribute('class', value);\n  } else {\n    el.className = value;\n  }\n}\n\nfunction patchStyle(el, prev, next) {\n  const style = el.style;\n  const isCssString = shared_esm_bundler_isString(next);\n\n  if (next && !isCssString) {\n    for (const key in next) {\n      setStyle(style, key, next[key]);\n    }\n\n    if (prev && !shared_esm_bundler_isString(prev)) {\n      for (const key in prev) {\n        if (next[key] == null) {\n          setStyle(style, key, '');\n        }\n      }\n    }\n  } else {\n    const currentDisplay = style.display;\n\n    if (isCssString) {\n      if (prev !== next) {\n        style.cssText = next;\n      }\n    } else if (prev) {\n      el.removeAttribute('style');\n    } // indicates that the `display` of the element is controlled by `v-show`,\n    // so we always keep the current `display` value regardless of the `style`\n    // value, thus handing over control to `v-show`.\n\n\n    if ('_vod' in el) {\n      style.display = currentDisplay;\n    }\n  }\n}\n\nconst importantRE = /\\s*!important$/;\n\nfunction setStyle(style, name, val) {\n  if (shared_esm_bundler_isArray(val)) {\n    val.forEach(v => setStyle(style, name, v));\n  } else {\n    if (val == null) val = '';\n\n    if (name.startsWith('--')) {\n      // custom property definition\n      style.setProperty(name, val);\n    } else {\n      const prefixed = autoPrefix(style, name);\n\n      if (importantRE.test(val)) {\n        // !important\n        style.setProperty(shared_esm_bundler_hyphenate(prefixed), val.replace(importantRE, ''), 'important');\n      } else {\n        style[prefixed] = val;\n      }\n    }\n  }\n}\n\nconst prefixes = ['Webkit', 'Moz', 'ms'];\nconst prefixCache = {};\n\nfunction autoPrefix(style, rawName) {\n  const cached = prefixCache[rawName];\n\n  if (cached) {\n    return cached;\n  }\n\n  let name = camelize(rawName);\n\n  if (name !== 'filter' && name in style) {\n    return prefixCache[rawName] = name;\n  }\n\n  name = shared_esm_bundler_capitalize(name);\n\n  for (let i = 0; i < prefixes.length; i++) {\n    const prefixed = prefixes[i] + name;\n\n    if (prefixed in style) {\n      return prefixCache[rawName] = prefixed;\n    }\n  }\n\n  return rawName;\n}\n\nconst xlinkNS = 'http://www.w3.org/1999/xlink';\n\nfunction patchAttr(el, key, value, isSVG, instance) {\n  if (isSVG && key.startsWith('xlink:')) {\n    if (value == null) {\n      el.removeAttributeNS(xlinkNS, key.slice(6, key.length));\n    } else {\n      el.setAttributeNS(xlinkNS, key, value);\n    }\n  } else {\n    // note we are only checking boolean attributes that don't have a\n    // corresponding dom prop of the same name here.\n    const isBoolean = isSpecialBooleanAttr(key);\n\n    if (value == null || isBoolean && !includeBooleanAttr(value)) {\n      el.removeAttribute(key);\n    } else {\n      el.setAttribute(key, isBoolean ? '' : value);\n    }\n  }\n} // __UNSAFE__\n// functions. The user is responsible for using them with only trusted content.\n\n\nfunction patchDOMProp(el, key, value, // the following args are passed only due to potential innerHTML/textContent\n// overriding existing VNodes, in which case the old tree must be properly\n// unmounted.\nprevChildren, parentComponent, parentSuspense, unmountChildren) {\n  if (key === 'innerHTML' || key === 'textContent') {\n    if (prevChildren) {\n      unmountChildren(prevChildren, parentComponent, parentSuspense);\n    }\n\n    el[key] = value == null ? '' : value;\n    return;\n  }\n\n  if (key === 'value' && el.tagName !== 'PROGRESS' && // custom elements may use _value internally\n  !el.tagName.includes('-')) {\n    // store value as _value as well since\n    // non-string values will be stringified.\n    el._value = value;\n    const newValue = value == null ? '' : value;\n\n    if (el.value !== newValue || // #4956: always set for OPTION elements because its value falls back to\n    // textContent if no value attribute is present. And setting .value for\n    // OPTION has no side effect\n    el.tagName === 'OPTION') {\n      el.value = newValue;\n    }\n\n    if (value == null) {\n      el.removeAttribute(key);\n    }\n\n    return;\n  }\n\n  let needRemove = false;\n\n  if (value === '' || value == null) {\n    const type = typeof el[key];\n\n    if (type === 'boolean') {\n      // e.g. <select multiple> compiles to { multiple: '' }\n      value = includeBooleanAttr(value);\n    } else if (value == null && type === 'string') {\n      // e.g. <div :id=\"null\">\n      value = '';\n      needRemove = true;\n    } else if (type === 'number') {\n      // e.g. <img :width=\"null\">\n      // the value of some IDL attr must be greater than 0, e.g. input.size = 0 -> error\n      value = 0;\n      needRemove = true;\n    }\n  } // some properties perform value validation and throw,\n  // some properties has getter, no setter, will error in 'use strict'\n  // eg. <select :type=\"null\"></select> <select :willValidate=\"null\"></select>\n\n\n  try {\n    el[key] = value;\n  } catch (e) {\n    if (false) {}\n  }\n\n  needRemove && el.removeAttribute(key);\n} // Async edge case fix requires storing an event listener's attach timestamp.\n\n\nconst [_getNow, skipTimestampCheck] = /*#__PURE__*/(() => {\n  let _getNow = Date.now;\n  let skipTimestampCheck = false;\n\n  if (typeof window !== 'undefined') {\n    // Determine what event timestamp the browser is using. Annoyingly, the\n    // timestamp can either be hi-res (relative to page load) or low-res\n    // (relative to UNIX epoch), so in order to compare time we have to use the\n    // same timestamp type when saving the flush timestamp.\n    if (Date.now() > document.createEvent('Event').timeStamp) {\n      // if the low-res timestamp which is bigger than the event timestamp\n      // (which is evaluated AFTER) it means the event is using a hi-res timestamp,\n      // and we need to use the hi-res version for event listeners as well.\n      _getNow = () => performance.now();\n    } // #3485: Firefox <= 53 has incorrect Event.timeStamp implementation\n    // and does not fire microtasks in between event propagation, so safe to exclude.\n\n\n    const ffMatch = navigator.userAgent.match(/firefox\\/(\\d+)/i);\n    skipTimestampCheck = !!(ffMatch && Number(ffMatch[1]) <= 53);\n  }\n\n  return [_getNow, skipTimestampCheck];\n})(); // To avoid the overhead of repeatedly calling performance.now(), we cache\n// and use the same timestamp for all event listeners attached in the same tick.\n\n\nlet cachedNow = 0;\nconst p = /*#__PURE__*/Promise.resolve();\n\nconst runtime_dom_esm_bundler_reset = () => {\n  cachedNow = 0;\n};\n\nconst getNow = () => cachedNow || (p.then(runtime_dom_esm_bundler_reset), cachedNow = _getNow());\n\nfunction addEventListener(el, event, handler, options) {\n  el.addEventListener(event, handler, options);\n}\n\nfunction removeEventListener(el, event, handler, options) {\n  el.removeEventListener(event, handler, options);\n}\n\nfunction patchEvent(el, rawName, prevValue, nextValue, instance = null) {\n  // vei = vue event invokers\n  const invokers = el._vei || (el._vei = {});\n  const existingInvoker = invokers[rawName];\n\n  if (nextValue && existingInvoker) {\n    // patch\n    existingInvoker.value = nextValue;\n  } else {\n    const [name, options] = parseName(rawName);\n\n    if (nextValue) {\n      // add\n      const invoker = invokers[rawName] = createInvoker(nextValue, instance);\n      addEventListener(el, name, invoker, options);\n    } else if (existingInvoker) {\n      // remove\n      removeEventListener(el, name, existingInvoker, options);\n      invokers[rawName] = undefined;\n    }\n  }\n}\n\nconst optionsModifierRE = /(?:Once|Passive|Capture)$/;\n\nfunction parseName(name) {\n  let options;\n\n  if (optionsModifierRE.test(name)) {\n    options = {};\n    let m;\n\n    while (m = name.match(optionsModifierRE)) {\n      name = name.slice(0, name.length - m[0].length);\n      options[m[0].toLowerCase()] = true;\n    }\n  }\n\n  return [shared_esm_bundler_hyphenate(name.slice(2)), options];\n}\n\nfunction createInvoker(initialValue, instance) {\n  const invoker = e => {\n    // async edge case #6566: inner click event triggers patch, event handler\n    // attached to outer element during patch, and triggered again. This\n    // happens because browsers fire microtask ticks between event propagation.\n    // the solution is simple: we save the timestamp when a handler is attached,\n    // and the handler would only fire if the event passed to it was fired\n    // AFTER it was attached.\n    const timeStamp = e.timeStamp || _getNow();\n\n    if (skipTimestampCheck || timeStamp >= invoker.attached - 1) {\n      callWithAsyncErrorHandling(patchStopImmediatePropagation(e, invoker.value), instance, 5\n      /* NATIVE_EVENT_HANDLER */\n      , [e]);\n    }\n  };\n\n  invoker.value = initialValue;\n  invoker.attached = getNow();\n  return invoker;\n}\n\nfunction patchStopImmediatePropagation(e, value) {\n  if (shared_esm_bundler_isArray(value)) {\n    const originalStop = e.stopImmediatePropagation;\n\n    e.stopImmediatePropagation = () => {\n      originalStop.call(e);\n      e._stopped = true;\n    };\n\n    return value.map(fn => e => !e._stopped && fn && fn(e));\n  } else {\n    return value;\n  }\n}\n\nconst nativeOnRE = /^on[a-z]/;\n\nconst patchProp = (el, key, prevValue, nextValue, isSVG = false, prevChildren, parentComponent, parentSuspense, unmountChildren) => {\n  if (key === 'class') {\n    patchClass(el, nextValue, isSVG);\n  } else if (key === 'style') {\n    patchStyle(el, prevValue, nextValue);\n  } else if (isOn(key)) {\n    // ignore v-model listeners\n    if (!isModelListener(key)) {\n      patchEvent(el, key, prevValue, nextValue, parentComponent);\n    }\n  } else if (key[0] === '.' ? (key = key.slice(1), true) : key[0] === '^' ? (key = key.slice(1), false) : shouldSetAsProp(el, key, nextValue, isSVG)) {\n    patchDOMProp(el, key, nextValue, prevChildren, parentComponent, parentSuspense, unmountChildren);\n  } else {\n    // special case for <input v-model type=\"checkbox\"> with\n    // :true-value & :false-value\n    // store value as dom properties since non-string values will be\n    // stringified.\n    if (key === 'true-value') {\n      el._trueValue = nextValue;\n    } else if (key === 'false-value') {\n      el._falseValue = nextValue;\n    }\n\n    patchAttr(el, key, nextValue, isSVG);\n  }\n};\n\nfunction shouldSetAsProp(el, key, value, isSVG) {\n  if (isSVG) {\n    // most keys must be set as attribute on svg elements to work\n    // ...except innerHTML & textContent\n    if (key === 'innerHTML' || key === 'textContent') {\n      return true;\n    } // or native onclick with function values\n\n\n    if (key in el && nativeOnRE.test(key) && isFunction(value)) {\n      return true;\n    }\n\n    return false;\n  } // these are enumerated attrs, however their corresponding DOM properties\n  // are actually booleans - this leads to setting it with a string \"false\"\n  // value leading it to be coerced to `true`, so we need to always treat\n  // them as attributes.\n  // Note that `contentEditable` doesn't have this problem: its DOM\n  // property is also enumerated string values.\n\n\n  if (key === 'spellcheck' || key === 'draggable' || key === 'translate') {\n    return false;\n  } // #1787, #2840 form property on form elements is readonly and must be set as\n  // attribute.\n\n\n  if (key === 'form') {\n    return false;\n  } // #1526 <input list> must be set as attribute\n\n\n  if (key === 'list' && el.tagName === 'INPUT') {\n    return false;\n  } // #2766 <textarea type> must be set as attribute\n\n\n  if (key === 'type' && el.tagName === 'TEXTAREA') {\n    return false;\n  } // native onclick with string value, must be set as attribute\n\n\n  if (nativeOnRE.test(key) && shared_esm_bundler_isString(value)) {\n    return false;\n  }\n\n  return key in el;\n}\n\nfunction defineCustomElement(options, hydate) {\n  const Comp = defineComponent(options);\n\n  class VueCustomElement extends VueElement {\n    constructor(initialProps) {\n      super(Comp, initialProps, hydate);\n    }\n\n  }\n\n  VueCustomElement.def = Comp;\n  return VueCustomElement;\n}\n\nconst defineSSRCustomElement = options => {\n  // @ts-ignore\n  return defineCustomElement(options, hydrate);\n};\n\nconst BaseClass = typeof HTMLElement !== 'undefined' ? HTMLElement : class {};\n\nclass VueElement extends BaseClass {\n  constructor(_def, _props = {}, hydrate) {\n    super();\n    this._def = _def;\n    this._props = _props;\n    /**\r\n     * @internal\r\n     */\n\n    this._instance = null;\n    this._connected = false;\n    this._resolved = false;\n    this._numberProps = null;\n\n    if (this.shadowRoot && hydrate) {\n      hydrate(this._createVNode(), this.shadowRoot);\n    } else {\n      if (false) {}\n\n      this.attachShadow({\n        mode: 'open'\n      });\n    }\n  }\n\n  connectedCallback() {\n    this._connected = true;\n\n    if (!this._instance) {\n      this._resolveDef();\n    }\n  }\n\n  disconnectedCallback() {\n    this._connected = false;\n    nextTick(() => {\n      if (!this._connected) {\n        render(null, this.shadowRoot);\n        this._instance = null;\n      }\n    });\n  }\n  /**\r\n   * resolve inner component definition (handle possible async component)\r\n   */\n\n\n  _resolveDef() {\n    if (this._resolved) {\n      return;\n    }\n\n    this._resolved = true; // set initial attrs\n\n    for (let i = 0; i < this.attributes.length; i++) {\n      this._setAttr(this.attributes[i].name);\n    } // watch future attr changes\n\n\n    new MutationObserver(mutations => {\n      for (const m of mutations) {\n        this._setAttr(m.attributeName);\n      }\n    }).observe(this, {\n      attributes: true\n    });\n\n    const resolve = def => {\n      const {\n        props,\n        styles\n      } = def;\n      const hasOptions = !shared_esm_bundler_isArray(props);\n      const rawKeys = props ? hasOptions ? Object.keys(props) : props : []; // cast Number-type props set before resolve\n\n      let numberProps;\n\n      if (hasOptions) {\n        for (const key in this._props) {\n          const opt = props[key];\n\n          if (opt === Number || opt && opt.type === Number) {\n            this._props[key] = toNumber(this._props[key]);\n            (numberProps || (numberProps = Object.create(null)))[key] = true;\n          }\n        }\n      }\n\n      this._numberProps = numberProps; // check if there are props set pre-upgrade or connect\n\n      for (const key of Object.keys(this)) {\n        if (key[0] !== '_') {\n          this._setProp(key, this[key], true, false);\n        }\n      } // defining getter/setters on prototype\n\n\n      for (const key of rawKeys.map(camelize)) {\n        Object.defineProperty(this, key, {\n          get() {\n            return this._getProp(key);\n          },\n\n          set(val) {\n            this._setProp(key, val);\n          }\n\n        });\n      } // apply CSS\n\n\n      this._applyStyles(styles); // initial render\n\n\n      this._update();\n    };\n\n    const asyncDef = this._def.__asyncLoader;\n\n    if (asyncDef) {\n      asyncDef().then(resolve);\n    } else {\n      resolve(this._def);\n    }\n  }\n\n  _setAttr(key) {\n    let value = this.getAttribute(key);\n\n    if (this._numberProps && this._numberProps[key]) {\n      value = toNumber(value);\n    }\n\n    this._setProp(camelize(key), value, false);\n  }\n  /**\r\n   * @internal\r\n   */\n\n\n  _getProp(key) {\n    return this._props[key];\n  }\n  /**\r\n   * @internal\r\n   */\n\n\n  _setProp(key, val, shouldReflect = true, shouldUpdate = true) {\n    if (val !== this._props[key]) {\n      this._props[key] = val;\n\n      if (shouldUpdate && this._instance) {\n        this._update();\n      } // reflect\n\n\n      if (shouldReflect) {\n        if (val === true) {\n          this.setAttribute(shared_esm_bundler_hyphenate(key), '');\n        } else if (typeof val === 'string' || typeof val === 'number') {\n          this.setAttribute(shared_esm_bundler_hyphenate(key), val + '');\n        } else if (!val) {\n          this.removeAttribute(shared_esm_bundler_hyphenate(key));\n        }\n      }\n    }\n  }\n\n  _update() {\n    render(this._createVNode(), this.shadowRoot);\n  }\n\n  _createVNode() {\n    const vnode = createVNode(this._def, shared_esm_bundler_extend({}, this._props));\n\n    if (!this._instance) {\n      vnode.ce = instance => {\n        this._instance = instance;\n        instance.isCE = true; // HMR\n\n        if (false) {} // intercept emit\n\n\n        instance.emit = (event, ...args) => {\n          this.dispatchEvent(new CustomEvent(event, {\n            detail: args\n          }));\n        }; // locate nearest Vue custom element parent for provide/inject\n\n\n        let parent = this;\n\n        while (parent = parent && (parent.parentNode || parent.host)) {\n          if (parent instanceof VueElement) {\n            instance.parent = parent._instance;\n            break;\n          }\n        }\n      };\n    }\n\n    return vnode;\n  }\n\n  _applyStyles(styles) {\n    if (styles) {\n      styles.forEach(css => {\n        const s = document.createElement('style');\n        s.textContent = css;\n        this.shadowRoot.appendChild(s); // record for HMR\n\n        if (false) {}\n      });\n    }\n  }\n\n}\n\nfunction useCssModule(name = '$style') {\n  /* istanbul ignore else */\n  {\n    const instance = getCurrentInstance();\n\n    if (!instance) {\n       false && 0;\n      return EMPTY_OBJ;\n    }\n\n    const modules = instance.type.__cssModules;\n\n    if (!modules) {\n       false && 0;\n      return EMPTY_OBJ;\n    }\n\n    const mod = modules[name];\n\n    if (!mod) {\n       false && 0;\n      return EMPTY_OBJ;\n    }\n\n    return mod;\n  }\n}\n/**\r\n * Runtime helper for SFC's CSS variable injection feature.\r\n * @private\r\n */\n\n\nfunction useCssVars(getter) {\n  const instance = getCurrentInstance();\n  /* istanbul ignore next */\n\n  if (!instance) {\n     false && 0;\n    return;\n  }\n\n  const setVars = () => setVarsOnVNode(instance.subTree, getter(instance.proxy));\n\n  watchPostEffect(setVars);\n  onMounted(() => {\n    const ob = new MutationObserver(setVars);\n    ob.observe(instance.subTree.el.parentNode, {\n      childList: true\n    });\n    onUnmounted(() => ob.disconnect());\n  });\n}\n\nfunction setVarsOnVNode(vnode, vars) {\n  if (vnode.shapeFlag & 128\n  /* SUSPENSE */\n  ) {\n    const suspense = vnode.suspense;\n    vnode = suspense.activeBranch;\n\n    if (suspense.pendingBranch && !suspense.isHydrating) {\n      suspense.effects.push(() => {\n        setVarsOnVNode(suspense.activeBranch, vars);\n      });\n    }\n  } // drill down HOCs until it's a non-component vnode\n\n\n  while (vnode.component) {\n    vnode = vnode.component.subTree;\n  }\n\n  if (vnode.shapeFlag & 1\n  /* ELEMENT */\n  && vnode.el) {\n    setVarsOnNode(vnode.el, vars);\n  } else if (vnode.type === Fragment) {\n    vnode.children.forEach(c => setVarsOnVNode(c, vars));\n  } else if (vnode.type === Static) {\n    let {\n      el,\n      anchor\n    } = vnode;\n\n    while (el) {\n      setVarsOnNode(el, vars);\n      if (el === anchor) break;\n      el = el.nextSibling;\n    }\n  }\n}\n\nfunction setVarsOnNode(el, vars) {\n  if (el.nodeType === 1) {\n    const style = el.style;\n\n    for (const key in vars) {\n      style.setProperty(`--${key}`, vars[key]);\n    }\n  }\n}\n\nconst TRANSITION = 'transition';\nconst ANIMATION = 'animation'; // DOM Transition is a higher-order-component based on the platform-agnostic\n// base Transition component, with DOM-specific logic.\n\nconst Transition = (props, {\n  slots\n}) => h(BaseTransition, resolveTransitionProps(props), slots);\n\nTransition.displayName = 'Transition';\nconst DOMTransitionPropsValidators = {\n  name: String,\n  type: String,\n  css: {\n    type: Boolean,\n    default: true\n  },\n  duration: [String, Number, Object],\n  enterFromClass: String,\n  enterActiveClass: String,\n  enterToClass: String,\n  appearFromClass: String,\n  appearActiveClass: String,\n  appearToClass: String,\n  leaveFromClass: String,\n  leaveActiveClass: String,\n  leaveToClass: String\n};\nconst TransitionPropsValidators = Transition.props = /*#__PURE__*/shared_esm_bundler_extend({}, BaseTransition.props, DOMTransitionPropsValidators);\n/**\r\n * #3227 Incoming hooks may be merged into arrays when wrapping Transition\r\n * with custom HOCs.\r\n */\n\nconst runtime_dom_esm_bundler_callHook = (hook, args = []) => {\n  if (shared_esm_bundler_isArray(hook)) {\n    hook.forEach(h => h(...args));\n  } else if (hook) {\n    hook(...args);\n  }\n};\n/**\r\n * Check if a hook expects a callback (2nd arg), which means the user\r\n * intends to explicitly control the end of the transition.\r\n */\n\n\nconst hasExplicitCallback = hook => {\n  return hook ? shared_esm_bundler_isArray(hook) ? hook.some(h => h.length > 1) : hook.length > 1 : false;\n};\n\nfunction resolveTransitionProps(rawProps) {\n  const baseProps = {};\n\n  for (const key in rawProps) {\n    if (!(key in DOMTransitionPropsValidators)) {\n      baseProps[key] = rawProps[key];\n    }\n  }\n\n  if (rawProps.css === false) {\n    return baseProps;\n  }\n\n  const {\n    name = 'v',\n    type,\n    duration,\n    enterFromClass = `${name}-enter-from`,\n    enterActiveClass = `${name}-enter-active`,\n    enterToClass = `${name}-enter-to`,\n    appearFromClass = enterFromClass,\n    appearActiveClass = enterActiveClass,\n    appearToClass = enterToClass,\n    leaveFromClass = `${name}-leave-from`,\n    leaveActiveClass = `${name}-leave-active`,\n    leaveToClass = `${name}-leave-to`\n  } = rawProps;\n  const durations = normalizeDuration(duration);\n  const enterDuration = durations && durations[0];\n  const leaveDuration = durations && durations[1];\n  const {\n    onBeforeEnter,\n    onEnter,\n    onEnterCancelled,\n    onLeave,\n    onLeaveCancelled,\n    onBeforeAppear = onBeforeEnter,\n    onAppear = onEnter,\n    onAppearCancelled = onEnterCancelled\n  } = baseProps;\n\n  const finishEnter = (el, isAppear, done) => {\n    removeTransitionClass(el, isAppear ? appearToClass : enterToClass);\n    removeTransitionClass(el, isAppear ? appearActiveClass : enterActiveClass);\n    done && done();\n  };\n\n  const finishLeave = (el, done) => {\n    removeTransitionClass(el, leaveToClass);\n    removeTransitionClass(el, leaveActiveClass);\n    done && done();\n  };\n\n  const makeEnterHook = isAppear => {\n    return (el, done) => {\n      const hook = isAppear ? onAppear : onEnter;\n\n      const resolve = () => finishEnter(el, isAppear, done);\n\n      runtime_dom_esm_bundler_callHook(hook, [el, resolve]);\n      nextFrame(() => {\n        removeTransitionClass(el, isAppear ? appearFromClass : enterFromClass);\n        addTransitionClass(el, isAppear ? appearToClass : enterToClass);\n\n        if (!hasExplicitCallback(hook)) {\n          whenTransitionEnds(el, type, enterDuration, resolve);\n        }\n      });\n    };\n  };\n\n  return shared_esm_bundler_extend(baseProps, {\n    onBeforeEnter(el) {\n      runtime_dom_esm_bundler_callHook(onBeforeEnter, [el]);\n      addTransitionClass(el, enterFromClass);\n      addTransitionClass(el, enterActiveClass);\n    },\n\n    onBeforeAppear(el) {\n      runtime_dom_esm_bundler_callHook(onBeforeAppear, [el]);\n      addTransitionClass(el, appearFromClass);\n      addTransitionClass(el, appearActiveClass);\n    },\n\n    onEnter: makeEnterHook(false),\n    onAppear: makeEnterHook(true),\n\n    onLeave(el, done) {\n      const resolve = () => finishLeave(el, done);\n\n      addTransitionClass(el, leaveFromClass); // force reflow so *-leave-from classes immediately take effect (#2593)\n\n      forceReflow();\n      addTransitionClass(el, leaveActiveClass);\n      nextFrame(() => {\n        removeTransitionClass(el, leaveFromClass);\n        addTransitionClass(el, leaveToClass);\n\n        if (!hasExplicitCallback(onLeave)) {\n          whenTransitionEnds(el, type, leaveDuration, resolve);\n        }\n      });\n      runtime_dom_esm_bundler_callHook(onLeave, [el, resolve]);\n    },\n\n    onEnterCancelled(el) {\n      finishEnter(el, false);\n      runtime_dom_esm_bundler_callHook(onEnterCancelled, [el]);\n    },\n\n    onAppearCancelled(el) {\n      finishEnter(el, true);\n      runtime_dom_esm_bundler_callHook(onAppearCancelled, [el]);\n    },\n\n    onLeaveCancelled(el) {\n      finishLeave(el);\n      runtime_dom_esm_bundler_callHook(onLeaveCancelled, [el]);\n    }\n\n  });\n}\n\nfunction normalizeDuration(duration) {\n  if (duration == null) {\n    return null;\n  } else if (shared_esm_bundler_isObject(duration)) {\n    return [NumberOf(duration.enter), NumberOf(duration.leave)];\n  } else {\n    const n = NumberOf(duration);\n    return [n, n];\n  }\n}\n\nfunction NumberOf(val) {\n  const res = toNumber(val);\n  if (false) {}\n  return res;\n}\n\nfunction validateDuration(val) {\n  if (typeof val !== 'number') {\n    warn(`<transition> explicit duration is not a valid number - ` + `got ${JSON.stringify(val)}.`);\n  } else if (isNaN(val)) {\n    warn(`<transition> explicit duration is NaN - ` + 'the duration expression might be incorrect.');\n  }\n}\n\nfunction addTransitionClass(el, cls) {\n  cls.split(/\\s+/).forEach(c => c && el.classList.add(c));\n  (el._vtc || (el._vtc = new Set())).add(cls);\n}\n\nfunction removeTransitionClass(el, cls) {\n  cls.split(/\\s+/).forEach(c => c && el.classList.remove(c));\n  const {\n    _vtc\n  } = el;\n\n  if (_vtc) {\n    _vtc.delete(cls);\n\n    if (!_vtc.size) {\n      el._vtc = undefined;\n    }\n  }\n}\n\nfunction nextFrame(cb) {\n  requestAnimationFrame(() => {\n    requestAnimationFrame(cb);\n  });\n}\n\nlet endId = 0;\n\nfunction whenTransitionEnds(el, expectedType, explicitTimeout, resolve) {\n  const id = el._endId = ++endId;\n\n  const resolveIfNotStale = () => {\n    if (id === el._endId) {\n      resolve();\n    }\n  };\n\n  if (explicitTimeout) {\n    return setTimeout(resolveIfNotStale, explicitTimeout);\n  }\n\n  const {\n    type,\n    timeout,\n    propCount\n  } = getTransitionInfo(el, expectedType);\n\n  if (!type) {\n    return resolve();\n  }\n\n  const endEvent = type + 'end';\n  let ended = 0;\n\n  const end = () => {\n    el.removeEventListener(endEvent, onEnd);\n    resolveIfNotStale();\n  };\n\n  const onEnd = e => {\n    if (e.target === el && ++ended >= propCount) {\n      end();\n    }\n  };\n\n  setTimeout(() => {\n    if (ended < propCount) {\n      end();\n    }\n  }, timeout + 1);\n  el.addEventListener(endEvent, onEnd);\n}\n\nfunction getTransitionInfo(el, expectedType) {\n  const styles = window.getComputedStyle(el); // JSDOM may return undefined for transition properties\n\n  const getStyleProperties = key => (styles[key] || '').split(', ');\n\n  const transitionDelays = getStyleProperties(TRANSITION + 'Delay');\n  const transitionDurations = getStyleProperties(TRANSITION + 'Duration');\n  const transitionTimeout = getTimeout(transitionDelays, transitionDurations);\n  const animationDelays = getStyleProperties(ANIMATION + 'Delay');\n  const animationDurations = getStyleProperties(ANIMATION + 'Duration');\n  const animationTimeout = getTimeout(animationDelays, animationDurations);\n  let type = null;\n  let timeout = 0;\n  let propCount = 0;\n  /* istanbul ignore if */\n\n  if (expectedType === TRANSITION) {\n    if (transitionTimeout > 0) {\n      type = TRANSITION;\n      timeout = transitionTimeout;\n      propCount = transitionDurations.length;\n    }\n  } else if (expectedType === ANIMATION) {\n    if (animationTimeout > 0) {\n      type = ANIMATION;\n      timeout = animationTimeout;\n      propCount = animationDurations.length;\n    }\n  } else {\n    timeout = Math.max(transitionTimeout, animationTimeout);\n    type = timeout > 0 ? transitionTimeout > animationTimeout ? TRANSITION : ANIMATION : null;\n    propCount = type ? type === TRANSITION ? transitionDurations.length : animationDurations.length : 0;\n  }\n\n  const hasTransform = type === TRANSITION && /\\b(transform|all)(,|$)/.test(styles[TRANSITION + 'Property']);\n  return {\n    type,\n    timeout,\n    propCount,\n    hasTransform\n  };\n}\n\nfunction getTimeout(delays, durations) {\n  while (delays.length < durations.length) {\n    delays = delays.concat(delays);\n  }\n\n  return Math.max(...durations.map((d, i) => toMs(d) + toMs(delays[i])));\n} // Old versions of Chromium (below 61.0.3163.100) formats floating pointer\n// numbers in a locale-dependent way, using a comma instead of a dot.\n// If comma is not replaced with a dot, the input will be rounded down\n// (i.e. acting as a floor function) causing unexpected behaviors\n\n\nfunction toMs(s) {\n  return Number(s.slice(0, -1).replace(',', '.')) * 1000;\n} // synchronously force layout to put elements into a certain state\n\n\nfunction forceReflow() {\n  return document.body.offsetHeight;\n}\n\nconst positionMap = new WeakMap();\nconst newPositionMap = new WeakMap();\nconst TransitionGroupImpl = {\n  name: 'TransitionGroup',\n  props: /*#__PURE__*/shared_esm_bundler_extend({}, TransitionPropsValidators, {\n    tag: String,\n    moveClass: String\n  }),\n\n  setup(props, {\n    slots\n  }) {\n    const instance = getCurrentInstance();\n    const state = useTransitionState();\n    let prevChildren;\n    let children;\n    onUpdated(() => {\n      // children is guaranteed to exist after initial render\n      if (!prevChildren.length) {\n        return;\n      }\n\n      const moveClass = props.moveClass || `${props.name || 'v'}-move`;\n\n      if (!hasCSSTransform(prevChildren[0].el, instance.vnode.el, moveClass)) {\n        return;\n      } // we divide the work into three loops to avoid mixing DOM reads and writes\n      // in each iteration - which helps prevent layout thrashing.\n\n\n      prevChildren.forEach(callPendingCbs);\n      prevChildren.forEach(recordPosition);\n      const movedChildren = prevChildren.filter(applyTranslation); // force reflow to put everything in position\n\n      forceReflow();\n      movedChildren.forEach(c => {\n        const el = c.el;\n        const style = el.style;\n        addTransitionClass(el, moveClass);\n        style.transform = style.webkitTransform = style.transitionDuration = '';\n\n        const cb = el._moveCb = e => {\n          if (e && e.target !== el) {\n            return;\n          }\n\n          if (!e || /transform$/.test(e.propertyName)) {\n            el.removeEventListener('transitionend', cb);\n            el._moveCb = null;\n            removeTransitionClass(el, moveClass);\n          }\n        };\n\n        el.addEventListener('transitionend', cb);\n      });\n    });\n    return () => {\n      const rawProps = reactivity_esm_bundler_toRaw(props);\n      const cssTransitionProps = resolveTransitionProps(rawProps);\n      let tag = rawProps.tag || Fragment;\n      prevChildren = children;\n      children = slots.default ? getTransitionRawChildren(slots.default()) : [];\n\n      for (let i = 0; i < children.length; i++) {\n        const child = children[i];\n\n        if (child.key != null) {\n          setTransitionHooks(child, resolveTransitionHooks(child, cssTransitionProps, state, instance));\n        } else if (false) {}\n      }\n\n      if (prevChildren) {\n        for (let i = 0; i < prevChildren.length; i++) {\n          const child = prevChildren[i];\n          setTransitionHooks(child, resolveTransitionHooks(child, cssTransitionProps, state, instance));\n          positionMap.set(child, child.el.getBoundingClientRect());\n        }\n      }\n\n      return createVNode(tag, null, children);\n    };\n  }\n\n};\nconst TransitionGroup = TransitionGroupImpl;\n\nfunction callPendingCbs(c) {\n  const el = c.el;\n\n  if (el._moveCb) {\n    el._moveCb();\n  }\n\n  if (el._enterCb) {\n    el._enterCb();\n  }\n}\n\nfunction recordPosition(c) {\n  newPositionMap.set(c, c.el.getBoundingClientRect());\n}\n\nfunction applyTranslation(c) {\n  const oldPos = positionMap.get(c);\n  const newPos = newPositionMap.get(c);\n  const dx = oldPos.left - newPos.left;\n  const dy = oldPos.top - newPos.top;\n\n  if (dx || dy) {\n    const s = c.el.style;\n    s.transform = s.webkitTransform = `translate(${dx}px,${dy}px)`;\n    s.transitionDuration = '0s';\n    return c;\n  }\n}\n\nfunction hasCSSTransform(el, root, moveClass) {\n  // Detect whether an element with the move class applied has\n  // CSS transitions. Since the element may be inside an entering\n  // transition at this very moment, we make a clone of it and remove\n  // all other transition classes applied to ensure only the move class\n  // is applied.\n  const clone = el.cloneNode();\n\n  if (el._vtc) {\n    el._vtc.forEach(cls => {\n      cls.split(/\\s+/).forEach(c => c && clone.classList.remove(c));\n    });\n  }\n\n  moveClass.split(/\\s+/).forEach(c => c && clone.classList.add(c));\n  clone.style.display = 'none';\n  const container = root.nodeType === 1 ? root : root.parentNode;\n  container.appendChild(clone);\n  const {\n    hasTransform\n  } = getTransitionInfo(clone);\n  container.removeChild(clone);\n  return hasTransform;\n}\n\nconst getModelAssigner = vnode => {\n  const fn = vnode.props['onUpdate:modelValue'];\n  return shared_esm_bundler_isArray(fn) ? value => invokeArrayFns(fn, value) : fn;\n};\n\nfunction onCompositionStart(e) {\n  e.target.composing = true;\n}\n\nfunction onCompositionEnd(e) {\n  const target = e.target;\n\n  if (target.composing) {\n    target.composing = false;\n    runtime_dom_esm_bundler_trigger(target, 'input');\n  }\n}\n\nfunction runtime_dom_esm_bundler_trigger(el, type) {\n  const e = document.createEvent('HTMLEvents');\n  e.initEvent(type, true, true);\n  el.dispatchEvent(e);\n} // We are exporting the v-model runtime directly as vnode hooks so that it can\n// be tree-shaken in case v-model is never used.\n\n\nconst vModelText = {\n  created(el, {\n    modifiers: {\n      lazy,\n      trim,\n      number\n    }\n  }, vnode) {\n    el._assign = getModelAssigner(vnode);\n    const castToNumber = number || vnode.props && vnode.props.type === 'number';\n    addEventListener(el, lazy ? 'change' : 'input', e => {\n      if (e.target.composing) return;\n      let domValue = el.value;\n\n      if (trim) {\n        domValue = domValue.trim();\n      } else if (castToNumber) {\n        domValue = toNumber(domValue);\n      }\n\n      el._assign(domValue);\n    });\n\n    if (trim) {\n      addEventListener(el, 'change', () => {\n        el.value = el.value.trim();\n      });\n    }\n\n    if (!lazy) {\n      addEventListener(el, 'compositionstart', onCompositionStart);\n      addEventListener(el, 'compositionend', onCompositionEnd); // Safari < 10.2 & UIWebView doesn't fire compositionend when\n      // switching focus before confirming composition choice\n      // this also fixes the issue where some browsers e.g. iOS Chrome\n      // fires \"change\" instead of \"input\" on autocomplete.\n\n      addEventListener(el, 'change', onCompositionEnd);\n    }\n  },\n\n  // set value on mounted so it's after min/max for type=\"range\"\n  mounted(el, {\n    value\n  }) {\n    el.value = value == null ? '' : value;\n  },\n\n  beforeUpdate(el, {\n    value,\n    modifiers: {\n      lazy,\n      trim,\n      number\n    }\n  }, vnode) {\n    el._assign = getModelAssigner(vnode); // avoid clearing unresolved text. #2302\n\n    if (el.composing) return;\n\n    if (document.activeElement === el) {\n      if (lazy) {\n        return;\n      }\n\n      if (trim && el.value.trim() === value) {\n        return;\n      }\n\n      if ((number || el.type === 'number') && toNumber(el.value) === value) {\n        return;\n      }\n    }\n\n    const newValue = value == null ? '' : value;\n\n    if (el.value !== newValue) {\n      el.value = newValue;\n    }\n  }\n\n};\nconst vModelCheckbox = {\n  // #4096 array checkboxes need to be deep traversed\n  deep: true,\n\n  created(el, _, vnode) {\n    el._assign = getModelAssigner(vnode);\n    addEventListener(el, 'change', () => {\n      const modelValue = el._modelValue;\n      const elementValue = getValue(el);\n      const checked = el.checked;\n      const assign = el._assign;\n\n      if (shared_esm_bundler_isArray(modelValue)) {\n        const index = looseIndexOf(modelValue, elementValue);\n        const found = index !== -1;\n\n        if (checked && !found) {\n          assign(modelValue.concat(elementValue));\n        } else if (!checked && found) {\n          const filtered = [...modelValue];\n          filtered.splice(index, 1);\n          assign(filtered);\n        }\n      } else if (isSet(modelValue)) {\n        const cloned = new Set(modelValue);\n\n        if (checked) {\n          cloned.add(elementValue);\n        } else {\n          cloned.delete(elementValue);\n        }\n\n        assign(cloned);\n      } else {\n        assign(getCheckboxValue(el, checked));\n      }\n    });\n  },\n\n  // set initial checked on mount to wait for true-value/false-value\n  mounted: setChecked,\n\n  beforeUpdate(el, binding, vnode) {\n    el._assign = getModelAssigner(vnode);\n    setChecked(el, binding, vnode);\n  }\n\n};\n\nfunction setChecked(el, {\n  value,\n  oldValue\n}, vnode) {\n  el._modelValue = value;\n\n  if (shared_esm_bundler_isArray(value)) {\n    el.checked = looseIndexOf(value, vnode.props.value) > -1;\n  } else if (isSet(value)) {\n    el.checked = value.has(vnode.props.value);\n  } else if (value !== oldValue) {\n    el.checked = looseEqual(value, getCheckboxValue(el, true));\n  }\n}\n\nconst vModelRadio = {\n  created(el, {\n    value\n  }, vnode) {\n    el.checked = looseEqual(value, vnode.props.value);\n    el._assign = getModelAssigner(vnode);\n    addEventListener(el, 'change', () => {\n      el._assign(getValue(el));\n    });\n  },\n\n  beforeUpdate(el, {\n    value,\n    oldValue\n  }, vnode) {\n    el._assign = getModelAssigner(vnode);\n\n    if (value !== oldValue) {\n      el.checked = looseEqual(value, vnode.props.value);\n    }\n  }\n\n};\nconst vModelSelect = {\n  // <select multiple> value need to be deep traversed\n  deep: true,\n\n  created(el, {\n    value,\n    modifiers: {\n      number\n    }\n  }, vnode) {\n    const isSetModel = isSet(value);\n    addEventListener(el, 'change', () => {\n      const selectedVal = Array.prototype.filter.call(el.options, o => o.selected).map(o => number ? toNumber(getValue(o)) : getValue(o));\n\n      el._assign(el.multiple ? isSetModel ? new Set(selectedVal) : selectedVal : selectedVal[0]);\n    });\n    el._assign = getModelAssigner(vnode);\n  },\n\n  // set value in mounted & updated because <select> relies on its children\n  // <option>s.\n  mounted(el, {\n    value\n  }) {\n    setSelected(el, value);\n  },\n\n  beforeUpdate(el, _binding, vnode) {\n    el._assign = getModelAssigner(vnode);\n  },\n\n  updated(el, {\n    value\n  }) {\n    setSelected(el, value);\n  }\n\n};\n\nfunction setSelected(el, value) {\n  const isMultiple = el.multiple;\n\n  if (isMultiple && !shared_esm_bundler_isArray(value) && !isSet(value)) {\n     false && 0;\n    return;\n  }\n\n  for (let i = 0, l = el.options.length; i < l; i++) {\n    const option = el.options[i];\n    const optionValue = getValue(option);\n\n    if (isMultiple) {\n      if (shared_esm_bundler_isArray(value)) {\n        option.selected = looseIndexOf(value, optionValue) > -1;\n      } else {\n        option.selected = value.has(optionValue);\n      }\n    } else {\n      if (looseEqual(getValue(option), value)) {\n        if (el.selectedIndex !== i) el.selectedIndex = i;\n        return;\n      }\n    }\n  }\n\n  if (!isMultiple && el.selectedIndex !== -1) {\n    el.selectedIndex = -1;\n  }\n} // retrieve raw value set via :value bindings\n\n\nfunction getValue(el) {\n  return '_value' in el ? el._value : el.value;\n} // retrieve raw value for true-value and false-value set via :true-value or :false-value bindings\n\n\nfunction getCheckboxValue(el, checked) {\n  const key = checked ? '_trueValue' : '_falseValue';\n  return key in el ? el[key] : checked;\n}\n\nconst vModelDynamic = {\n  created(el, binding, vnode) {\n    callModelHook(el, binding, vnode, null, 'created');\n  },\n\n  mounted(el, binding, vnode) {\n    callModelHook(el, binding, vnode, null, 'mounted');\n  },\n\n  beforeUpdate(el, binding, vnode, prevVNode) {\n    callModelHook(el, binding, vnode, prevVNode, 'beforeUpdate');\n  },\n\n  updated(el, binding, vnode, prevVNode) {\n    callModelHook(el, binding, vnode, prevVNode, 'updated');\n  }\n\n};\n\nfunction callModelHook(el, binding, vnode, prevVNode, hook) {\n  let modelToUse;\n\n  switch (el.tagName) {\n    case 'SELECT':\n      modelToUse = vModelSelect;\n      break;\n\n    case 'TEXTAREA':\n      modelToUse = vModelText;\n      break;\n\n    default:\n      switch (vnode.props && vnode.props.type) {\n        case 'checkbox':\n          modelToUse = vModelCheckbox;\n          break;\n\n        case 'radio':\n          modelToUse = vModelRadio;\n          break;\n\n        default:\n          modelToUse = vModelText;\n      }\n\n  }\n\n  const fn = modelToUse[hook];\n  fn && fn(el, binding, vnode, prevVNode);\n} // SSR vnode transforms, only used when user includes client-oriented render\n// function in SSR\n\n\nfunction initVModelForSSR() {\n  vModelText.getSSRProps = ({\n    value\n  }) => ({\n    value\n  });\n\n  vModelRadio.getSSRProps = ({\n    value\n  }, vnode) => {\n    if (vnode.props && looseEqual(vnode.props.value, value)) {\n      return {\n        checked: true\n      };\n    }\n  };\n\n  vModelCheckbox.getSSRProps = ({\n    value\n  }, vnode) => {\n    if (shared_esm_bundler_isArray(value)) {\n      if (vnode.props && looseIndexOf(value, vnode.props.value) > -1) {\n        return {\n          checked: true\n        };\n      }\n    } else if (isSet(value)) {\n      if (vnode.props && value.has(vnode.props.value)) {\n        return {\n          checked: true\n        };\n      }\n    } else if (value) {\n      return {\n        checked: true\n      };\n    }\n  };\n}\n\nconst systemModifiers = ['ctrl', 'shift', 'alt', 'meta'];\nconst modifierGuards = {\n  stop: e => e.stopPropagation(),\n  prevent: e => e.preventDefault(),\n  self: e => e.target !== e.currentTarget,\n  ctrl: e => !e.ctrlKey,\n  shift: e => !e.shiftKey,\n  alt: e => !e.altKey,\n  meta: e => !e.metaKey,\n  left: e => 'button' in e && e.button !== 0,\n  middle: e => 'button' in e && e.button !== 1,\n  right: e => 'button' in e && e.button !== 2,\n  exact: (e, modifiers) => systemModifiers.some(m => e[`${m}Key`] && !modifiers.includes(m))\n};\n/**\r\n * @private\r\n */\n\nconst withModifiers = (fn, modifiers) => {\n  return (event, ...args) => {\n    for (let i = 0; i < modifiers.length; i++) {\n      const guard = modifierGuards[modifiers[i]];\n      if (guard && guard(event, modifiers)) return;\n    }\n\n    return fn(event, ...args);\n  };\n}; // Kept for 2.x compat.\n// Note: IE11 compat for `spacebar` and `del` is removed for now.\n\n\nconst keyNames = {\n  esc: 'escape',\n  space: ' ',\n  up: 'arrow-up',\n  left: 'arrow-left',\n  right: 'arrow-right',\n  down: 'arrow-down',\n  delete: 'backspace'\n};\n/**\r\n * @private\r\n */\n\nconst withKeys = (fn, modifiers) => {\n  return event => {\n    if (!('key' in event)) {\n      return;\n    }\n\n    const eventKey = shared_esm_bundler_hyphenate(event.key);\n\n    if (modifiers.some(k => k === eventKey || keyNames[k] === eventKey)) {\n      return fn(event);\n    }\n  };\n};\n\nconst vShow = {\n  beforeMount(el, {\n    value\n  }, {\n    transition\n  }) {\n    el._vod = el.style.display === 'none' ? '' : el.style.display;\n\n    if (transition && value) {\n      transition.beforeEnter(el);\n    } else {\n      setDisplay(el, value);\n    }\n  },\n\n  mounted(el, {\n    value\n  }, {\n    transition\n  }) {\n    if (transition && value) {\n      transition.enter(el);\n    }\n  },\n\n  updated(el, {\n    value,\n    oldValue\n  }, {\n    transition\n  }) {\n    if (!value === !oldValue) return;\n\n    if (transition) {\n      if (value) {\n        transition.beforeEnter(el);\n        setDisplay(el, true);\n        transition.enter(el);\n      } else {\n        transition.leave(el, () => {\n          setDisplay(el, false);\n        });\n      }\n    } else {\n      setDisplay(el, value);\n    }\n  },\n\n  beforeUnmount(el, {\n    value\n  }) {\n    setDisplay(el, value);\n  }\n\n};\n\nfunction setDisplay(el, value) {\n  el.style.display = value ? el._vod : 'none';\n} // SSR vnode transforms, only used when user includes client-oriented render\n// function in SSR\n\n\nfunction initVShowForSSR() {\n  vShow.getSSRProps = ({\n    value\n  }) => {\n    if (!value) {\n      return {\n        style: {\n          display: 'none'\n        }\n      };\n    }\n  };\n}\n\nconst rendererOptions = /*#__PURE__*/shared_esm_bundler_extend({\n  patchProp\n}, nodeOps); // lazy create the renderer - this makes core renderer logic tree-shakable\n// in case the user only imports reactivity utilities from Vue.\n\nlet renderer;\nlet enabledHydration = false;\n\nfunction ensureRenderer() {\n  return renderer || (renderer = createRenderer(rendererOptions));\n}\n\nfunction ensureHydrationRenderer() {\n  renderer = enabledHydration ? renderer : createHydrationRenderer(rendererOptions);\n  enabledHydration = true;\n  return renderer;\n} // use explicit type casts here to avoid import() calls in rolled-up d.ts\n\n\nconst render = (...args) => {\n  ensureRenderer().render(...args);\n};\n\nconst hydrate = (...args) => {\n  ensureHydrationRenderer().hydrate(...args);\n};\n\nconst createApp = (...args) => {\n  const app = ensureRenderer().createApp(...args);\n\n  if (false) {}\n\n  const {\n    mount\n  } = app;\n\n  app.mount = containerOrSelector => {\n    const container = normalizeContainer(containerOrSelector);\n    if (!container) return;\n    const component = app._component;\n\n    if (!isFunction(component) && !component.render && !component.template) {\n      // __UNSAFE__\n      // Reason: potential execution of JS expressions in in-DOM template.\n      // The user must make sure the in-DOM template is trusted. If it's\n      // rendered by the server, the template should not contain any user data.\n      component.template = container.innerHTML;\n    } // clear content before mounting\n\n\n    container.innerHTML = '';\n    const proxy = mount(container, false, container instanceof SVGElement);\n\n    if (container instanceof Element) {\n      container.removeAttribute('v-cloak');\n      container.setAttribute('data-v-app', '');\n    }\n\n    return proxy;\n  };\n\n  return app;\n};\n\nconst createSSRApp = (...args) => {\n  const app = ensureHydrationRenderer().createApp(...args);\n\n  if (false) {}\n\n  const {\n    mount\n  } = app;\n\n  app.mount = containerOrSelector => {\n    const container = normalizeContainer(containerOrSelector);\n\n    if (container) {\n      return mount(container, true, container instanceof SVGElement);\n    }\n  };\n\n  return app;\n};\n\nfunction injectNativeTagCheck(app) {\n  // Inject `isNativeTag`\n  // this is used for component name validation (dev only)\n  Object.defineProperty(app.config, 'isNativeTag', {\n    value: tag => isHTMLTag(tag) || isSVGTag(tag),\n    writable: false\n  });\n} // dev only\n\n\nfunction injectCompilerOptionsCheck(app) {\n  if (isRuntimeOnly()) {\n    const isCustomElement = app.config.isCustomElement;\n    Object.defineProperty(app.config, 'isCustomElement', {\n      get() {\n        return isCustomElement;\n      },\n\n      set() {\n        warn(`The \\`isCustomElement\\` config option is deprecated. Use ` + `\\`compilerOptions.isCustomElement\\` instead.`);\n      }\n\n    });\n    const compilerOptions = app.config.compilerOptions;\n    const msg = `The \\`compilerOptions\\` config option is only respected when using ` + `a build of Vue.js that includes the runtime compiler (aka \"full build\"). ` + `Since you are using the runtime-only build, \\`compilerOptions\\` ` + `must be passed to \\`@vue/compiler-dom\\` in the build setup instead.\\n` + `- For vue-loader: pass it via vue-loader's \\`compilerOptions\\` loader option.\\n` + `- For vue-cli: see https://cli.vuejs.org/guide/webpack.html#modifying-options-of-a-loader\\n` + `- For vite: pass it via @vitejs/plugin-vue options. See https://github.com/vitejs/vite/tree/main/packages/plugin-vue#example-for-passing-options-to-vuecompiler-dom`;\n    Object.defineProperty(app.config, 'compilerOptions', {\n      get() {\n        warn(msg);\n        return compilerOptions;\n      },\n\n      set() {\n        warn(msg);\n      }\n\n    });\n  }\n}\n\nfunction normalizeContainer(container) {\n  if (shared_esm_bundler_isString(container)) {\n    const res = document.querySelector(container);\n\n    if (false) {}\n\n    return res;\n  }\n\n  if (false) {}\n\n  return container;\n}\n\nlet ssrDirectiveInitialized = false;\n/**\r\n * @internal\r\n */\n\nconst initDirectivesForSSR = () => {\n  if (!ssrDirectiveInitialized) {\n    ssrDirectiveInitialized = true;\n    initVModelForSSR();\n    initVShowForSSR();\n  }\n};\n\n\n;// CONCATENATED MODULE: ./node_modules/@vue/compiler-core/dist/compiler-core.esm-bundler.js\n\n\n\nfunction defaultOnError(error) {\n  throw error;\n}\n\nfunction defaultOnWarn(msg) {\n   false && 0;\n}\n\nfunction createCompilerError(code, loc, messages, additionalMessage) {\n  const msg =  false ? 0 : code;\n  const error = new SyntaxError(String(msg));\n  error.code = code;\n  error.loc = loc;\n  return error;\n}\n\nconst errorMessages = {\n  // parse errors\n  [0\n  /* ABRUPT_CLOSING_OF_EMPTY_COMMENT */\n  ]: 'Illegal comment.',\n  [1\n  /* CDATA_IN_HTML_CONTENT */\n  ]: 'CDATA section is allowed only in XML context.',\n  [2\n  /* DUPLICATE_ATTRIBUTE */\n  ]: 'Duplicate attribute.',\n  [3\n  /* END_TAG_WITH_ATTRIBUTES */\n  ]: 'End tag cannot have attributes.',\n  [4\n  /* END_TAG_WITH_TRAILING_SOLIDUS */\n  ]: \"Illegal '/' in tags.\",\n  [5\n  /* EOF_BEFORE_TAG_NAME */\n  ]: 'Unexpected EOF in tag.',\n  [6\n  /* EOF_IN_CDATA */\n  ]: 'Unexpected EOF in CDATA section.',\n  [7\n  /* EOF_IN_COMMENT */\n  ]: 'Unexpected EOF in comment.',\n  [8\n  /* EOF_IN_SCRIPT_HTML_COMMENT_LIKE_TEXT */\n  ]: 'Unexpected EOF in script.',\n  [9\n  /* EOF_IN_TAG */\n  ]: 'Unexpected EOF in tag.',\n  [10\n  /* INCORRECTLY_CLOSED_COMMENT */\n  ]: 'Incorrectly closed comment.',\n  [11\n  /* INCORRECTLY_OPENED_COMMENT */\n  ]: 'Incorrectly opened comment.',\n  [12\n  /* INVALID_FIRST_CHARACTER_OF_TAG_NAME */\n  ]: \"Illegal tag name. Use '&lt;' to print '<'.\",\n  [13\n  /* MISSING_ATTRIBUTE_VALUE */\n  ]: 'Attribute value was expected.',\n  [14\n  /* MISSING_END_TAG_NAME */\n  ]: 'End tag name was expected.',\n  [15\n  /* MISSING_WHITESPACE_BETWEEN_ATTRIBUTES */\n  ]: 'Whitespace was expected.',\n  [16\n  /* NESTED_COMMENT */\n  ]: \"Unexpected '\x3c!--' in comment.\",\n  [17\n  /* UNEXPECTED_CHARACTER_IN_ATTRIBUTE_NAME */\n  ]: 'Attribute name cannot contain U+0022 (\"), U+0027 (\\'), and U+003C (<).',\n  [18\n  /* UNEXPECTED_CHARACTER_IN_UNQUOTED_ATTRIBUTE_VALUE */\n  ]: 'Unquoted attribute value cannot contain U+0022 (\"), U+0027 (\\'), U+003C (<), U+003D (=), and U+0060 (`).',\n  [19\n  /* UNEXPECTED_EQUALS_SIGN_BEFORE_ATTRIBUTE_NAME */\n  ]: \"Attribute name cannot start with '='.\",\n  [21\n  /* UNEXPECTED_QUESTION_MARK_INSTEAD_OF_TAG_NAME */\n  ]: \"'<?' is allowed only in XML context.\",\n  [20\n  /* UNEXPECTED_NULL_CHARACTER */\n  ]: `Unexpected null character.`,\n  [22\n  /* UNEXPECTED_SOLIDUS_IN_TAG */\n  ]: \"Illegal '/' in tags.\",\n  // Vue-specific parse errors\n  [23\n  /* X_INVALID_END_TAG */\n  ]: 'Invalid end tag.',\n  [24\n  /* X_MISSING_END_TAG */\n  ]: 'Element is missing end tag.',\n  [25\n  /* X_MISSING_INTERPOLATION_END */\n  ]: 'Interpolation end sign was not found.',\n  [27\n  /* X_MISSING_DYNAMIC_DIRECTIVE_ARGUMENT_END */\n  ]: 'End bracket for dynamic directive argument was not found. ' + 'Note that dynamic directive argument cannot contain spaces.',\n  [26\n  /* X_MISSING_DIRECTIVE_NAME */\n  ]: 'Legal directive name was expected.',\n  // transform errors\n  [28\n  /* X_V_IF_NO_EXPRESSION */\n  ]: `v-if/v-else-if is missing expression.`,\n  [29\n  /* X_V_IF_SAME_KEY */\n  ]: `v-if/else branches must use unique keys.`,\n  [30\n  /* X_V_ELSE_NO_ADJACENT_IF */\n  ]: `v-else/v-else-if has no adjacent v-if or v-else-if.`,\n  [31\n  /* X_V_FOR_NO_EXPRESSION */\n  ]: `v-for is missing expression.`,\n  [32\n  /* X_V_FOR_MALFORMED_EXPRESSION */\n  ]: `v-for has invalid expression.`,\n  [33\n  /* X_V_FOR_TEMPLATE_KEY_PLACEMENT */\n  ]: `<template v-for> key should be placed on the <template> tag.`,\n  [34\n  /* X_V_BIND_NO_EXPRESSION */\n  ]: `v-bind is missing expression.`,\n  [35\n  /* X_V_ON_NO_EXPRESSION */\n  ]: `v-on is missing expression.`,\n  [36\n  /* X_V_SLOT_UNEXPECTED_DIRECTIVE_ON_SLOT_OUTLET */\n  ]: `Unexpected custom directive on <slot> outlet.`,\n  [37\n  /* X_V_SLOT_MIXED_SLOT_USAGE */\n  ]: `Mixed v-slot usage on both the component and nested <template>.` + `When there are multiple named slots, all slots should use <template> ` + `syntax to avoid scope ambiguity.`,\n  [38\n  /* X_V_SLOT_DUPLICATE_SLOT_NAMES */\n  ]: `Duplicate slot names found. `,\n  [39\n  /* X_V_SLOT_EXTRANEOUS_DEFAULT_SLOT_CHILDREN */\n  ]: `Extraneous children found when component already has explicitly named ` + `default slot. These children will be ignored.`,\n  [40\n  /* X_V_SLOT_MISPLACED */\n  ]: `v-slot can only be used on components or <template> tags.`,\n  [41\n  /* X_V_MODEL_NO_EXPRESSION */\n  ]: `v-model is missing expression.`,\n  [42\n  /* X_V_MODEL_MALFORMED_EXPRESSION */\n  ]: `v-model value must be a valid JavaScript member expression.`,\n  [43\n  /* X_V_MODEL_ON_SCOPE_VARIABLE */\n  ]: `v-model cannot be used on v-for or v-slot scope variables because they are not writable.`,\n  [44\n  /* X_INVALID_EXPRESSION */\n  ]: `Error parsing JavaScript expression: `,\n  [45\n  /* X_KEEP_ALIVE_INVALID_CHILDREN */\n  ]: `<KeepAlive> expects exactly one child component.`,\n  // generic errors\n  [46\n  /* X_PREFIX_ID_NOT_SUPPORTED */\n  ]: `\"prefixIdentifiers\" option is not supported in this build of compiler.`,\n  [47\n  /* X_MODULE_MODE_NOT_SUPPORTED */\n  ]: `ES module mode is not supported in this build of compiler.`,\n  [48\n  /* X_CACHE_HANDLER_NOT_SUPPORTED */\n  ]: `\"cacheHandlers\" option is only supported when the \"prefixIdentifiers\" option is enabled.`,\n  [49\n  /* X_SCOPE_ID_NOT_SUPPORTED */\n  ]: `\"scopeId\" option is only supported in module mode.`,\n  // just to fulfill types\n  [50\n  /* __EXTEND_POINT__ */\n  ]: ``\n};\nconst FRAGMENT = Symbol( false ? 0 : ``);\nconst TELEPORT = Symbol( false ? 0 : ``);\nconst SUSPENSE = Symbol( false ? 0 : ``);\nconst KEEP_ALIVE = Symbol( false ? 0 : ``);\nconst BASE_TRANSITION = Symbol( false ? 0 : ``);\nconst OPEN_BLOCK = Symbol( false ? 0 : ``);\nconst CREATE_BLOCK = Symbol( false ? 0 : ``);\nconst CREATE_ELEMENT_BLOCK = Symbol( false ? 0 : ``);\nconst CREATE_VNODE = Symbol( false ? 0 : ``);\nconst CREATE_ELEMENT_VNODE = Symbol( false ? 0 : ``);\nconst CREATE_COMMENT = Symbol( false ? 0 : ``);\nconst CREATE_TEXT = Symbol( false ? 0 : ``);\nconst CREATE_STATIC = Symbol( false ? 0 : ``);\nconst RESOLVE_COMPONENT = Symbol( false ? 0 : ``);\nconst RESOLVE_DYNAMIC_COMPONENT = Symbol( false ? 0 : ``);\nconst RESOLVE_DIRECTIVE = Symbol( false ? 0 : ``);\nconst RESOLVE_FILTER = Symbol( false ? 0 : ``);\nconst WITH_DIRECTIVES = Symbol( false ? 0 : ``);\nconst RENDER_LIST = Symbol( false ? 0 : ``);\nconst RENDER_SLOT = Symbol( false ? 0 : ``);\nconst CREATE_SLOTS = Symbol( false ? 0 : ``);\nconst TO_DISPLAY_STRING = Symbol( false ? 0 : ``);\nconst MERGE_PROPS = Symbol( false ? 0 : ``);\nconst NORMALIZE_CLASS = Symbol( false ? 0 : ``);\nconst NORMALIZE_STYLE = Symbol( false ? 0 : ``);\nconst NORMALIZE_PROPS = Symbol( false ? 0 : ``);\nconst GUARD_REACTIVE_PROPS = Symbol( false ? 0 : ``);\nconst TO_HANDLERS = Symbol( false ? 0 : ``);\nconst CAMELIZE = Symbol( false ? 0 : ``);\nconst CAPITALIZE = Symbol( false ? 0 : ``);\nconst TO_HANDLER_KEY = Symbol( false ? 0 : ``);\nconst SET_BLOCK_TRACKING = Symbol( false ? 0 : ``);\nconst PUSH_SCOPE_ID = Symbol( false ? 0 : ``);\nconst POP_SCOPE_ID = Symbol( false ? 0 : ``);\nconst WITH_CTX = Symbol( false ? 0 : ``);\nconst UNREF = Symbol( false ? 0 : ``);\nconst IS_REF = Symbol( false ? 0 : ``);\nconst WITH_MEMO = Symbol( false ? 0 : ``);\nconst IS_MEMO_SAME = Symbol( false ? 0 : ``); // Name mapping for runtime helpers that need to be imported from 'vue' in\n// generated code. Make sure these are correctly exported in the runtime!\n// Using `any` here because TS doesn't allow symbols as index type.\n\nconst helperNameMap = {\n  [FRAGMENT]: `Fragment`,\n  [TELEPORT]: `Teleport`,\n  [SUSPENSE]: `Suspense`,\n  [KEEP_ALIVE]: `KeepAlive`,\n  [BASE_TRANSITION]: `BaseTransition`,\n  [OPEN_BLOCK]: `openBlock`,\n  [CREATE_BLOCK]: `createBlock`,\n  [CREATE_ELEMENT_BLOCK]: `createElementBlock`,\n  [CREATE_VNODE]: `createVNode`,\n  [CREATE_ELEMENT_VNODE]: `createElementVNode`,\n  [CREATE_COMMENT]: `createCommentVNode`,\n  [CREATE_TEXT]: `createTextVNode`,\n  [CREATE_STATIC]: `createStaticVNode`,\n  [RESOLVE_COMPONENT]: `resolveComponent`,\n  [RESOLVE_DYNAMIC_COMPONENT]: `resolveDynamicComponent`,\n  [RESOLVE_DIRECTIVE]: `resolveDirective`,\n  [RESOLVE_FILTER]: `resolveFilter`,\n  [WITH_DIRECTIVES]: `withDirectives`,\n  [RENDER_LIST]: `renderList`,\n  [RENDER_SLOT]: `renderSlot`,\n  [CREATE_SLOTS]: `createSlots`,\n  [TO_DISPLAY_STRING]: `toDisplayString`,\n  [MERGE_PROPS]: `mergeProps`,\n  [NORMALIZE_CLASS]: `normalizeClass`,\n  [NORMALIZE_STYLE]: `normalizeStyle`,\n  [NORMALIZE_PROPS]: `normalizeProps`,\n  [GUARD_REACTIVE_PROPS]: `guardReactiveProps`,\n  [TO_HANDLERS]: `toHandlers`,\n  [CAMELIZE]: `camelize`,\n  [CAPITALIZE]: `capitalize`,\n  [TO_HANDLER_KEY]: `toHandlerKey`,\n  [SET_BLOCK_TRACKING]: `setBlockTracking`,\n  [PUSH_SCOPE_ID]: `pushScopeId`,\n  [POP_SCOPE_ID]: `popScopeId`,\n  [WITH_CTX]: `withCtx`,\n  [UNREF]: `unref`,\n  [IS_REF]: `isRef`,\n  [WITH_MEMO]: `withMemo`,\n  [IS_MEMO_SAME]: `isMemoSame`\n};\n\nfunction registerRuntimeHelpers(helpers) {\n  Object.getOwnPropertySymbols(helpers).forEach(s => {\n    helperNameMap[s] = helpers[s];\n  });\n} // AST Utilities ---------------------------------------------------------------\n// Some expressions, e.g. sequence and conditional expressions, are never\n// associated with template nodes, so their source locations are just a stub.\n// Container types like CompoundExpression also don't need a real location.\n\n\nconst locStub = {\n  source: '',\n  start: {\n    line: 1,\n    column: 1,\n    offset: 0\n  },\n  end: {\n    line: 1,\n    column: 1,\n    offset: 0\n  }\n};\n\nfunction createRoot(children, loc = locStub) {\n  return {\n    type: 0\n    /* ROOT */\n    ,\n    children,\n    helpers: [],\n    components: [],\n    directives: [],\n    hoists: [],\n    imports: [],\n    cached: 0,\n    temps: 0,\n    codegenNode: undefined,\n    loc\n  };\n}\n\nfunction createVNodeCall(context, tag, props, children, patchFlag, dynamicProps, directives, isBlock = false, disableTracking = false, isComponent = false, loc = locStub) {\n  if (context) {\n    if (isBlock) {\n      context.helper(OPEN_BLOCK);\n      context.helper(getVNodeBlockHelper(context.inSSR, isComponent));\n    } else {\n      context.helper(getVNodeHelper(context.inSSR, isComponent));\n    }\n\n    if (directives) {\n      context.helper(WITH_DIRECTIVES);\n    }\n  }\n\n  return {\n    type: 13\n    /* VNODE_CALL */\n    ,\n    tag,\n    props,\n    children,\n    patchFlag,\n    dynamicProps,\n    directives,\n    isBlock,\n    disableTracking,\n    isComponent,\n    loc\n  };\n}\n\nfunction createArrayExpression(elements, loc = locStub) {\n  return {\n    type: 17\n    /* JS_ARRAY_EXPRESSION */\n    ,\n    loc,\n    elements\n  };\n}\n\nfunction createObjectExpression(properties, loc = locStub) {\n  return {\n    type: 15\n    /* JS_OBJECT_EXPRESSION */\n    ,\n    loc,\n    properties\n  };\n}\n\nfunction createObjectProperty(key, value) {\n  return {\n    type: 16\n    /* JS_PROPERTY */\n    ,\n    loc: locStub,\n    key: shared_esm_bundler_isString(key) ? createSimpleExpression(key, true) : key,\n    value\n  };\n}\n\nfunction createSimpleExpression(content, isStatic = false, loc = locStub, constType = 0\n/* NOT_CONSTANT */\n) {\n  return {\n    type: 4\n    /* SIMPLE_EXPRESSION */\n    ,\n    loc,\n    content,\n    isStatic,\n    constType: isStatic ? 3\n    /* CAN_STRINGIFY */\n    : constType\n  };\n}\n\nfunction createInterpolation(content, loc) {\n  return {\n    type: 5\n    /* INTERPOLATION */\n    ,\n    loc,\n    content: isString(content) ? createSimpleExpression(content, false, loc) : content\n  };\n}\n\nfunction createCompoundExpression(children, loc = locStub) {\n  return {\n    type: 8\n    /* COMPOUND_EXPRESSION */\n    ,\n    loc,\n    children\n  };\n}\n\nfunction createCallExpression(callee, args = [], loc = locStub) {\n  return {\n    type: 14\n    /* JS_CALL_EXPRESSION */\n    ,\n    loc,\n    callee,\n    arguments: args\n  };\n}\n\nfunction createFunctionExpression(params, returns = undefined, newline = false, isSlot = false, loc = locStub) {\n  return {\n    type: 18\n    /* JS_FUNCTION_EXPRESSION */\n    ,\n    params,\n    returns,\n    newline,\n    isSlot,\n    loc\n  };\n}\n\nfunction createConditionalExpression(test, consequent, alternate, newline = true) {\n  return {\n    type: 19\n    /* JS_CONDITIONAL_EXPRESSION */\n    ,\n    test,\n    consequent,\n    alternate,\n    newline,\n    loc: locStub\n  };\n}\n\nfunction createCacheExpression(index, value, isVNode = false) {\n  return {\n    type: 20\n    /* JS_CACHE_EXPRESSION */\n    ,\n    index,\n    value,\n    isVNode,\n    loc: locStub\n  };\n}\n\nfunction createBlockStatement(body) {\n  return {\n    type: 21\n    /* JS_BLOCK_STATEMENT */\n    ,\n    body,\n    loc: locStub\n  };\n}\n\nfunction createTemplateLiteral(elements) {\n  return {\n    type: 22\n    /* JS_TEMPLATE_LITERAL */\n    ,\n    elements,\n    loc: locStub\n  };\n}\n\nfunction createIfStatement(test, consequent, alternate) {\n  return {\n    type: 23\n    /* JS_IF_STATEMENT */\n    ,\n    test,\n    consequent,\n    alternate,\n    loc: locStub\n  };\n}\n\nfunction createAssignmentExpression(left, right) {\n  return {\n    type: 24\n    /* JS_ASSIGNMENT_EXPRESSION */\n    ,\n    left,\n    right,\n    loc: locStub\n  };\n}\n\nfunction createSequenceExpression(expressions) {\n  return {\n    type: 25\n    /* JS_SEQUENCE_EXPRESSION */\n    ,\n    expressions,\n    loc: locStub\n  };\n}\n\nfunction createReturnStatement(returns) {\n  return {\n    type: 26\n    /* JS_RETURN_STATEMENT */\n    ,\n    returns,\n    loc: locStub\n  };\n}\n\nconst isStaticExp = p => p.type === 4\n/* SIMPLE_EXPRESSION */\n&& p.isStatic;\n\nconst isBuiltInType = (tag, expected) => tag === expected || tag === shared_esm_bundler_hyphenate(expected);\n\nfunction isCoreComponent(tag) {\n  if (isBuiltInType(tag, 'Teleport')) {\n    return TELEPORT;\n  } else if (isBuiltInType(tag, 'Suspense')) {\n    return SUSPENSE;\n  } else if (isBuiltInType(tag, 'KeepAlive')) {\n    return KEEP_ALIVE;\n  } else if (isBuiltInType(tag, 'BaseTransition')) {\n    return BASE_TRANSITION;\n  }\n}\n\nconst nonIdentifierRE = /^\\d|[^\\$\\w]/;\n\nconst isSimpleIdentifier = name => !nonIdentifierRE.test(name);\n\nconst validFirstIdentCharRE = /[A-Za-z_$\\xA0-\\uFFFF]/;\nconst validIdentCharRE = /[\\.\\?\\w$\\xA0-\\uFFFF]/;\nconst whitespaceRE = /\\s+[.[]\\s*|\\s*[.[]\\s+/g;\n/**\r\n * Simple lexer to check if an expression is a member expression. This is\r\n * lax and only checks validity at the root level (i.e. does not validate exps\r\n * inside square brackets), but it's ok since these are only used on template\r\n * expressions and false positives are invalid expressions in the first place.\r\n */\n\nconst isMemberExpressionBrowser = path => {\n  // remove whitespaces around . or [ first\n  path = path.trim().replace(whitespaceRE, s => s.trim());\n  let state = 0\n  /* inMemberExp */\n  ;\n  let stateStack = [];\n  let currentOpenBracketCount = 0;\n  let currentOpenParensCount = 0;\n  let currentStringType = null;\n\n  for (let i = 0; i < path.length; i++) {\n    const char = path.charAt(i);\n\n    switch (state) {\n      case 0\n      /* inMemberExp */\n      :\n        if (char === '[') {\n          stateStack.push(state);\n          state = 1\n          /* inBrackets */\n          ;\n          currentOpenBracketCount++;\n        } else if (char === '(') {\n          stateStack.push(state);\n          state = 2\n          /* inParens */\n          ;\n          currentOpenParensCount++;\n        } else if (!(i === 0 ? validFirstIdentCharRE : validIdentCharRE).test(char)) {\n          return false;\n        }\n\n        break;\n\n      case 1\n      /* inBrackets */\n      :\n        if (char === `'` || char === `\"` || char === '`') {\n          stateStack.push(state);\n          state = 3\n          /* inString */\n          ;\n          currentStringType = char;\n        } else if (char === `[`) {\n          currentOpenBracketCount++;\n        } else if (char === `]`) {\n          if (! --currentOpenBracketCount) {\n            state = stateStack.pop();\n          }\n        }\n\n        break;\n\n      case 2\n      /* inParens */\n      :\n        if (char === `'` || char === `\"` || char === '`') {\n          stateStack.push(state);\n          state = 3\n          /* inString */\n          ;\n          currentStringType = char;\n        } else if (char === `(`) {\n          currentOpenParensCount++;\n        } else if (char === `)`) {\n          // if the exp ends as a call then it should not be considered valid\n          if (i === path.length - 1) {\n            return false;\n          }\n\n          if (! --currentOpenParensCount) {\n            state = stateStack.pop();\n          }\n        }\n\n        break;\n\n      case 3\n      /* inString */\n      :\n        if (char === currentStringType) {\n          state = stateStack.pop();\n          currentStringType = null;\n        }\n\n        break;\n    }\n  }\n\n  return !currentOpenBracketCount && !currentOpenParensCount;\n};\n\nconst isMemberExpressionNode = (/* unused pure expression or super */ null && (NOOP));\nconst isMemberExpression = isMemberExpressionBrowser;\n\nfunction getInnerRange(loc, offset, length) {\n  const source = loc.source.slice(offset, offset + length);\n  const newLoc = {\n    source,\n    start: advancePositionWithClone(loc.start, loc.source, offset),\n    end: loc.end\n  };\n\n  if (length != null) {\n    newLoc.end = advancePositionWithClone(loc.start, loc.source, offset + length);\n  }\n\n  return newLoc;\n}\n\nfunction advancePositionWithClone(pos, source, numberOfCharacters = source.length) {\n  return advancePositionWithMutation(shared_esm_bundler_extend({}, pos), source, numberOfCharacters);\n} // advance by mutation without cloning (for performance reasons), since this\n// gets called a lot in the parser\n\n\nfunction advancePositionWithMutation(pos, source, numberOfCharacters = source.length) {\n  let linesCount = 0;\n  let lastNewLinePos = -1;\n\n  for (let i = 0; i < numberOfCharacters; i++) {\n    if (source.charCodeAt(i) === 10\n    /* newline char code */\n    ) {\n      linesCount++;\n      lastNewLinePos = i;\n    }\n  }\n\n  pos.offset += numberOfCharacters;\n  pos.line += linesCount;\n  pos.column = lastNewLinePos === -1 ? pos.column + numberOfCharacters : numberOfCharacters - lastNewLinePos;\n  return pos;\n}\n\nfunction assert(condition, msg) {\n  /* istanbul ignore if */\n  if (!condition) {\n    throw new Error(msg || `unexpected compiler condition`);\n  }\n}\n\nfunction findDir(node, name, allowEmpty = false) {\n  for (let i = 0; i < node.props.length; i++) {\n    const p = node.props[i];\n\n    if (p.type === 7\n    /* DIRECTIVE */\n    && (allowEmpty || p.exp) && (shared_esm_bundler_isString(name) ? p.name === name : name.test(p.name))) {\n      return p;\n    }\n  }\n}\n\nfunction findProp(node, name, dynamicOnly = false, allowEmpty = false) {\n  for (let i = 0; i < node.props.length; i++) {\n    const p = node.props[i];\n\n    if (p.type === 6\n    /* ATTRIBUTE */\n    ) {\n      if (dynamicOnly) continue;\n\n      if (p.name === name && (p.value || allowEmpty)) {\n        return p;\n      }\n    } else if (p.name === 'bind' && (p.exp || allowEmpty) && isStaticArgOf(p.arg, name)) {\n      return p;\n    }\n  }\n}\n\nfunction isStaticArgOf(arg, name) {\n  return !!(arg && isStaticExp(arg) && arg.content === name);\n}\n\nfunction hasDynamicKeyVBind(node) {\n  return node.props.some(p => p.type === 7\n  /* DIRECTIVE */\n  && p.name === 'bind' && (!p.arg || // v-bind=\"obj\"\n  p.arg.type !== 4\n  /* SIMPLE_EXPRESSION */\n  || // v-bind:[_ctx.foo]\n  !p.arg.isStatic) // v-bind:[foo]\n  );\n}\n\nfunction isText(node) {\n  return node.type === 5\n  /* INTERPOLATION */\n  || node.type === 2\n  /* TEXT */\n  ;\n}\n\nfunction isVSlot(p) {\n  return p.type === 7\n  /* DIRECTIVE */\n  && p.name === 'slot';\n}\n\nfunction isTemplateNode(node) {\n  return node.type === 1\n  /* ELEMENT */\n  && node.tagType === 3\n  /* TEMPLATE */\n  ;\n}\n\nfunction isSlotOutlet(node) {\n  return node.type === 1\n  /* ELEMENT */\n  && node.tagType === 2\n  /* SLOT */\n  ;\n}\n\nfunction getVNodeHelper(ssr, isComponent) {\n  return ssr || isComponent ? CREATE_VNODE : CREATE_ELEMENT_VNODE;\n}\n\nfunction getVNodeBlockHelper(ssr, isComponent) {\n  return ssr || isComponent ? CREATE_BLOCK : CREATE_ELEMENT_BLOCK;\n}\n\nconst propsHelperSet = new Set([NORMALIZE_PROPS, GUARD_REACTIVE_PROPS]);\n\nfunction getUnnormalizedProps(props, callPath = []) {\n  if (props && !shared_esm_bundler_isString(props) && props.type === 14\n  /* JS_CALL_EXPRESSION */\n  ) {\n    const callee = props.callee;\n\n    if (!shared_esm_bundler_isString(callee) && propsHelperSet.has(callee)) {\n      return getUnnormalizedProps(props.arguments[0], callPath.concat(props));\n    }\n  }\n\n  return [props, callPath];\n}\n\nfunction injectProp(node, prop, context) {\n  let propsWithInjection;\n  /**\r\n   * 1. mergeProps(...)\r\n   * 2. toHandlers(...)\r\n   * 3. normalizeProps(...)\r\n   * 4. normalizeProps(guardReactiveProps(...))\r\n   *\r\n   * we need to get the real props before normalization\r\n   */\n\n  let props = node.type === 13\n  /* VNODE_CALL */\n  ? node.props : node.arguments[2];\n  let callPath = [];\n  let parentCall;\n\n  if (props && !shared_esm_bundler_isString(props) && props.type === 14\n  /* JS_CALL_EXPRESSION */\n  ) {\n    const ret = getUnnormalizedProps(props);\n    props = ret[0];\n    callPath = ret[1];\n    parentCall = callPath[callPath.length - 1];\n  }\n\n  if (props == null || shared_esm_bundler_isString(props)) {\n    propsWithInjection = createObjectExpression([prop]);\n  } else if (props.type === 14\n  /* JS_CALL_EXPRESSION */\n  ) {\n    // merged props... add ours\n    // only inject key to object literal if it's the first argument so that\n    // if doesn't override user provided keys\n    const first = props.arguments[0];\n\n    if (!shared_esm_bundler_isString(first) && first.type === 15\n    /* JS_OBJECT_EXPRESSION */\n    ) {\n      first.properties.unshift(prop);\n    } else {\n      if (props.callee === TO_HANDLERS) {\n        // #2366\n        propsWithInjection = createCallExpression(context.helper(MERGE_PROPS), [createObjectExpression([prop]), props]);\n      } else {\n        props.arguments.unshift(createObjectExpression([prop]));\n      }\n    }\n\n    !propsWithInjection && (propsWithInjection = props);\n  } else if (props.type === 15\n  /* JS_OBJECT_EXPRESSION */\n  ) {\n    let alreadyExists = false; // check existing key to avoid overriding user provided keys\n\n    if (prop.key.type === 4\n    /* SIMPLE_EXPRESSION */\n    ) {\n      const propKeyName = prop.key.content;\n      alreadyExists = props.properties.some(p => p.key.type === 4\n      /* SIMPLE_EXPRESSION */\n      && p.key.content === propKeyName);\n    }\n\n    if (!alreadyExists) {\n      props.properties.unshift(prop);\n    }\n\n    propsWithInjection = props;\n  } else {\n    // single v-bind with expression, return a merged replacement\n    propsWithInjection = createCallExpression(context.helper(MERGE_PROPS), [createObjectExpression([prop]), props]); // in the case of nested helper call, e.g. `normalizeProps(guardReactiveProps(props))`,\n    // it will be rewritten as `normalizeProps(mergeProps({ key: 0 }, props))`,\n    // the `guardReactiveProps` will no longer be needed\n\n    if (parentCall && parentCall.callee === GUARD_REACTIVE_PROPS) {\n      parentCall = callPath[callPath.length - 2];\n    }\n  }\n\n  if (node.type === 13\n  /* VNODE_CALL */\n  ) {\n    if (parentCall) {\n      parentCall.arguments[0] = propsWithInjection;\n    } else {\n      node.props = propsWithInjection;\n    }\n  } else {\n    if (parentCall) {\n      parentCall.arguments[0] = propsWithInjection;\n    } else {\n      node.arguments[2] = propsWithInjection;\n    }\n  }\n}\n\nfunction toValidAssetId(name, type) {\n  // see issue#4422, we need adding identifier on validAssetId if variable `name` has specific character\n  return `_${type}_${name.replace(/[^\\w]/g, (searchValue, replaceValue) => {\n    return searchValue === '-' ? '_' : name.charCodeAt(replaceValue).toString();\n  })}`;\n} // Check if a node contains expressions that reference current context scope ids\n\n\nfunction hasScopeRef(node, ids) {\n  if (!node || Object.keys(ids).length === 0) {\n    return false;\n  }\n\n  switch (node.type) {\n    case 1\n    /* ELEMENT */\n    :\n      for (let i = 0; i < node.props.length; i++) {\n        const p = node.props[i];\n\n        if (p.type === 7\n        /* DIRECTIVE */\n        && (hasScopeRef(p.arg, ids) || hasScopeRef(p.exp, ids))) {\n          return true;\n        }\n      }\n\n      return node.children.some(c => hasScopeRef(c, ids));\n\n    case 11\n    /* FOR */\n    :\n      if (hasScopeRef(node.source, ids)) {\n        return true;\n      }\n\n      return node.children.some(c => hasScopeRef(c, ids));\n\n    case 9\n    /* IF */\n    :\n      return node.branches.some(b => hasScopeRef(b, ids));\n\n    case 10\n    /* IF_BRANCH */\n    :\n      if (hasScopeRef(node.condition, ids)) {\n        return true;\n      }\n\n      return node.children.some(c => hasScopeRef(c, ids));\n\n    case 4\n    /* SIMPLE_EXPRESSION */\n    :\n      return !node.isStatic && isSimpleIdentifier(node.content) && !!ids[node.content];\n\n    case 8\n    /* COMPOUND_EXPRESSION */\n    :\n      return node.children.some(c => isObject(c) && hasScopeRef(c, ids));\n\n    case 5\n    /* INTERPOLATION */\n    :\n    case 12\n    /* TEXT_CALL */\n    :\n      return hasScopeRef(node.content, ids);\n\n    case 2\n    /* TEXT */\n    :\n    case 3\n    /* COMMENT */\n    :\n      return false;\n\n    default:\n      if (false) {}\n      return false;\n  }\n}\n\nfunction getMemoedVNodeCall(node) {\n  if (node.type === 14\n  /* JS_CALL_EXPRESSION */\n  && node.callee === WITH_MEMO) {\n    return node.arguments[1].returns;\n  } else {\n    return node;\n  }\n}\n\nfunction makeBlock(node, {\n  helper,\n  removeHelper,\n  inSSR\n}) {\n  if (!node.isBlock) {\n    node.isBlock = true;\n    removeHelper(getVNodeHelper(inSSR, node.isComponent));\n    helper(OPEN_BLOCK);\n    helper(getVNodeBlockHelper(inSSR, node.isComponent));\n  }\n}\n\nconst deprecationData = {\n  [\"COMPILER_IS_ON_ELEMENT\"\n  /* COMPILER_IS_ON_ELEMENT */\n  ]: {\n    message: `Platform-native elements with \"is\" prop will no longer be ` + `treated as components in Vue 3 unless the \"is\" value is explicitly ` + `prefixed with \"vue:\".`,\n    link: `https://v3-migration.vuejs.org/breaking-changes/custom-elements-interop.html`\n  },\n  [\"COMPILER_V_BIND_SYNC\"\n  /* COMPILER_V_BIND_SYNC */\n  ]: {\n    message: key => `.sync modifier for v-bind has been removed. Use v-model with ` + `argument instead. \\`v-bind:${key}.sync\\` should be changed to ` + `\\`v-model:${key}\\`.`,\n    link: `https://v3-migration.vuejs.org/breaking-changes/v-model.html`\n  },\n  [\"COMPILER_V_BIND_PROP\"\n  /* COMPILER_V_BIND_PROP */\n  ]: {\n    message: `.prop modifier for v-bind has been removed and no longer necessary. ` + `Vue 3 will automatically set a binding as DOM property when appropriate.`\n  },\n  [\"COMPILER_V_BIND_OBJECT_ORDER\"\n  /* COMPILER_V_BIND_OBJECT_ORDER */\n  ]: {\n    message: `v-bind=\"obj\" usage is now order sensitive and behaves like JavaScript ` + `object spread: it will now overwrite an existing non-mergeable attribute ` + `that appears before v-bind in the case of conflict. ` + `To retain 2.x behavior, move v-bind to make it the first attribute. ` + `You can also suppress this warning if the usage is intended.`,\n    link: `https://v3-migration.vuejs.org/breaking-changes/v-bind.html`\n  },\n  [\"COMPILER_V_ON_NATIVE\"\n  /* COMPILER_V_ON_NATIVE */\n  ]: {\n    message: `.native modifier for v-on has been removed as is no longer necessary.`,\n    link: `https://v3-migration.vuejs.org/breaking-changes/v-on-native-modifier-removed.html`\n  },\n  [\"COMPILER_V_IF_V_FOR_PRECEDENCE\"\n  /* COMPILER_V_IF_V_FOR_PRECEDENCE */\n  ]: {\n    message: `v-if / v-for precedence when used on the same element has changed ` + `in Vue 3: v-if now takes higher precedence and will no longer have ` + `access to v-for scope variables. It is best to avoid the ambiguity ` + `with <template> tags or use a computed property that filters v-for ` + `data source.`,\n    link: `https://v3-migration.vuejs.org/breaking-changes/v-if-v-for.html`\n  },\n  [\"COMPILER_NATIVE_TEMPLATE\"\n  /* COMPILER_NATIVE_TEMPLATE */\n  ]: {\n    message: `<template> with no special directives will render as a native template ` + `element instead of its inner content in Vue 3.`\n  },\n  [\"COMPILER_INLINE_TEMPLATE\"\n  /* COMPILER_INLINE_TEMPLATE */\n  ]: {\n    message: `\"inline-template\" has been removed in Vue 3.`,\n    link: `https://v3-migration.vuejs.org/breaking-changes/inline-template-attribute.html`\n  },\n  [\"COMPILER_FILTER\"\n  /* COMPILER_FILTERS */\n  ]: {\n    message: `filters have been removed in Vue 3. ` + `The \"|\" symbol will be treated as native JavaScript bitwise OR operator. ` + `Use method calls or computed properties instead.`,\n    link: `https://v3-migration.vuejs.org/breaking-changes/filters.html`\n  }\n};\n\nfunction getCompatValue(key, context) {\n  const config = context.options ? context.options.compatConfig : context.compatConfig;\n  const value = config && config[key];\n\n  if (key === 'MODE') {\n    return value || 3; // compiler defaults to v3 behavior\n  } else {\n    return value;\n  }\n}\n\nfunction isCompatEnabled(key, context) {\n  const mode = getCompatValue('MODE', context);\n  const value = getCompatValue(key, context); // in v3 mode, only enable if explicitly set to true\n  // otherwise enable for any non-false value\n\n  return mode === 3 ? value === true : value !== false;\n}\n\nfunction checkCompatEnabled(key, context, loc, ...args) {\n  const enabled = isCompatEnabled(key, context);\n\n  if (false) {}\n\n  return enabled;\n}\n\nfunction warnDeprecation(key, context, loc, ...args) {\n  const val = getCompatValue(key, context);\n\n  if (val === 'suppress-warning') {\n    return;\n  }\n\n  const {\n    message,\n    link\n  } = deprecationData[key];\n  const msg = `(deprecation ${key}) ${typeof message === 'function' ? message(...args) : message}${link ? `\\n  Details: ${link}` : ``}`;\n  const err = new SyntaxError(msg);\n  err.code = key;\n  if (loc) err.loc = loc;\n  context.onWarn(err);\n} // The default decoder only provides escapes for characters reserved as part of\n// the template syntax, and is only used if the custom renderer did not provide\n// a platform-specific decoder.\n\n\nconst decodeRE = /&(gt|lt|amp|apos|quot);/g;\nconst decodeMap = {\n  gt: '>',\n  lt: '<',\n  amp: '&',\n  apos: \"'\",\n  quot: '\"'\n};\nconst defaultParserOptions = {\n  delimiters: [`{{`, `}}`],\n  getNamespace: () => 0\n  /* HTML */\n  ,\n  getTextMode: () => 0\n  /* DATA */\n  ,\n  isVoidTag: shared_esm_bundler_NO,\n  isPreTag: shared_esm_bundler_NO,\n  isCustomElement: shared_esm_bundler_NO,\n  decodeEntities: rawText => rawText.replace(decodeRE, (_, p1) => decodeMap[p1]),\n  onError: defaultOnError,\n  onWarn: defaultOnWarn,\n  comments: \"production\" !== 'production'\n};\n\nfunction compiler_core_esm_bundler_baseParse(content, options = {}) {\n  const context = createParserContext(content, options);\n  const start = getCursor(context);\n  return createRoot(parseChildren(context, 0\n  /* DATA */\n  , []), getSelection(context, start));\n}\n\nfunction createParserContext(content, rawOptions) {\n  const options = shared_esm_bundler_extend({}, defaultParserOptions);\n  let key;\n\n  for (key in rawOptions) {\n    // @ts-ignore\n    options[key] = rawOptions[key] === undefined ? defaultParserOptions[key] : rawOptions[key];\n  }\n\n  return {\n    options,\n    column: 1,\n    line: 1,\n    offset: 0,\n    originalSource: content,\n    source: content,\n    inPre: false,\n    inVPre: false,\n    onWarn: options.onWarn\n  };\n}\n\nfunction parseChildren(context, mode, ancestors) {\n  const parent = last(ancestors);\n  const ns = parent ? parent.ns : 0\n  /* HTML */\n  ;\n  const nodes = [];\n\n  while (!isEnd(context, mode, ancestors)) {\n    const s = context.source;\n    let node = undefined;\n\n    if (mode === 0\n    /* DATA */\n    || mode === 1\n    /* RCDATA */\n    ) {\n      if (!context.inVPre && startsWith(s, context.options.delimiters[0])) {\n        // '{{'\n        node = parseInterpolation(context, mode);\n      } else if (mode === 0\n      /* DATA */\n      && s[0] === '<') {\n        // https://html.spec.whatwg.org/multipage/parsing.html#tag-open-state\n        if (s.length === 1) {\n          emitError(context, 5\n          /* EOF_BEFORE_TAG_NAME */\n          , 1);\n        } else if (s[1] === '!') {\n          // https://html.spec.whatwg.org/multipage/parsing.html#markup-declaration-open-state\n          if (startsWith(s, '\x3c!--')) {\n            node = parseComment(context);\n          } else if (startsWith(s, '<!DOCTYPE')) {\n            // Ignore DOCTYPE by a limitation.\n            node = parseBogusComment(context);\n          } else if (startsWith(s, '<![CDATA[')) {\n            if (ns !== 0\n            /* HTML */\n            ) {\n              node = parseCDATA(context, ancestors);\n            } else {\n              emitError(context, 1\n              /* CDATA_IN_HTML_CONTENT */\n              );\n              node = parseBogusComment(context);\n            }\n          } else {\n            emitError(context, 11\n            /* INCORRECTLY_OPENED_COMMENT */\n            );\n            node = parseBogusComment(context);\n          }\n        } else if (s[1] === '/') {\n          // https://html.spec.whatwg.org/multipage/parsing.html#end-tag-open-state\n          if (s.length === 2) {\n            emitError(context, 5\n            /* EOF_BEFORE_TAG_NAME */\n            , 2);\n          } else if (s[2] === '>') {\n            emitError(context, 14\n            /* MISSING_END_TAG_NAME */\n            , 2);\n            advanceBy(context, 3);\n            continue;\n          } else if (/[a-z]/i.test(s[2])) {\n            emitError(context, 23\n            /* X_INVALID_END_TAG */\n            );\n            parseTag(context, 1\n            /* End */\n            , parent);\n            continue;\n          } else {\n            emitError(context, 12\n            /* INVALID_FIRST_CHARACTER_OF_TAG_NAME */\n            , 2);\n            node = parseBogusComment(context);\n          }\n        } else if (/[a-z]/i.test(s[1])) {\n          node = parseElement(context, ancestors); // 2.x <template> with no directive compat\n\n          if (isCompatEnabled(\"COMPILER_NATIVE_TEMPLATE\"\n          /* COMPILER_NATIVE_TEMPLATE */\n          , context) && node && node.tag === 'template' && !node.props.some(p => p.type === 7\n          /* DIRECTIVE */\n          && isSpecialTemplateDirective(p.name))) {\n             false && 0;\n            node = node.children;\n          }\n        } else if (s[1] === '?') {\n          emitError(context, 21\n          /* UNEXPECTED_QUESTION_MARK_INSTEAD_OF_TAG_NAME */\n          , 1);\n          node = parseBogusComment(context);\n        } else {\n          emitError(context, 12\n          /* INVALID_FIRST_CHARACTER_OF_TAG_NAME */\n          , 1);\n        }\n      }\n    }\n\n    if (!node) {\n      node = parseText(context, mode);\n    }\n\n    if (shared_esm_bundler_isArray(node)) {\n      for (let i = 0; i < node.length; i++) {\n        pushNode(nodes, node[i]);\n      }\n    } else {\n      pushNode(nodes, node);\n    }\n  } // Whitespace handling strategy like v2\n\n\n  let removedWhitespace = false;\n\n  if (mode !== 2\n  /* RAWTEXT */\n  && mode !== 1\n  /* RCDATA */\n  ) {\n    const shouldCondense = context.options.whitespace !== 'preserve';\n\n    for (let i = 0; i < nodes.length; i++) {\n      const node = nodes[i];\n\n      if (!context.inPre && node.type === 2\n      /* TEXT */\n      ) {\n        if (!/[^\\t\\r\\n\\f ]/.test(node.content)) {\n          const prev = nodes[i - 1];\n          const next = nodes[i + 1]; // Remove if:\n          // - the whitespace is the first or last node, or:\n          // - (condense mode) the whitespace is adjacent to a comment, or:\n          // - (condense mode) the whitespace is between two elements AND contains newline\n\n          if (!prev || !next || shouldCondense && (prev.type === 3\n          /* COMMENT */\n          || next.type === 3\n          /* COMMENT */\n          || prev.type === 1\n          /* ELEMENT */\n          && next.type === 1\n          /* ELEMENT */\n          && /[\\r\\n]/.test(node.content))) {\n            removedWhitespace = true;\n            nodes[i] = null;\n          } else {\n            // Otherwise, the whitespace is condensed into a single space\n            node.content = ' ';\n          }\n        } else if (shouldCondense) {\n          // in condense mode, consecutive whitespaces in text are condensed\n          // down to a single space.\n          node.content = node.content.replace(/[\\t\\r\\n\\f ]+/g, ' ');\n        }\n      } // Remove comment nodes if desired by configuration.\n      else if (node.type === 3\n      /* COMMENT */\n      && !context.options.comments) {\n        removedWhitespace = true;\n        nodes[i] = null;\n      }\n    }\n\n    if (context.inPre && parent && context.options.isPreTag(parent.tag)) {\n      // remove leading newline per html spec\n      // https://html.spec.whatwg.org/multipage/grouping-content.html#the-pre-element\n      const first = nodes[0];\n\n      if (first && first.type === 2\n      /* TEXT */\n      ) {\n        first.content = first.content.replace(/^\\r?\\n/, '');\n      }\n    }\n  }\n\n  return removedWhitespace ? nodes.filter(Boolean) : nodes;\n}\n\nfunction pushNode(nodes, node) {\n  if (node.type === 2\n  /* TEXT */\n  ) {\n    const prev = last(nodes); // Merge if both this and the previous node are text and those are\n    // consecutive. This happens for cases like \"a < b\".\n\n    if (prev && prev.type === 2\n    /* TEXT */\n    && prev.loc.end.offset === node.loc.start.offset) {\n      prev.content += node.content;\n      prev.loc.end = node.loc.end;\n      prev.loc.source += node.loc.source;\n      return;\n    }\n  }\n\n  nodes.push(node);\n}\n\nfunction parseCDATA(context, ancestors) {\n  advanceBy(context, 9);\n  const nodes = parseChildren(context, 3\n  /* CDATA */\n  , ancestors);\n\n  if (context.source.length === 0) {\n    emitError(context, 6\n    /* EOF_IN_CDATA */\n    );\n  } else {\n    advanceBy(context, 3);\n  }\n\n  return nodes;\n}\n\nfunction parseComment(context) {\n  const start = getCursor(context);\n  let content; // Regular comment.\n\n  const match = /--(\\!)?>/.exec(context.source);\n\n  if (!match) {\n    content = context.source.slice(4);\n    advanceBy(context, context.source.length);\n    emitError(context, 7\n    /* EOF_IN_COMMENT */\n    );\n  } else {\n    if (match.index <= 3) {\n      emitError(context, 0\n      /* ABRUPT_CLOSING_OF_EMPTY_COMMENT */\n      );\n    }\n\n    if (match[1]) {\n      emitError(context, 10\n      /* INCORRECTLY_CLOSED_COMMENT */\n      );\n    }\n\n    content = context.source.slice(4, match.index); // Advancing with reporting nested comments.\n\n    const s = context.source.slice(0, match.index);\n    let prevIndex = 1,\n        nestedIndex = 0;\n\n    while ((nestedIndex = s.indexOf('\x3c!--', prevIndex)) !== -1) {\n      advanceBy(context, nestedIndex - prevIndex + 1);\n\n      if (nestedIndex + 4 < s.length) {\n        emitError(context, 16\n        /* NESTED_COMMENT */\n        );\n      }\n\n      prevIndex = nestedIndex + 1;\n    }\n\n    advanceBy(context, match.index + match[0].length - prevIndex + 1);\n  }\n\n  return {\n    type: 3\n    /* COMMENT */\n    ,\n    content,\n    loc: getSelection(context, start)\n  };\n}\n\nfunction parseBogusComment(context) {\n  const start = getCursor(context);\n  const contentStart = context.source[1] === '?' ? 1 : 2;\n  let content;\n  const closeIndex = context.source.indexOf('>');\n\n  if (closeIndex === -1) {\n    content = context.source.slice(contentStart);\n    advanceBy(context, context.source.length);\n  } else {\n    content = context.source.slice(contentStart, closeIndex);\n    advanceBy(context, closeIndex + 1);\n  }\n\n  return {\n    type: 3\n    /* COMMENT */\n    ,\n    content,\n    loc: getSelection(context, start)\n  };\n}\n\nfunction parseElement(context, ancestors) {\n  // Start tag.\n  const wasInPre = context.inPre;\n  const wasInVPre = context.inVPre;\n  const parent = last(ancestors);\n  const element = parseTag(context, 0\n  /* Start */\n  , parent);\n  const isPreBoundary = context.inPre && !wasInPre;\n  const isVPreBoundary = context.inVPre && !wasInVPre;\n\n  if (element.isSelfClosing || context.options.isVoidTag(element.tag)) {\n    // #4030 self-closing <pre> tag\n    if (isPreBoundary) {\n      context.inPre = false;\n    }\n\n    if (isVPreBoundary) {\n      context.inVPre = false;\n    }\n\n    return element;\n  } // Children.\n\n\n  ancestors.push(element);\n  const mode = context.options.getTextMode(element, parent);\n  const children = parseChildren(context, mode, ancestors);\n  ancestors.pop(); // 2.x inline-template compat\n\n  {\n    const inlineTemplateProp = element.props.find(p => p.type === 6\n    /* ATTRIBUTE */\n    && p.name === 'inline-template');\n\n    if (inlineTemplateProp && checkCompatEnabled(\"COMPILER_INLINE_TEMPLATE\"\n    /* COMPILER_INLINE_TEMPLATE */\n    , context, inlineTemplateProp.loc)) {\n      const loc = getSelection(context, element.loc.end);\n      inlineTemplateProp.value = {\n        type: 2\n        /* TEXT */\n        ,\n        content: loc.source,\n        loc\n      };\n    }\n  }\n  element.children = children; // End tag.\n\n  if (startsWithEndTagOpen(context.source, element.tag)) {\n    parseTag(context, 1\n    /* End */\n    , parent);\n  } else {\n    emitError(context, 24\n    /* X_MISSING_END_TAG */\n    , 0, element.loc.start);\n\n    if (context.source.length === 0 && element.tag.toLowerCase() === 'script') {\n      const first = children[0];\n\n      if (first && startsWith(first.loc.source, '\x3c!--')) {\n        emitError(context, 8\n        /* EOF_IN_SCRIPT_HTML_COMMENT_LIKE_TEXT */\n        );\n      }\n    }\n  }\n\n  element.loc = getSelection(context, element.loc.start);\n\n  if (isPreBoundary) {\n    context.inPre = false;\n  }\n\n  if (isVPreBoundary) {\n    context.inVPre = false;\n  }\n\n  return element;\n}\n\nconst isSpecialTemplateDirective = /*#__PURE__*/shared_esm_bundler_makeMap(`if,else,else-if,for,slot`);\n\nfunction parseTag(context, type, parent) {\n  // Tag open.\n  const start = getCursor(context);\n  const match = /^<\\/?([a-z][^\\t\\r\\n\\f />]*)/i.exec(context.source);\n  const tag = match[1];\n  const ns = context.options.getNamespace(tag, parent);\n  advanceBy(context, match[0].length);\n  advanceSpaces(context); // save current state in case we need to re-parse attributes with v-pre\n\n  const cursor = getCursor(context);\n  const currentSource = context.source; // check <pre> tag\n\n  if (context.options.isPreTag(tag)) {\n    context.inPre = true;\n  } // Attributes.\n\n\n  let props = parseAttributes(context, type); // check v-pre\n\n  if (type === 0\n  /* Start */\n  && !context.inVPre && props.some(p => p.type === 7\n  /* DIRECTIVE */\n  && p.name === 'pre')) {\n    context.inVPre = true; // reset context\n\n    shared_esm_bundler_extend(context, cursor);\n    context.source = currentSource; // re-parse attrs and filter out v-pre itself\n\n    props = parseAttributes(context, type).filter(p => p.name !== 'v-pre');\n  } // Tag close.\n\n\n  let isSelfClosing = false;\n\n  if (context.source.length === 0) {\n    emitError(context, 9\n    /* EOF_IN_TAG */\n    );\n  } else {\n    isSelfClosing = startsWith(context.source, '/>');\n\n    if (type === 1\n    /* End */\n    && isSelfClosing) {\n      emitError(context, 4\n      /* END_TAG_WITH_TRAILING_SOLIDUS */\n      );\n    }\n\n    advanceBy(context, isSelfClosing ? 2 : 1);\n  }\n\n  if (type === 1\n  /* End */\n  ) {\n    return;\n  } // 2.x deprecation checks\n\n\n  if (false) {}\n\n  let tagType = 0\n  /* ELEMENT */\n  ;\n\n  if (!context.inVPre) {\n    if (tag === 'slot') {\n      tagType = 2\n      /* SLOT */\n      ;\n    } else if (tag === 'template') {\n      if (props.some(p => p.type === 7\n      /* DIRECTIVE */\n      && isSpecialTemplateDirective(p.name))) {\n        tagType = 3\n        /* TEMPLATE */\n        ;\n      }\n    } else if (isComponent(tag, props, context)) {\n      tagType = 1\n      /* COMPONENT */\n      ;\n    }\n  }\n\n  return {\n    type: 1\n    /* ELEMENT */\n    ,\n    ns,\n    tag,\n    tagType,\n    props,\n    isSelfClosing,\n    children: [],\n    loc: getSelection(context, start),\n    codegenNode: undefined // to be created during transform phase\n\n  };\n}\n\nfunction isComponent(tag, props, context) {\n  const options = context.options;\n\n  if (options.isCustomElement(tag)) {\n    return false;\n  }\n\n  if (tag === 'component' || /^[A-Z]/.test(tag) || isCoreComponent(tag) || options.isBuiltInComponent && options.isBuiltInComponent(tag) || options.isNativeTag && !options.isNativeTag(tag)) {\n    return true;\n  } // at this point the tag should be a native tag, but check for potential \"is\"\n  // casting\n\n\n  for (let i = 0; i < props.length; i++) {\n    const p = props[i];\n\n    if (p.type === 6\n    /* ATTRIBUTE */\n    ) {\n      if (p.name === 'is' && p.value) {\n        if (p.value.content.startsWith('vue:')) {\n          return true;\n        } else if (checkCompatEnabled(\"COMPILER_IS_ON_ELEMENT\"\n        /* COMPILER_IS_ON_ELEMENT */\n        , context, p.loc)) {\n          return true;\n        }\n      }\n    } else {\n      // directive\n      // v-is (TODO Deprecate)\n      if (p.name === 'is') {\n        return true;\n      } else if ( // :is on plain element - only treat as component in compat mode\n      p.name === 'bind' && isStaticArgOf(p.arg, 'is') && true && checkCompatEnabled(\"COMPILER_IS_ON_ELEMENT\"\n      /* COMPILER_IS_ON_ELEMENT */\n      , context, p.loc)) {\n        return true;\n      }\n    }\n  }\n}\n\nfunction parseAttributes(context, type) {\n  const props = [];\n  const attributeNames = new Set();\n\n  while (context.source.length > 0 && !startsWith(context.source, '>') && !startsWith(context.source, '/>')) {\n    if (startsWith(context.source, '/')) {\n      emitError(context, 22\n      /* UNEXPECTED_SOLIDUS_IN_TAG */\n      );\n      advanceBy(context, 1);\n      advanceSpaces(context);\n      continue;\n    }\n\n    if (type === 1\n    /* End */\n    ) {\n      emitError(context, 3\n      /* END_TAG_WITH_ATTRIBUTES */\n      );\n    }\n\n    const attr = parseAttribute(context, attributeNames); // Trim whitespace between class\n    // https://github.com/vuejs/core/issues/4251\n\n    if (attr.type === 6\n    /* ATTRIBUTE */\n    && attr.value && attr.name === 'class') {\n      attr.value.content = attr.value.content.replace(/\\s+/g, ' ').trim();\n    }\n\n    if (type === 0\n    /* Start */\n    ) {\n      props.push(attr);\n    }\n\n    if (/^[^\\t\\r\\n\\f />]/.test(context.source)) {\n      emitError(context, 15\n      /* MISSING_WHITESPACE_BETWEEN_ATTRIBUTES */\n      );\n    }\n\n    advanceSpaces(context);\n  }\n\n  return props;\n}\n\nfunction parseAttribute(context, nameSet) {\n  // Name.\n  const start = getCursor(context);\n  const match = /^[^\\t\\r\\n\\f />][^\\t\\r\\n\\f />=]*/.exec(context.source);\n  const name = match[0];\n\n  if (nameSet.has(name)) {\n    emitError(context, 2\n    /* DUPLICATE_ATTRIBUTE */\n    );\n  }\n\n  nameSet.add(name);\n\n  if (name[0] === '=') {\n    emitError(context, 19\n    /* UNEXPECTED_EQUALS_SIGN_BEFORE_ATTRIBUTE_NAME */\n    );\n  }\n\n  {\n    const pattern = /[\"'<]/g;\n    let m;\n\n    while (m = pattern.exec(name)) {\n      emitError(context, 17\n      /* UNEXPECTED_CHARACTER_IN_ATTRIBUTE_NAME */\n      , m.index);\n    }\n  }\n  advanceBy(context, name.length); // Value\n\n  let value = undefined;\n\n  if (/^[\\t\\r\\n\\f ]*=/.test(context.source)) {\n    advanceSpaces(context);\n    advanceBy(context, 1);\n    advanceSpaces(context);\n    value = parseAttributeValue(context);\n\n    if (!value) {\n      emitError(context, 13\n      /* MISSING_ATTRIBUTE_VALUE */\n      );\n    }\n  }\n\n  const loc = getSelection(context, start);\n\n  if (!context.inVPre && /^(v-[A-Za-z0-9-]|:|\\.|@|#)/.test(name)) {\n    const match = /(?:^v-([a-z0-9-]+))?(?:(?::|^\\.|^@|^#)(\\[[^\\]]+\\]|[^\\.]+))?(.+)?$/i.exec(name);\n    let isPropShorthand = startsWith(name, '.');\n    let dirName = match[1] || (isPropShorthand || startsWith(name, ':') ? 'bind' : startsWith(name, '@') ? 'on' : 'slot');\n    let arg;\n\n    if (match[2]) {\n      const isSlot = dirName === 'slot';\n      const startOffset = name.lastIndexOf(match[2]);\n      const loc = getSelection(context, getNewPosition(context, start, startOffset), getNewPosition(context, start, startOffset + match[2].length + (isSlot && match[3] || '').length));\n      let content = match[2];\n      let isStatic = true;\n\n      if (content.startsWith('[')) {\n        isStatic = false;\n\n        if (!content.endsWith(']')) {\n          emitError(context, 27\n          /* X_MISSING_DYNAMIC_DIRECTIVE_ARGUMENT_END */\n          );\n          content = content.slice(1);\n        } else {\n          content = content.slice(1, content.length - 1);\n        }\n      } else if (isSlot) {\n        // #1241 special case for v-slot: vuetify relies extensively on slot\n        // names containing dots. v-slot doesn't have any modifiers and Vue 2.x\n        // supports such usage so we are keeping it consistent with 2.x.\n        content += match[3] || '';\n      }\n\n      arg = {\n        type: 4\n        /* SIMPLE_EXPRESSION */\n        ,\n        content,\n        isStatic,\n        constType: isStatic ? 3\n        /* CAN_STRINGIFY */\n        : 0\n        /* NOT_CONSTANT */\n        ,\n        loc\n      };\n    }\n\n    if (value && value.isQuoted) {\n      const valueLoc = value.loc;\n      valueLoc.start.offset++;\n      valueLoc.start.column++;\n      valueLoc.end = advancePositionWithClone(valueLoc.start, value.content);\n      valueLoc.source = valueLoc.source.slice(1, -1);\n    }\n\n    const modifiers = match[3] ? match[3].slice(1).split('.') : [];\n    if (isPropShorthand) modifiers.push('prop'); // 2.x compat v-bind:foo.sync -> v-model:foo\n\n    if (dirName === 'bind' && arg) {\n      if (modifiers.includes('sync') && checkCompatEnabled(\"COMPILER_V_BIND_SYNC\"\n      /* COMPILER_V_BIND_SYNC */\n      , context, loc, arg.loc.source)) {\n        dirName = 'model';\n        modifiers.splice(modifiers.indexOf('sync'), 1);\n      }\n\n      if (false) {}\n    }\n\n    return {\n      type: 7\n      /* DIRECTIVE */\n      ,\n      name: dirName,\n      exp: value && {\n        type: 4\n        /* SIMPLE_EXPRESSION */\n        ,\n        content: value.content,\n        isStatic: false,\n        // Treat as non-constant by default. This can be potentially set to\n        // other values by `transformExpression` to make it eligible for hoisting.\n        constType: 0\n        /* NOT_CONSTANT */\n        ,\n        loc: value.loc\n      },\n      arg,\n      modifiers,\n      loc\n    };\n  } // missing directive name or illegal directive name\n\n\n  if (!context.inVPre && startsWith(name, 'v-')) {\n    emitError(context, 26\n    /* X_MISSING_DIRECTIVE_NAME */\n    );\n  }\n\n  return {\n    type: 6\n    /* ATTRIBUTE */\n    ,\n    name,\n    value: value && {\n      type: 2\n      /* TEXT */\n      ,\n      content: value.content,\n      loc: value.loc\n    },\n    loc\n  };\n}\n\nfunction parseAttributeValue(context) {\n  const start = getCursor(context);\n  let content;\n  const quote = context.source[0];\n  const isQuoted = quote === `\"` || quote === `'`;\n\n  if (isQuoted) {\n    // Quoted value.\n    advanceBy(context, 1);\n    const endIndex = context.source.indexOf(quote);\n\n    if (endIndex === -1) {\n      content = parseTextData(context, context.source.length, 4\n      /* ATTRIBUTE_VALUE */\n      );\n    } else {\n      content = parseTextData(context, endIndex, 4\n      /* ATTRIBUTE_VALUE */\n      );\n      advanceBy(context, 1);\n    }\n  } else {\n    // Unquoted\n    const match = /^[^\\t\\r\\n\\f >]+/.exec(context.source);\n\n    if (!match) {\n      return undefined;\n    }\n\n    const unexpectedChars = /[\"'<=`]/g;\n    let m;\n\n    while (m = unexpectedChars.exec(match[0])) {\n      emitError(context, 18\n      /* UNEXPECTED_CHARACTER_IN_UNQUOTED_ATTRIBUTE_VALUE */\n      , m.index);\n    }\n\n    content = parseTextData(context, match[0].length, 4\n    /* ATTRIBUTE_VALUE */\n    );\n  }\n\n  return {\n    content,\n    isQuoted,\n    loc: getSelection(context, start)\n  };\n}\n\nfunction parseInterpolation(context, mode) {\n  const [open, close] = context.options.delimiters;\n  const closeIndex = context.source.indexOf(close, open.length);\n\n  if (closeIndex === -1) {\n    emitError(context, 25\n    /* X_MISSING_INTERPOLATION_END */\n    );\n    return undefined;\n  }\n\n  const start = getCursor(context);\n  advanceBy(context, open.length);\n  const innerStart = getCursor(context);\n  const innerEnd = getCursor(context);\n  const rawContentLength = closeIndex - open.length;\n  const rawContent = context.source.slice(0, rawContentLength);\n  const preTrimContent = parseTextData(context, rawContentLength, mode);\n  const content = preTrimContent.trim();\n  const startOffset = preTrimContent.indexOf(content);\n\n  if (startOffset > 0) {\n    advancePositionWithMutation(innerStart, rawContent, startOffset);\n  }\n\n  const endOffset = rawContentLength - (preTrimContent.length - content.length - startOffset);\n  advancePositionWithMutation(innerEnd, rawContent, endOffset);\n  advanceBy(context, close.length);\n  return {\n    type: 5\n    /* INTERPOLATION */\n    ,\n    content: {\n      type: 4\n      /* SIMPLE_EXPRESSION */\n      ,\n      isStatic: false,\n      // Set `isConstant` to false by default and will decide in transformExpression\n      constType: 0\n      /* NOT_CONSTANT */\n      ,\n      content,\n      loc: getSelection(context, innerStart, innerEnd)\n    },\n    loc: getSelection(context, start)\n  };\n}\n\nfunction parseText(context, mode) {\n  const endTokens = mode === 3\n  /* CDATA */\n  ? [']]>'] : ['<', context.options.delimiters[0]];\n  let endIndex = context.source.length;\n\n  for (let i = 0; i < endTokens.length; i++) {\n    const index = context.source.indexOf(endTokens[i], 1);\n\n    if (index !== -1 && endIndex > index) {\n      endIndex = index;\n    }\n  }\n\n  const start = getCursor(context);\n  const content = parseTextData(context, endIndex, mode);\n  return {\n    type: 2\n    /* TEXT */\n    ,\n    content,\n    loc: getSelection(context, start)\n  };\n}\n/**\r\n * Get text data with a given length from the current location.\r\n * This translates HTML entities in the text data.\r\n */\n\n\nfunction parseTextData(context, length, mode) {\n  const rawText = context.source.slice(0, length);\n  advanceBy(context, length);\n\n  if (mode === 2\n  /* RAWTEXT */\n  || mode === 3\n  /* CDATA */\n  || !rawText.includes('&')) {\n    return rawText;\n  } else {\n    // DATA or RCDATA containing \"&\"\". Entity decoding required.\n    return context.options.decodeEntities(rawText, mode === 4\n    /* ATTRIBUTE_VALUE */\n    );\n  }\n}\n\nfunction getCursor(context) {\n  const {\n    column,\n    line,\n    offset\n  } = context;\n  return {\n    column,\n    line,\n    offset\n  };\n}\n\nfunction getSelection(context, start, end) {\n  end = end || getCursor(context);\n  return {\n    start,\n    end,\n    source: context.originalSource.slice(start.offset, end.offset)\n  };\n}\n\nfunction last(xs) {\n  return xs[xs.length - 1];\n}\n\nfunction startsWith(source, searchString) {\n  return source.startsWith(searchString);\n}\n\nfunction advanceBy(context, numberOfCharacters) {\n  const {\n    source\n  } = context;\n  advancePositionWithMutation(context, source, numberOfCharacters);\n  context.source = source.slice(numberOfCharacters);\n}\n\nfunction advanceSpaces(context) {\n  const match = /^[\\t\\r\\n\\f ]+/.exec(context.source);\n\n  if (match) {\n    advanceBy(context, match[0].length);\n  }\n}\n\nfunction getNewPosition(context, start, numberOfCharacters) {\n  return advancePositionWithClone(start, context.originalSource.slice(start.offset, numberOfCharacters), numberOfCharacters);\n}\n\nfunction emitError(context, code, offset, loc = getCursor(context)) {\n  if (offset) {\n    loc.offset += offset;\n    loc.column += offset;\n  }\n\n  context.options.onError(createCompilerError(code, {\n    start: loc,\n    end: loc,\n    source: ''\n  }));\n}\n\nfunction isEnd(context, mode, ancestors) {\n  const s = context.source;\n\n  switch (mode) {\n    case 0\n    /* DATA */\n    :\n      if (startsWith(s, '</')) {\n        // TODO: probably bad performance\n        for (let i = ancestors.length - 1; i >= 0; --i) {\n          if (startsWithEndTagOpen(s, ancestors[i].tag)) {\n            return true;\n          }\n        }\n      }\n\n      break;\n\n    case 1\n    /* RCDATA */\n    :\n    case 2\n    /* RAWTEXT */\n    :\n      {\n        const parent = last(ancestors);\n\n        if (parent && startsWithEndTagOpen(s, parent.tag)) {\n          return true;\n        }\n\n        break;\n      }\n\n    case 3\n    /* CDATA */\n    :\n      if (startsWith(s, ']]>')) {\n        return true;\n      }\n\n      break;\n  }\n\n  return !s;\n}\n\nfunction startsWithEndTagOpen(source, tag) {\n  return startsWith(source, '</') && source.slice(2, 2 + tag.length).toLowerCase() === tag.toLowerCase() && /[\\t\\r\\n\\f />]/.test(source[2 + tag.length] || '>');\n}\n\nfunction hoistStatic(root, context) {\n  walk(root, context, // Root node is unfortunately non-hoistable due to potential parent\n  // fallthrough attributes.\n  isSingleElementRoot(root, root.children[0]));\n}\n\nfunction isSingleElementRoot(root, child) {\n  const {\n    children\n  } = root;\n  return children.length === 1 && child.type === 1\n  /* ELEMENT */\n  && !isSlotOutlet(child);\n}\n\nfunction walk(node, context, doNotHoistNode = false) {\n  const {\n    children\n  } = node;\n  const originalCount = children.length;\n  let hoistedCount = 0;\n\n  for (let i = 0; i < children.length; i++) {\n    const child = children[i]; // only plain elements & text calls are eligible for hoisting.\n\n    if (child.type === 1\n    /* ELEMENT */\n    && child.tagType === 0\n    /* ELEMENT */\n    ) {\n      const constantType = doNotHoistNode ? 0\n      /* NOT_CONSTANT */\n      : getConstantType(child, context);\n\n      if (constantType > 0\n      /* NOT_CONSTANT */\n      ) {\n        if (constantType >= 2\n        /* CAN_HOIST */\n        ) {\n          child.codegenNode.patchFlag = -1\n          /* HOISTED */\n          + ( false ? 0 : ``);\n          child.codegenNode = context.hoist(child.codegenNode);\n          hoistedCount++;\n          continue;\n        }\n      } else {\n        // node may contain dynamic children, but its props may be eligible for\n        // hoisting.\n        const codegenNode = child.codegenNode;\n\n        if (codegenNode.type === 13\n        /* VNODE_CALL */\n        ) {\n          const flag = getPatchFlag(codegenNode);\n\n          if ((!flag || flag === 512\n          /* NEED_PATCH */\n          || flag === 1\n          /* TEXT */\n          ) && getGeneratedPropsConstantType(child, context) >= 2\n          /* CAN_HOIST */\n          ) {\n            const props = getNodeProps(child);\n\n            if (props) {\n              codegenNode.props = context.hoist(props);\n            }\n          }\n\n          if (codegenNode.dynamicProps) {\n            codegenNode.dynamicProps = context.hoist(codegenNode.dynamicProps);\n          }\n        }\n      }\n    } else if (child.type === 12\n    /* TEXT_CALL */\n    && getConstantType(child.content, context) >= 2\n    /* CAN_HOIST */\n    ) {\n      child.codegenNode = context.hoist(child.codegenNode);\n      hoistedCount++;\n    } // walk further\n\n\n    if (child.type === 1\n    /* ELEMENT */\n    ) {\n      const isComponent = child.tagType === 1\n      /* COMPONENT */\n      ;\n\n      if (isComponent) {\n        context.scopes.vSlot++;\n      }\n\n      walk(child, context);\n\n      if (isComponent) {\n        context.scopes.vSlot--;\n      }\n    } else if (child.type === 11\n    /* FOR */\n    ) {\n      // Do not hoist v-for single child because it has to be a block\n      walk(child, context, child.children.length === 1);\n    } else if (child.type === 9\n    /* IF */\n    ) {\n      for (let i = 0; i < child.branches.length; i++) {\n        // Do not hoist v-if single child because it has to be a block\n        walk(child.branches[i], context, child.branches[i].children.length === 1);\n      }\n    }\n  }\n\n  if (hoistedCount && context.transformHoist) {\n    context.transformHoist(children, context, node);\n  } // all children were hoisted - the entire children array is hoistable.\n\n\n  if (hoistedCount && hoistedCount === originalCount && node.type === 1\n  /* ELEMENT */\n  && node.tagType === 0\n  /* ELEMENT */\n  && node.codegenNode && node.codegenNode.type === 13\n  /* VNODE_CALL */\n  && shared_esm_bundler_isArray(node.codegenNode.children)) {\n    node.codegenNode.children = context.hoist(createArrayExpression(node.codegenNode.children));\n  }\n}\n\nfunction getConstantType(node, context) {\n  const {\n    constantCache\n  } = context;\n\n  switch (node.type) {\n    case 1\n    /* ELEMENT */\n    :\n      if (node.tagType !== 0\n      /* ELEMENT */\n      ) {\n        return 0\n        /* NOT_CONSTANT */\n        ;\n      }\n\n      const cached = constantCache.get(node);\n\n      if (cached !== undefined) {\n        return cached;\n      }\n\n      const codegenNode = node.codegenNode;\n\n      if (codegenNode.type !== 13\n      /* VNODE_CALL */\n      ) {\n        return 0\n        /* NOT_CONSTANT */\n        ;\n      }\n\n      if (codegenNode.isBlock && node.tag !== 'svg' && node.tag !== 'foreignObject') {\n        return 0\n        /* NOT_CONSTANT */\n        ;\n      }\n\n      const flag = getPatchFlag(codegenNode);\n\n      if (!flag) {\n        let returnType = 3\n        /* CAN_STRINGIFY */\n        ; // Element itself has no patch flag. However we still need to check:\n        // 1. Even for a node with no patch flag, it is possible for it to contain\n        // non-hoistable expressions that refers to scope variables, e.g. compiler\n        // injected keys or cached event handlers. Therefore we need to always\n        // check the codegenNode's props to be sure.\n\n        const generatedPropsType = getGeneratedPropsConstantType(node, context);\n\n        if (generatedPropsType === 0\n        /* NOT_CONSTANT */\n        ) {\n          constantCache.set(node, 0\n          /* NOT_CONSTANT */\n          );\n          return 0\n          /* NOT_CONSTANT */\n          ;\n        }\n\n        if (generatedPropsType < returnType) {\n          returnType = generatedPropsType;\n        } // 2. its children.\n\n\n        for (let i = 0; i < node.children.length; i++) {\n          const childType = getConstantType(node.children[i], context);\n\n          if (childType === 0\n          /* NOT_CONSTANT */\n          ) {\n            constantCache.set(node, 0\n            /* NOT_CONSTANT */\n            );\n            return 0\n            /* NOT_CONSTANT */\n            ;\n          }\n\n          if (childType < returnType) {\n            returnType = childType;\n          }\n        } // 3. if the type is not already CAN_SKIP_PATCH which is the lowest non-0\n        // type, check if any of the props can cause the type to be lowered\n        // we can skip can_patch because it's guaranteed by the absence of a\n        // patchFlag.\n\n\n        if (returnType > 1\n        /* CAN_SKIP_PATCH */\n        ) {\n          for (let i = 0; i < node.props.length; i++) {\n            const p = node.props[i];\n\n            if (p.type === 7\n            /* DIRECTIVE */\n            && p.name === 'bind' && p.exp) {\n              const expType = getConstantType(p.exp, context);\n\n              if (expType === 0\n              /* NOT_CONSTANT */\n              ) {\n                constantCache.set(node, 0\n                /* NOT_CONSTANT */\n                );\n                return 0\n                /* NOT_CONSTANT */\n                ;\n              }\n\n              if (expType < returnType) {\n                returnType = expType;\n              }\n            }\n          }\n        } // only svg/foreignObject could be block here, however if they are\n        // static then they don't need to be blocks since there will be no\n        // nested updates.\n\n\n        if (codegenNode.isBlock) {\n          context.removeHelper(OPEN_BLOCK);\n          context.removeHelper(getVNodeBlockHelper(context.inSSR, codegenNode.isComponent));\n          codegenNode.isBlock = false;\n          context.helper(getVNodeHelper(context.inSSR, codegenNode.isComponent));\n        }\n\n        constantCache.set(node, returnType);\n        return returnType;\n      } else {\n        constantCache.set(node, 0\n        /* NOT_CONSTANT */\n        );\n        return 0\n        /* NOT_CONSTANT */\n        ;\n      }\n\n    case 2\n    /* TEXT */\n    :\n    case 3\n    /* COMMENT */\n    :\n      return 3\n      /* CAN_STRINGIFY */\n      ;\n\n    case 9\n    /* IF */\n    :\n    case 11\n    /* FOR */\n    :\n    case 10\n    /* IF_BRANCH */\n    :\n      return 0\n      /* NOT_CONSTANT */\n      ;\n\n    case 5\n    /* INTERPOLATION */\n    :\n    case 12\n    /* TEXT_CALL */\n    :\n      return getConstantType(node.content, context);\n\n    case 4\n    /* SIMPLE_EXPRESSION */\n    :\n      return node.constType;\n\n    case 8\n    /* COMPOUND_EXPRESSION */\n    :\n      let returnType = 3\n      /* CAN_STRINGIFY */\n      ;\n\n      for (let i = 0; i < node.children.length; i++) {\n        const child = node.children[i];\n\n        if (shared_esm_bundler_isString(child) || isSymbol(child)) {\n          continue;\n        }\n\n        const childType = getConstantType(child, context);\n\n        if (childType === 0\n        /* NOT_CONSTANT */\n        ) {\n          return 0\n          /* NOT_CONSTANT */\n          ;\n        } else if (childType < returnType) {\n          returnType = childType;\n        }\n      }\n\n      return returnType;\n\n    default:\n      if (false) {}\n      return 0\n      /* NOT_CONSTANT */\n      ;\n  }\n}\n\nconst allowHoistedHelperSet = new Set([NORMALIZE_CLASS, NORMALIZE_STYLE, NORMALIZE_PROPS, GUARD_REACTIVE_PROPS]);\n\nfunction getConstantTypeOfHelperCall(value, context) {\n  if (value.type === 14\n  /* JS_CALL_EXPRESSION */\n  && !shared_esm_bundler_isString(value.callee) && allowHoistedHelperSet.has(value.callee)) {\n    const arg = value.arguments[0];\n\n    if (arg.type === 4\n    /* SIMPLE_EXPRESSION */\n    ) {\n      return getConstantType(arg, context);\n    } else if (arg.type === 14\n    /* JS_CALL_EXPRESSION */\n    ) {\n      // in the case of nested helper call, e.g. `normalizeProps(guardReactiveProps(exp))`\n      return getConstantTypeOfHelperCall(arg, context);\n    }\n  }\n\n  return 0\n  /* NOT_CONSTANT */\n  ;\n}\n\nfunction getGeneratedPropsConstantType(node, context) {\n  let returnType = 3\n  /* CAN_STRINGIFY */\n  ;\n  const props = getNodeProps(node);\n\n  if (props && props.type === 15\n  /* JS_OBJECT_EXPRESSION */\n  ) {\n    const {\n      properties\n    } = props;\n\n    for (let i = 0; i < properties.length; i++) {\n      const {\n        key,\n        value\n      } = properties[i];\n      const keyType = getConstantType(key, context);\n\n      if (keyType === 0\n      /* NOT_CONSTANT */\n      ) {\n        return keyType;\n      }\n\n      if (keyType < returnType) {\n        returnType = keyType;\n      }\n\n      let valueType;\n\n      if (value.type === 4\n      /* SIMPLE_EXPRESSION */\n      ) {\n        valueType = getConstantType(value, context);\n      } else if (value.type === 14\n      /* JS_CALL_EXPRESSION */\n      ) {\n        // some helper calls can be hoisted,\n        // such as the `normalizeProps` generated by the compiler for pre-normalize class,\n        // in this case we need to respect the ConstantType of the helper's arguments\n        valueType = getConstantTypeOfHelperCall(value, context);\n      } else {\n        valueType = 0\n        /* NOT_CONSTANT */\n        ;\n      }\n\n      if (valueType === 0\n      /* NOT_CONSTANT */\n      ) {\n        return valueType;\n      }\n\n      if (valueType < returnType) {\n        returnType = valueType;\n      }\n    }\n  }\n\n  return returnType;\n}\n\nfunction getNodeProps(node) {\n  const codegenNode = node.codegenNode;\n\n  if (codegenNode.type === 13\n  /* VNODE_CALL */\n  ) {\n    return codegenNode.props;\n  }\n}\n\nfunction getPatchFlag(node) {\n  const flag = node.patchFlag;\n  return flag ? parseInt(flag, 10) : undefined;\n}\n\nfunction createTransformContext(root, {\n  filename = '',\n  prefixIdentifiers = false,\n  hoistStatic = false,\n  cacheHandlers = false,\n  nodeTransforms = [],\n  directiveTransforms = {},\n  transformHoist = null,\n  isBuiltInComponent = shared_esm_bundler_NOOP,\n  isCustomElement = shared_esm_bundler_NOOP,\n  expressionPlugins = [],\n  scopeId = null,\n  slotted = true,\n  ssr = false,\n  inSSR = false,\n  ssrCssVars = ``,\n  bindingMetadata = EMPTY_OBJ,\n  inline = false,\n  isTS = false,\n  onError = defaultOnError,\n  onWarn = defaultOnWarn,\n  compatConfig\n}) {\n  const nameMatch = filename.replace(/\\?.*$/, '').match(/([^/\\\\]+)\\.\\w+$/);\n  const context = {\n    // options\n    selfName: nameMatch && shared_esm_bundler_capitalize(camelize(nameMatch[1])),\n    prefixIdentifiers,\n    hoistStatic,\n    cacheHandlers,\n    nodeTransforms,\n    directiveTransforms,\n    transformHoist,\n    isBuiltInComponent,\n    isCustomElement,\n    expressionPlugins,\n    scopeId,\n    slotted,\n    ssr,\n    inSSR,\n    ssrCssVars,\n    bindingMetadata,\n    inline,\n    isTS,\n    onError,\n    onWarn,\n    compatConfig,\n    // state\n    root,\n    helpers: new Map(),\n    components: new Set(),\n    directives: new Set(),\n    hoists: [],\n    imports: [],\n    constantCache: new Map(),\n    temps: 0,\n    cached: 0,\n    identifiers: Object.create(null),\n    scopes: {\n      vFor: 0,\n      vSlot: 0,\n      vPre: 0,\n      vOnce: 0\n    },\n    parent: null,\n    currentNode: root,\n    childIndex: 0,\n    inVOnce: false,\n\n    // methods\n    helper(name) {\n      const count = context.helpers.get(name) || 0;\n      context.helpers.set(name, count + 1);\n      return name;\n    },\n\n    removeHelper(name) {\n      const count = context.helpers.get(name);\n\n      if (count) {\n        const currentCount = count - 1;\n\n        if (!currentCount) {\n          context.helpers.delete(name);\n        } else {\n          context.helpers.set(name, currentCount);\n        }\n      }\n    },\n\n    helperString(name) {\n      return `_${helperNameMap[context.helper(name)]}`;\n    },\n\n    replaceNode(node) {\n      /* istanbul ignore if */\n      if (false) {}\n\n      context.parent.children[context.childIndex] = context.currentNode = node;\n    },\n\n    removeNode(node) {\n      if (false) {}\n\n      const list = context.parent.children;\n      const removalIndex = node ? list.indexOf(node) : context.currentNode ? context.childIndex : -1;\n      /* istanbul ignore if */\n\n      if (false) {}\n\n      if (!node || node === context.currentNode) {\n        // current node removed\n        context.currentNode = null;\n        context.onNodeRemoved();\n      } else {\n        // sibling node removed\n        if (context.childIndex > removalIndex) {\n          context.childIndex--;\n          context.onNodeRemoved();\n        }\n      }\n\n      context.parent.children.splice(removalIndex, 1);\n    },\n\n    onNodeRemoved: () => {},\n\n    addIdentifiers(exp) {},\n\n    removeIdentifiers(exp) {},\n\n    hoist(exp) {\n      if (shared_esm_bundler_isString(exp)) exp = createSimpleExpression(exp);\n      context.hoists.push(exp);\n      const identifier = createSimpleExpression(`_hoisted_${context.hoists.length}`, false, exp.loc, 2\n      /* CAN_HOIST */\n      );\n      identifier.hoisted = exp;\n      return identifier;\n    },\n\n    cache(exp, isVNode = false) {\n      return createCacheExpression(context.cached++, exp, isVNode);\n    }\n\n  };\n  {\n    context.filters = new Set();\n  }\n  return context;\n}\n\nfunction transform(root, options) {\n  const context = createTransformContext(root, options);\n  traverseNode(root, context);\n\n  if (options.hoistStatic) {\n    hoistStatic(root, context);\n  }\n\n  if (!options.ssr) {\n    createRootCodegen(root, context);\n  } // finalize meta information\n\n\n  root.helpers = [...context.helpers.keys()];\n  root.components = [...context.components];\n  root.directives = [...context.directives];\n  root.imports = context.imports;\n  root.hoists = context.hoists;\n  root.temps = context.temps;\n  root.cached = context.cached;\n  {\n    root.filters = [...context.filters];\n  }\n}\n\nfunction createRootCodegen(root, context) {\n  const {\n    helper\n  } = context;\n  const {\n    children\n  } = root;\n\n  if (children.length === 1) {\n    const child = children[0]; // if the single child is an element, turn it into a block.\n\n    if (isSingleElementRoot(root, child) && child.codegenNode) {\n      // single element root is never hoisted so codegenNode will never be\n      // SimpleExpressionNode\n      const codegenNode = child.codegenNode;\n\n      if (codegenNode.type === 13\n      /* VNODE_CALL */\n      ) {\n        makeBlock(codegenNode, context);\n      }\n\n      root.codegenNode = codegenNode;\n    } else {\n      // - single <slot/>, IfNode, ForNode: already blocks.\n      // - single text node: always patched.\n      // root codegen falls through via genNode()\n      root.codegenNode = child;\n    }\n  } else if (children.length > 1) {\n    // root has multiple nodes - return a fragment block.\n    let patchFlag = 64\n    /* STABLE_FRAGMENT */\n    ;\n    let patchFlagText = PatchFlagNames[64]; // check if the fragment actually contains a single valid child with\n    // the rest being comments\n\n    if (false) {}\n\n    root.codegenNode = createVNodeCall(context, helper(FRAGMENT), undefined, root.children, patchFlag + ( false ? 0 : ``), undefined, undefined, true, undefined, false\n    /* isComponent */\n    );\n  } else ;\n}\n\nfunction traverseChildren(parent, context) {\n  let i = 0;\n\n  const nodeRemoved = () => {\n    i--;\n  };\n\n  for (; i < parent.children.length; i++) {\n    const child = parent.children[i];\n    if (shared_esm_bundler_isString(child)) continue;\n    context.parent = parent;\n    context.childIndex = i;\n    context.onNodeRemoved = nodeRemoved;\n    traverseNode(child, context);\n  }\n}\n\nfunction traverseNode(node, context) {\n  context.currentNode = node; // apply transform plugins\n\n  const {\n    nodeTransforms\n  } = context;\n  const exitFns = [];\n\n  for (let i = 0; i < nodeTransforms.length; i++) {\n    const onExit = nodeTransforms[i](node, context);\n\n    if (onExit) {\n      if (shared_esm_bundler_isArray(onExit)) {\n        exitFns.push(...onExit);\n      } else {\n        exitFns.push(onExit);\n      }\n    }\n\n    if (!context.currentNode) {\n      // node was removed\n      return;\n    } else {\n      // node may have been replaced\n      node = context.currentNode;\n    }\n  }\n\n  switch (node.type) {\n    case 3\n    /* COMMENT */\n    :\n      if (!context.ssr) {\n        // inject import for the Comment symbol, which is needed for creating\n        // comment nodes with `createVNode`\n        context.helper(CREATE_COMMENT);\n      }\n\n      break;\n\n    case 5\n    /* INTERPOLATION */\n    :\n      // no need to traverse, but we need to inject toString helper\n      if (!context.ssr) {\n        context.helper(TO_DISPLAY_STRING);\n      }\n\n      break;\n    // for container types, further traverse downwards\n\n    case 9\n    /* IF */\n    :\n      for (let i = 0; i < node.branches.length; i++) {\n        traverseNode(node.branches[i], context);\n      }\n\n      break;\n\n    case 10\n    /* IF_BRANCH */\n    :\n    case 11\n    /* FOR */\n    :\n    case 1\n    /* ELEMENT */\n    :\n    case 0\n    /* ROOT */\n    :\n      traverseChildren(node, context);\n      break;\n  } // exit transforms\n\n\n  context.currentNode = node;\n  let i = exitFns.length;\n\n  while (i--) {\n    exitFns[i]();\n  }\n}\n\nfunction createStructuralDirectiveTransform(name, fn) {\n  const matches = shared_esm_bundler_isString(name) ? n => n === name : n => name.test(n);\n  return (node, context) => {\n    if (node.type === 1\n    /* ELEMENT */\n    ) {\n      const {\n        props\n      } = node; // structural directive transforms are not concerned with slots\n      // as they are handled separately in vSlot.ts\n\n      if (node.tagType === 3\n      /* TEMPLATE */\n      && props.some(isVSlot)) {\n        return;\n      }\n\n      const exitFns = [];\n\n      for (let i = 0; i < props.length; i++) {\n        const prop = props[i];\n\n        if (prop.type === 7\n        /* DIRECTIVE */\n        && matches(prop.name)) {\n          // structural directives are removed to avoid infinite recursion\n          // also we remove them *before* applying so that it can further\n          // traverse itself in case it moves the node around\n          props.splice(i, 1);\n          i--;\n          const onExit = fn(node, prop, context);\n          if (onExit) exitFns.push(onExit);\n        }\n      }\n\n      return exitFns;\n    }\n  };\n}\n\nconst PURE_ANNOTATION = `/*#__PURE__*/`;\n\nfunction createCodegenContext(ast, {\n  mode = 'function',\n  prefixIdentifiers = mode === 'module',\n  sourceMap = false,\n  filename = `template.vue.html`,\n  scopeId = null,\n  optimizeImports = false,\n  runtimeGlobalName = `Vue`,\n  runtimeModuleName = `vue`,\n  ssrRuntimeModuleName = 'vue/server-renderer',\n  ssr = false,\n  isTS = false,\n  inSSR = false\n}) {\n  const context = {\n    mode,\n    prefixIdentifiers,\n    sourceMap,\n    filename,\n    scopeId,\n    optimizeImports,\n    runtimeGlobalName,\n    runtimeModuleName,\n    ssrRuntimeModuleName,\n    ssr,\n    isTS,\n    inSSR,\n    source: ast.loc.source,\n    code: ``,\n    column: 1,\n    line: 1,\n    offset: 0,\n    indentLevel: 0,\n    pure: false,\n    map: undefined,\n\n    helper(key) {\n      return `_${helperNameMap[key]}`;\n    },\n\n    push(code, node) {\n      context.code += code;\n    },\n\n    indent() {\n      newline(++context.indentLevel);\n    },\n\n    deindent(withoutNewLine = false) {\n      if (withoutNewLine) {\n        --context.indentLevel;\n      } else {\n        newline(--context.indentLevel);\n      }\n    },\n\n    newline() {\n      newline(context.indentLevel);\n    }\n\n  };\n\n  function newline(n) {\n    context.push('\\n' + `  `.repeat(n));\n  }\n\n  return context;\n}\n\nfunction generate(ast, options = {}) {\n  const context = createCodegenContext(ast, options);\n  if (options.onContextCreated) options.onContextCreated(context);\n  const {\n    mode,\n    push,\n    prefixIdentifiers,\n    indent,\n    deindent,\n    newline,\n    scopeId,\n    ssr\n  } = context;\n  const hasHelpers = ast.helpers.length > 0;\n  const useWithBlock = !prefixIdentifiers && mode !== 'module'; // preambles\n  // in setup() inline mode, the preamble is generated in a sub context\n  // and returned separately.\n\n  const preambleContext = context;\n  {\n    genFunctionPreamble(ast, preambleContext);\n  } // enter render function\n\n  const functionName = ssr ? `ssrRender` : `render`;\n  const args = ssr ? ['_ctx', '_push', '_parent', '_attrs'] : ['_ctx', '_cache'];\n  const signature = args.join(', ');\n  {\n    push(`function ${functionName}(${signature}) {`);\n  }\n  indent();\n\n  if (useWithBlock) {\n    push(`with (_ctx) {`);\n    indent(); // function mode const declarations should be inside with block\n    // also they should be renamed to avoid collision with user properties\n\n    if (hasHelpers) {\n      push(`const { ${ast.helpers.map(s => `${helperNameMap[s]}: _${helperNameMap[s]}`).join(', ')} } = _Vue`);\n      push(`\\n`);\n      newline();\n    }\n  } // generate asset resolution statements\n\n\n  if (ast.components.length) {\n    genAssets(ast.components, 'component', context);\n\n    if (ast.directives.length || ast.temps > 0) {\n      newline();\n    }\n  }\n\n  if (ast.directives.length) {\n    genAssets(ast.directives, 'directive', context);\n\n    if (ast.temps > 0) {\n      newline();\n    }\n  }\n\n  if (ast.filters && ast.filters.length) {\n    newline();\n    genAssets(ast.filters, 'filter', context);\n    newline();\n  }\n\n  if (ast.temps > 0) {\n    push(`let `);\n\n    for (let i = 0; i < ast.temps; i++) {\n      push(`${i > 0 ? `, ` : ``}_temp${i}`);\n    }\n  }\n\n  if (ast.components.length || ast.directives.length || ast.temps) {\n    push(`\\n`);\n    newline();\n  } // generate the VNode tree expression\n\n\n  if (!ssr) {\n    push(`return `);\n  }\n\n  if (ast.codegenNode) {\n    genNode(ast.codegenNode, context);\n  } else {\n    push(`null`);\n  }\n\n  if (useWithBlock) {\n    deindent();\n    push(`}`);\n  }\n\n  deindent();\n  push(`}`);\n  return {\n    ast,\n    code: context.code,\n    preamble: ``,\n    // SourceMapGenerator does have toJSON() method but it's not in the types\n    map: context.map ? context.map.toJSON() : undefined\n  };\n}\n\nfunction genFunctionPreamble(ast, context) {\n  const {\n    ssr,\n    prefixIdentifiers,\n    push,\n    newline,\n    runtimeModuleName,\n    runtimeGlobalName,\n    ssrRuntimeModuleName\n  } = context;\n  const VueBinding = runtimeGlobalName;\n\n  const aliasHelper = s => `${helperNameMap[s]}: _${helperNameMap[s]}`; // Generate const declaration for helpers\n  // In prefix mode, we place the const declaration at top so it's done\n  // only once; But if we not prefixing, we place the declaration inside the\n  // with block so it doesn't incur the `in` check cost for every helper access.\n\n\n  if (ast.helpers.length > 0) {\n    {\n      // \"with\" mode.\n      // save Vue in a separate variable to avoid collision\n      push(`const _Vue = ${VueBinding}\\n`); // in \"with\" mode, helpers are declared inside the with block to avoid\n      // has check cost, but hoists are lifted out of the function - we need\n      // to provide the helper here.\n\n      if (ast.hoists.length) {\n        const staticHelpers = [CREATE_VNODE, CREATE_ELEMENT_VNODE, CREATE_COMMENT, CREATE_TEXT, CREATE_STATIC].filter(helper => ast.helpers.includes(helper)).map(aliasHelper).join(', ');\n        push(`const { ${staticHelpers} } = _Vue\\n`);\n      }\n    }\n  }\n\n  genHoists(ast.hoists, context);\n  newline();\n  push(`return `);\n}\n\nfunction genAssets(assets, type, {\n  helper,\n  push,\n  newline,\n  isTS\n}) {\n  const resolver = helper(type === 'filter' ? RESOLVE_FILTER : type === 'component' ? RESOLVE_COMPONENT : RESOLVE_DIRECTIVE);\n\n  for (let i = 0; i < assets.length; i++) {\n    let id = assets[i]; // potential component implicit self-reference inferred from SFC filename\n\n    const maybeSelfReference = id.endsWith('__self');\n\n    if (maybeSelfReference) {\n      id = id.slice(0, -6);\n    }\n\n    push(`const ${toValidAssetId(id, type)} = ${resolver}(${JSON.stringify(id)}${maybeSelfReference ? `, true` : ``})${isTS ? `!` : ``}`);\n\n    if (i < assets.length - 1) {\n      newline();\n    }\n  }\n}\n\nfunction genHoists(hoists, context) {\n  if (!hoists.length) {\n    return;\n  }\n\n  context.pure = true;\n  const {\n    push,\n    newline,\n    helper,\n    scopeId,\n    mode\n  } = context;\n  newline();\n\n  for (let i = 0; i < hoists.length; i++) {\n    const exp = hoists[i];\n\n    if (exp) {\n      push(`const _hoisted_${i + 1} = ${``}`);\n      genNode(exp, context);\n      newline();\n    }\n  }\n\n  context.pure = false;\n}\n\nfunction isText$1(n) {\n  return isString(n) || n.type === 4\n  /* SIMPLE_EXPRESSION */\n  || n.type === 2\n  /* TEXT */\n  || n.type === 5\n  /* INTERPOLATION */\n  || n.type === 8\n  /* COMPOUND_EXPRESSION */\n  ;\n}\n\nfunction genNodeListAsArray(nodes, context) {\n  const multilines = nodes.length > 3 ||  false && 0;\n  context.push(`[`);\n  multilines && context.indent();\n  genNodeList(nodes, context, multilines);\n  multilines && context.deindent();\n  context.push(`]`);\n}\n\nfunction genNodeList(nodes, context, multilines = false, comma = true) {\n  const {\n    push,\n    newline\n  } = context;\n\n  for (let i = 0; i < nodes.length; i++) {\n    const node = nodes[i];\n\n    if (shared_esm_bundler_isString(node)) {\n      push(node);\n    } else if (shared_esm_bundler_isArray(node)) {\n      genNodeListAsArray(node, context);\n    } else {\n      genNode(node, context);\n    }\n\n    if (i < nodes.length - 1) {\n      if (multilines) {\n        comma && push(',');\n        newline();\n      } else {\n        comma && push(', ');\n      }\n    }\n  }\n}\n\nfunction genNode(node, context) {\n  if (shared_esm_bundler_isString(node)) {\n    context.push(node);\n    return;\n  }\n\n  if (isSymbol(node)) {\n    context.push(context.helper(node));\n    return;\n  }\n\n  switch (node.type) {\n    case 1\n    /* ELEMENT */\n    :\n    case 9\n    /* IF */\n    :\n    case 11\n    /* FOR */\n    :\n       false && 0;\n      genNode(node.codegenNode, context);\n      break;\n\n    case 2\n    /* TEXT */\n    :\n      genText(node, context);\n      break;\n\n    case 4\n    /* SIMPLE_EXPRESSION */\n    :\n      genExpression(node, context);\n      break;\n\n    case 5\n    /* INTERPOLATION */\n    :\n      genInterpolation(node, context);\n      break;\n\n    case 12\n    /* TEXT_CALL */\n    :\n      genNode(node.codegenNode, context);\n      break;\n\n    case 8\n    /* COMPOUND_EXPRESSION */\n    :\n      genCompoundExpression(node, context);\n      break;\n\n    case 3\n    /* COMMENT */\n    :\n      genComment(node, context);\n      break;\n\n    case 13\n    /* VNODE_CALL */\n    :\n      genVNodeCall(node, context);\n      break;\n\n    case 14\n    /* JS_CALL_EXPRESSION */\n    :\n      genCallExpression(node, context);\n      break;\n\n    case 15\n    /* JS_OBJECT_EXPRESSION */\n    :\n      genObjectExpression(node, context);\n      break;\n\n    case 17\n    /* JS_ARRAY_EXPRESSION */\n    :\n      genArrayExpression(node, context);\n      break;\n\n    case 18\n    /* JS_FUNCTION_EXPRESSION */\n    :\n      genFunctionExpression(node, context);\n      break;\n\n    case 19\n    /* JS_CONDITIONAL_EXPRESSION */\n    :\n      genConditionalExpression(node, context);\n      break;\n\n    case 20\n    /* JS_CACHE_EXPRESSION */\n    :\n      genCacheExpression(node, context);\n      break;\n\n    case 21\n    /* JS_BLOCK_STATEMENT */\n    :\n      genNodeList(node.body, context, true, false);\n      break;\n    // SSR only types\n\n    case 22\n    /* JS_TEMPLATE_LITERAL */\n    :\n      break;\n\n    case 23\n    /* JS_IF_STATEMENT */\n    :\n      break;\n\n    case 24\n    /* JS_ASSIGNMENT_EXPRESSION */\n    :\n      break;\n\n    case 25\n    /* JS_SEQUENCE_EXPRESSION */\n    :\n      break;\n\n    case 26\n    /* JS_RETURN_STATEMENT */\n    :\n      break;\n\n    /* istanbul ignore next */\n\n    case 10\n    /* IF_BRANCH */\n    :\n      // noop\n      break;\n\n    default:\n      if (false) {}\n\n  }\n}\n\nfunction genText(node, context) {\n  context.push(JSON.stringify(node.content), node);\n}\n\nfunction genExpression(node, context) {\n  const {\n    content,\n    isStatic\n  } = node;\n  context.push(isStatic ? JSON.stringify(content) : content, node);\n}\n\nfunction genInterpolation(node, context) {\n  const {\n    push,\n    helper,\n    pure\n  } = context;\n  if (pure) push(PURE_ANNOTATION);\n  push(`${helper(TO_DISPLAY_STRING)}(`);\n  genNode(node.content, context);\n  push(`)`);\n}\n\nfunction genCompoundExpression(node, context) {\n  for (let i = 0; i < node.children.length; i++) {\n    const child = node.children[i];\n\n    if (shared_esm_bundler_isString(child)) {\n      context.push(child);\n    } else {\n      genNode(child, context);\n    }\n  }\n}\n\nfunction genExpressionAsPropertyKey(node, context) {\n  const {\n    push\n  } = context;\n\n  if (node.type === 8\n  /* COMPOUND_EXPRESSION */\n  ) {\n    push(`[`);\n    genCompoundExpression(node, context);\n    push(`]`);\n  } else if (node.isStatic) {\n    // only quote keys if necessary\n    const text = isSimpleIdentifier(node.content) ? node.content : JSON.stringify(node.content);\n    push(text, node);\n  } else {\n    push(`[${node.content}]`, node);\n  }\n}\n\nfunction genComment(node, context) {\n  const {\n    push,\n    helper,\n    pure\n  } = context;\n\n  if (pure) {\n    push(PURE_ANNOTATION);\n  }\n\n  push(`${helper(CREATE_COMMENT)}(${JSON.stringify(node.content)})`, node);\n}\n\nfunction genVNodeCall(node, context) {\n  const {\n    push,\n    helper,\n    pure\n  } = context;\n  const {\n    tag,\n    props,\n    children,\n    patchFlag,\n    dynamicProps,\n    directives,\n    isBlock,\n    disableTracking,\n    isComponent\n  } = node;\n\n  if (directives) {\n    push(helper(WITH_DIRECTIVES) + `(`);\n  }\n\n  if (isBlock) {\n    push(`(${helper(OPEN_BLOCK)}(${disableTracking ? `true` : ``}), `);\n  }\n\n  if (pure) {\n    push(PURE_ANNOTATION);\n  }\n\n  const callHelper = isBlock ? getVNodeBlockHelper(context.inSSR, isComponent) : getVNodeHelper(context.inSSR, isComponent);\n  push(helper(callHelper) + `(`, node);\n  genNodeList(genNullableArgs([tag, props, children, patchFlag, dynamicProps]), context);\n  push(`)`);\n\n  if (isBlock) {\n    push(`)`);\n  }\n\n  if (directives) {\n    push(`, `);\n    genNode(directives, context);\n    push(`)`);\n  }\n}\n\nfunction genNullableArgs(args) {\n  let i = args.length;\n\n  while (i--) {\n    if (args[i] != null) break;\n  }\n\n  return args.slice(0, i + 1).map(arg => arg || `null`);\n} // JavaScript\n\n\nfunction genCallExpression(node, context) {\n  const {\n    push,\n    helper,\n    pure\n  } = context;\n  const callee = shared_esm_bundler_isString(node.callee) ? node.callee : helper(node.callee);\n\n  if (pure) {\n    push(PURE_ANNOTATION);\n  }\n\n  push(callee + `(`, node);\n  genNodeList(node.arguments, context);\n  push(`)`);\n}\n\nfunction genObjectExpression(node, context) {\n  const {\n    push,\n    indent,\n    deindent,\n    newline\n  } = context;\n  const {\n    properties\n  } = node;\n\n  if (!properties.length) {\n    push(`{}`, node);\n    return;\n  }\n\n  const multilines = properties.length > 1 ||  false && 0;\n  push(multilines ? `{` : `{ `);\n  multilines && indent();\n\n  for (let i = 0; i < properties.length; i++) {\n    const {\n      key,\n      value\n    } = properties[i]; // key\n\n    genExpressionAsPropertyKey(key, context);\n    push(`: `); // value\n\n    genNode(value, context);\n\n    if (i < properties.length - 1) {\n      // will only reach this if it's multilines\n      push(`,`);\n      newline();\n    }\n  }\n\n  multilines && deindent();\n  push(multilines ? `}` : ` }`);\n}\n\nfunction genArrayExpression(node, context) {\n  genNodeListAsArray(node.elements, context);\n}\n\nfunction genFunctionExpression(node, context) {\n  const {\n    push,\n    indent,\n    deindent\n  } = context;\n  const {\n    params,\n    returns,\n    body,\n    newline,\n    isSlot\n  } = node;\n\n  if (isSlot) {\n    // wrap slot functions with owner context\n    push(`_${helperNameMap[WITH_CTX]}(`);\n  }\n\n  push(`(`, node);\n\n  if (shared_esm_bundler_isArray(params)) {\n    genNodeList(params, context);\n  } else if (params) {\n    genNode(params, context);\n  }\n\n  push(`) => `);\n\n  if (newline || body) {\n    push(`{`);\n    indent();\n  }\n\n  if (returns) {\n    if (newline) {\n      push(`return `);\n    }\n\n    if (shared_esm_bundler_isArray(returns)) {\n      genNodeListAsArray(returns, context);\n    } else {\n      genNode(returns, context);\n    }\n  } else if (body) {\n    genNode(body, context);\n  }\n\n  if (newline || body) {\n    deindent();\n    push(`}`);\n  }\n\n  if (isSlot) {\n    if (node.isNonScopedSlot) {\n      push(`, undefined, true`);\n    }\n\n    push(`)`);\n  }\n}\n\nfunction genConditionalExpression(node, context) {\n  const {\n    test,\n    consequent,\n    alternate,\n    newline: needNewline\n  } = node;\n  const {\n    push,\n    indent,\n    deindent,\n    newline\n  } = context;\n\n  if (test.type === 4\n  /* SIMPLE_EXPRESSION */\n  ) {\n    const needsParens = !isSimpleIdentifier(test.content);\n    needsParens && push(`(`);\n    genExpression(test, context);\n    needsParens && push(`)`);\n  } else {\n    push(`(`);\n    genNode(test, context);\n    push(`)`);\n  }\n\n  needNewline && indent();\n  context.indentLevel++;\n  needNewline || push(` `);\n  push(`? `);\n  genNode(consequent, context);\n  context.indentLevel--;\n  needNewline && newline();\n  needNewline || push(` `);\n  push(`: `);\n  const isNested = alternate.type === 19\n  /* JS_CONDITIONAL_EXPRESSION */\n  ;\n\n  if (!isNested) {\n    context.indentLevel++;\n  }\n\n  genNode(alternate, context);\n\n  if (!isNested) {\n    context.indentLevel--;\n  }\n\n  needNewline && deindent(true\n  /* without newline */\n  );\n}\n\nfunction genCacheExpression(node, context) {\n  const {\n    push,\n    helper,\n    indent,\n    deindent,\n    newline\n  } = context;\n  push(`_cache[${node.index}] || (`);\n\n  if (node.isVNode) {\n    indent();\n    push(`${helper(SET_BLOCK_TRACKING)}(-1),`);\n    newline();\n  }\n\n  push(`_cache[${node.index}] = `);\n  genNode(node.value, context);\n\n  if (node.isVNode) {\n    push(`,`);\n    newline();\n    push(`${helper(SET_BLOCK_TRACKING)}(1),`);\n    newline();\n    push(`_cache[${node.index}]`);\n    deindent();\n  }\n\n  push(`)`);\n}\n\nfunction walkIdentifiers(root, onIdentifier, includeAll = false, parentStack = [], knownIds = Object.create(null)) {\n  {\n    return;\n  }\n}\n\nfunction isReferencedIdentifier(id, parent, parentStack) {\n  {\n    return false;\n  }\n}\n\nfunction isInDestructureAssignment(parent, parentStack) {\n  if (parent && (parent.type === 'ObjectProperty' || parent.type === 'ArrayPattern')) {\n    let i = parentStack.length;\n\n    while (i--) {\n      const p = parentStack[i];\n\n      if (p.type === 'AssignmentExpression') {\n        return true;\n      } else if (p.type !== 'ObjectProperty' && !p.type.endsWith('Pattern')) {\n        break;\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction walkFunctionParams(node, onIdent) {\n  for (const p of node.params) {\n    for (const id of extractIdentifiers(p)) {\n      onIdent(id);\n    }\n  }\n}\n\nfunction walkBlockDeclarations(block, onIdent) {\n  for (const stmt of block.body) {\n    if (stmt.type === 'VariableDeclaration') {\n      if (stmt.declare) continue;\n\n      for (const decl of stmt.declarations) {\n        for (const id of extractIdentifiers(decl.id)) {\n          onIdent(id);\n        }\n      }\n    } else if (stmt.type === 'FunctionDeclaration' || stmt.type === 'ClassDeclaration') {\n      if (stmt.declare || !stmt.id) continue;\n      onIdent(stmt.id);\n    }\n  }\n}\n\nfunction extractIdentifiers(param, nodes = []) {\n  switch (param.type) {\n    case 'Identifier':\n      nodes.push(param);\n      break;\n\n    case 'MemberExpression':\n      let object = param;\n\n      while (object.type === 'MemberExpression') {\n        object = object.object;\n      }\n\n      nodes.push(object);\n      break;\n\n    case 'ObjectPattern':\n      for (const prop of param.properties) {\n        if (prop.type === 'RestElement') {\n          extractIdentifiers(prop.argument, nodes);\n        } else {\n          extractIdentifiers(prop.value, nodes);\n        }\n      }\n\n      break;\n\n    case 'ArrayPattern':\n      param.elements.forEach(element => {\n        if (element) extractIdentifiers(element, nodes);\n      });\n      break;\n\n    case 'RestElement':\n      extractIdentifiers(param.argument, nodes);\n      break;\n\n    case 'AssignmentPattern':\n      extractIdentifiers(param.left, nodes);\n      break;\n  }\n\n  return nodes;\n}\n\nconst isFunctionType = node => {\n  return /Function(?:Expression|Declaration)$|Method$/.test(node.type);\n};\n\nconst isStaticProperty = node => node && (node.type === 'ObjectProperty' || node.type === 'ObjectMethod') && !node.computed;\n\nconst isStaticPropertyKey = (node, parent) => isStaticProperty(parent) && parent.key === node; // these keywords should not appear inside expressions, but operators like\n// typeof, instanceof and in are allowed\n\n\nconst prohibitedKeywordRE = new RegExp('\\\\b' + ('do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,' + 'super,throw,while,yield,delete,export,import,return,switch,default,' + 'extends,finally,continue,debugger,function,arguments,typeof,void').split(',').join('\\\\b|\\\\b') + '\\\\b'); // strip strings in expressions\n\nconst stripStringRE = /'(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`/g;\n/**\r\n * Validate a non-prefixed expression.\r\n * This is only called when using the in-browser runtime compiler since it\r\n * doesn't prefix expressions.\r\n */\n\nfunction validateBrowserExpression(node, context, asParams = false, asRawStatements = false) {\n  const exp = node.content; // empty expressions are validated per-directive since some directives\n  // do allow empty expressions.\n\n  if (!exp.trim()) {\n    return;\n  }\n\n  try {\n    new Function(asRawStatements ? ` ${exp} ` : `return ${asParams ? `(${exp}) => {}` : `(${exp})`}`);\n  } catch (e) {\n    let message = e.message;\n    const keywordMatch = exp.replace(stripStringRE, '').match(prohibitedKeywordRE);\n\n    if (keywordMatch) {\n      message = `avoid using JavaScript keyword as property name: \"${keywordMatch[0]}\"`;\n    }\n\n    context.onError(createCompilerError(44\n    /* X_INVALID_EXPRESSION */\n    , node.loc, undefined, message));\n  }\n}\n\nconst transformExpression = (node, context) => {\n  if (node.type === 5\n  /* INTERPOLATION */\n  ) {\n    node.content = processExpression(node.content, context);\n  } else if (node.type === 1\n  /* ELEMENT */\n  ) {\n    // handle directives on element\n    for (let i = 0; i < node.props.length; i++) {\n      const dir = node.props[i]; // do not process for v-on & v-for since they are special handled\n\n      if (dir.type === 7\n      /* DIRECTIVE */\n      && dir.name !== 'for') {\n        const exp = dir.exp;\n        const arg = dir.arg; // do not process exp if this is v-on:arg - we need special handling\n        // for wrapping inline statements.\n\n        if (exp && exp.type === 4\n        /* SIMPLE_EXPRESSION */\n        && !(dir.name === 'on' && arg)) {\n          dir.exp = processExpression(exp, context, // slot args must be processed as function params\n          dir.name === 'slot');\n        }\n\n        if (arg && arg.type === 4\n        /* SIMPLE_EXPRESSION */\n        && !arg.isStatic) {\n          dir.arg = processExpression(arg, context);\n        }\n      }\n    }\n  }\n}; // Important: since this function uses Node.js only dependencies, it should\n// always be used with a leading !true check so that it can be\n// tree-shaken from the browser build.\n\n\nfunction processExpression(node, context, // some expressions like v-slot props & v-for aliases should be parsed as\n// function params\nasParams = false, // v-on handler values may contain multiple statements\nasRawStatements = false, localVars = Object.create(context.identifiers)) {\n  {\n    if (false) {}\n\n    return node;\n  }\n}\n\nconst transformIf = createStructuralDirectiveTransform(/^(if|else|else-if)$/, (node, dir, context) => {\n  return processIf(node, dir, context, (ifNode, branch, isRoot) => {\n    // #1587: We need to dynamically increment the key based on the current\n    // node's sibling nodes, since chained v-if/else branches are\n    // rendered at the same depth\n    const siblings = context.parent.children;\n    let i = siblings.indexOf(ifNode);\n    let key = 0;\n\n    while (i-- >= 0) {\n      const sibling = siblings[i];\n\n      if (sibling && sibling.type === 9\n      /* IF */\n      ) {\n        key += sibling.branches.length;\n      }\n    } // Exit callback. Complete the codegenNode when all children have been\n    // transformed.\n\n\n    return () => {\n      if (isRoot) {\n        ifNode.codegenNode = createCodegenNodeForBranch(branch, key, context);\n      } else {\n        // attach this branch's codegen node to the v-if root.\n        const parentCondition = getParentCondition(ifNode.codegenNode);\n        parentCondition.alternate = createCodegenNodeForBranch(branch, key + ifNode.branches.length - 1, context);\n      }\n    };\n  });\n}); // target-agnostic transform used for both Client and SSR\n\nfunction processIf(node, dir, context, processCodegen) {\n  if (dir.name !== 'else' && (!dir.exp || !dir.exp.content.trim())) {\n    const loc = dir.exp ? dir.exp.loc : node.loc;\n    context.onError(createCompilerError(28\n    /* X_V_IF_NO_EXPRESSION */\n    , dir.loc));\n    dir.exp = createSimpleExpression(`true`, false, loc);\n  }\n\n  if (false) {}\n\n  if (dir.name === 'if') {\n    const branch = createIfBranch(node, dir);\n    const ifNode = {\n      type: 9\n      /* IF */\n      ,\n      loc: node.loc,\n      branches: [branch]\n    };\n    context.replaceNode(ifNode);\n\n    if (processCodegen) {\n      return processCodegen(ifNode, branch, true);\n    }\n  } else {\n    // locate the adjacent v-if\n    const siblings = context.parent.children;\n    const comments = [];\n    let i = siblings.indexOf(node);\n\n    while (i-- >= -1) {\n      const sibling = siblings[i];\n\n      if (false\n      /* COMMENT */\n      ) {}\n\n      if (sibling && sibling.type === 2\n      /* TEXT */\n      && !sibling.content.trim().length) {\n        context.removeNode(sibling);\n        continue;\n      }\n\n      if (sibling && sibling.type === 9\n      /* IF */\n      ) {\n        // Check if v-else was followed by v-else-if\n        if (dir.name === 'else-if' && sibling.branches[sibling.branches.length - 1].condition === undefined) {\n          context.onError(createCompilerError(30\n          /* X_V_ELSE_NO_ADJACENT_IF */\n          , node.loc));\n        } // move the node to the if node's branches\n\n\n        context.removeNode();\n        const branch = createIfBranch(node, dir);\n\n        if (false) {} // check if user is forcing same key on different branches\n\n\n        if (false) {}\n\n        sibling.branches.push(branch);\n        const onExit = processCodegen && processCodegen(sibling, branch, false); // since the branch was removed, it will not be traversed.\n        // make sure to traverse here.\n\n        traverseNode(branch, context); // call on exit\n\n        if (onExit) onExit(); // make sure to reset currentNode after traversal to indicate this\n        // node has been removed.\n\n        context.currentNode = null;\n      } else {\n        context.onError(createCompilerError(30\n        /* X_V_ELSE_NO_ADJACENT_IF */\n        , node.loc));\n      }\n\n      break;\n    }\n  }\n}\n\nfunction createIfBranch(node, dir) {\n  return {\n    type: 10\n    /* IF_BRANCH */\n    ,\n    loc: node.loc,\n    condition: dir.name === 'else' ? undefined : dir.exp,\n    children: node.tagType === 3\n    /* TEMPLATE */\n    && !findDir(node, 'for') ? node.children : [node],\n    userKey: findProp(node, `key`)\n  };\n}\n\nfunction createCodegenNodeForBranch(branch, keyIndex, context) {\n  if (branch.condition) {\n    return createConditionalExpression(branch.condition, createChildrenCodegenNode(branch, keyIndex, context), // make sure to pass in asBlock: true so that the comment node call\n    // closes the current block.\n    createCallExpression(context.helper(CREATE_COMMENT), [ false ? 0 : '\"\"', 'true']));\n  } else {\n    return createChildrenCodegenNode(branch, keyIndex, context);\n  }\n}\n\nfunction createChildrenCodegenNode(branch, keyIndex, context) {\n  const {\n    helper\n  } = context;\n  const keyProperty = createObjectProperty(`key`, createSimpleExpression(`${keyIndex}`, false, locStub, 2\n  /* CAN_HOIST */\n  ));\n  const {\n    children\n  } = branch;\n  const firstChild = children[0];\n  const needFragmentWrapper = children.length !== 1 || firstChild.type !== 1\n  /* ELEMENT */\n  ;\n\n  if (needFragmentWrapper) {\n    if (children.length === 1 && firstChild.type === 11\n    /* FOR */\n    ) {\n      // optimize away nested fragments when child is a ForNode\n      const vnodeCall = firstChild.codegenNode;\n      injectProp(vnodeCall, keyProperty, context);\n      return vnodeCall;\n    } else {\n      let patchFlag = 64\n      /* STABLE_FRAGMENT */\n      ;\n      let patchFlagText = PatchFlagNames[64]; // check if the fragment actually contains a single valid child with\n      // the rest being comments\n\n      if (false) {}\n\n      return createVNodeCall(context, helper(FRAGMENT), createObjectExpression([keyProperty]), children, patchFlag + ( false ? 0 : ``), undefined, undefined, true, false, false\n      /* isComponent */\n      , branch.loc);\n    }\n  } else {\n    const ret = firstChild.codegenNode;\n    const vnodeCall = getMemoedVNodeCall(ret); // Change createVNode to createBlock.\n\n    if (vnodeCall.type === 13\n    /* VNODE_CALL */\n    ) {\n      makeBlock(vnodeCall, context);\n    } // inject branch key\n\n\n    injectProp(vnodeCall, keyProperty, context);\n    return ret;\n  }\n}\n\nfunction isSameKey(a, b) {\n  if (!a || a.type !== b.type) {\n    return false;\n  }\n\n  if (a.type === 6\n  /* ATTRIBUTE */\n  ) {\n    if (a.value.content !== b.value.content) {\n      return false;\n    }\n  } else {\n    // directive\n    const exp = a.exp;\n    const branchExp = b.exp;\n\n    if (exp.type !== branchExp.type) {\n      return false;\n    }\n\n    if (exp.type !== 4\n    /* SIMPLE_EXPRESSION */\n    || exp.isStatic !== branchExp.isStatic || exp.content !== branchExp.content) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction getParentCondition(node) {\n  while (true) {\n    if (node.type === 19\n    /* JS_CONDITIONAL_EXPRESSION */\n    ) {\n      if (node.alternate.type === 19\n      /* JS_CONDITIONAL_EXPRESSION */\n      ) {\n        node = node.alternate;\n      } else {\n        return node;\n      }\n    } else if (node.type === 20\n    /* JS_CACHE_EXPRESSION */\n    ) {\n      node = node.value;\n    }\n  }\n}\n\nconst transformFor = createStructuralDirectiveTransform('for', (node, dir, context) => {\n  const {\n    helper,\n    removeHelper\n  } = context;\n  return processFor(node, dir, context, forNode => {\n    // create the loop render function expression now, and add the\n    // iterator on exit after all children have been traversed\n    const renderExp = createCallExpression(helper(RENDER_LIST), [forNode.source]);\n    const isTemplate = isTemplateNode(node);\n    const memo = findDir(node, 'memo');\n    const keyProp = findProp(node, `key`);\n    const keyExp = keyProp && (keyProp.type === 6\n    /* ATTRIBUTE */\n    ? createSimpleExpression(keyProp.value.content, true) : keyProp.exp);\n    const keyProperty = keyProp ? createObjectProperty(`key`, keyExp) : null;\n    const isStableFragment = forNode.source.type === 4\n    /* SIMPLE_EXPRESSION */\n    && forNode.source.constType > 0\n    /* NOT_CONSTANT */\n    ;\n    const fragmentFlag = isStableFragment ? 64\n    /* STABLE_FRAGMENT */\n    : keyProp ? 128\n    /* KEYED_FRAGMENT */\n    : 256\n    /* UNKEYED_FRAGMENT */\n    ;\n    forNode.codegenNode = createVNodeCall(context, helper(FRAGMENT), undefined, renderExp, fragmentFlag + ( false ? 0 : ``), undefined, undefined, true\n    /* isBlock */\n    , !isStableFragment\n    /* disableTracking */\n    , false\n    /* isComponent */\n    , node.loc);\n    return () => {\n      // finish the codegen now that all children have been traversed\n      let childBlock;\n      const {\n        children\n      } = forNode; // check <template v-for> key placement\n\n      if (false) {}\n\n      const needFragmentWrapper = children.length !== 1 || children[0].type !== 1\n      /* ELEMENT */\n      ;\n      const slotOutlet = isSlotOutlet(node) ? node : isTemplate && node.children.length === 1 && isSlotOutlet(node.children[0]) ? node.children[0] // api-extractor somehow fails to infer this\n      : null;\n\n      if (slotOutlet) {\n        // <slot v-for=\"...\"> or <template v-for=\"...\"><slot/></template>\n        childBlock = slotOutlet.codegenNode;\n\n        if (isTemplate && keyProperty) {\n          // <template v-for=\"...\" :key=\"...\"><slot/></template>\n          // we need to inject the key to the renderSlot() call.\n          // the props for renderSlot is passed as the 3rd argument.\n          injectProp(childBlock, keyProperty, context);\n        }\n      } else if (needFragmentWrapper) {\n        // <template v-for=\"...\"> with text or multi-elements\n        // should generate a fragment block for each loop\n        childBlock = createVNodeCall(context, helper(FRAGMENT), keyProperty ? createObjectExpression([keyProperty]) : undefined, node.children, 64\n        /* STABLE_FRAGMENT */\n        + ( false ? 0 : ``), undefined, undefined, true, undefined, false\n        /* isComponent */\n        );\n      } else {\n        // Normal element v-for. Directly use the child's codegenNode\n        // but mark it as a block.\n        childBlock = children[0].codegenNode;\n\n        if (isTemplate && keyProperty) {\n          injectProp(childBlock, keyProperty, context);\n        }\n\n        if (childBlock.isBlock !== !isStableFragment) {\n          if (childBlock.isBlock) {\n            // switch from block to vnode\n            removeHelper(OPEN_BLOCK);\n            removeHelper(getVNodeBlockHelper(context.inSSR, childBlock.isComponent));\n          } else {\n            // switch from vnode to block\n            removeHelper(getVNodeHelper(context.inSSR, childBlock.isComponent));\n          }\n        }\n\n        childBlock.isBlock = !isStableFragment;\n\n        if (childBlock.isBlock) {\n          helper(OPEN_BLOCK);\n          helper(getVNodeBlockHelper(context.inSSR, childBlock.isComponent));\n        } else {\n          helper(getVNodeHelper(context.inSSR, childBlock.isComponent));\n        }\n      }\n\n      if (memo) {\n        const loop = createFunctionExpression(createForLoopParams(forNode.parseResult, [createSimpleExpression(`_cached`)]));\n        loop.body = createBlockStatement([createCompoundExpression([`const _memo = (`, memo.exp, `)`]), createCompoundExpression([`if (_cached`, ...(keyExp ? [` && _cached.key === `, keyExp] : []), ` && ${context.helperString(IS_MEMO_SAME)}(_cached, _memo)) return _cached`]), createCompoundExpression([`const _item = `, childBlock]), createSimpleExpression(`_item.memo = _memo`), createSimpleExpression(`return _item`)]);\n        renderExp.arguments.push(loop, createSimpleExpression(`_cache`), createSimpleExpression(String(context.cached++)));\n      } else {\n        renderExp.arguments.push(createFunctionExpression(createForLoopParams(forNode.parseResult), childBlock, true\n        /* force newline */\n        ));\n      }\n    };\n  });\n}); // target-agnostic transform used for both Client and SSR\n\nfunction processFor(node, dir, context, processCodegen) {\n  if (!dir.exp) {\n    context.onError(createCompilerError(31\n    /* X_V_FOR_NO_EXPRESSION */\n    , dir.loc));\n    return;\n  }\n\n  const parseResult = parseForExpression( // can only be simple expression because vFor transform is applied\n  // before expression transform.\n  dir.exp, context);\n\n  if (!parseResult) {\n    context.onError(createCompilerError(32\n    /* X_V_FOR_MALFORMED_EXPRESSION */\n    , dir.loc));\n    return;\n  }\n\n  const {\n    addIdentifiers,\n    removeIdentifiers,\n    scopes\n  } = context;\n  const {\n    source,\n    value,\n    key,\n    index\n  } = parseResult;\n  const forNode = {\n    type: 11\n    /* FOR */\n    ,\n    loc: dir.loc,\n    source,\n    valueAlias: value,\n    keyAlias: key,\n    objectIndexAlias: index,\n    parseResult,\n    children: isTemplateNode(node) ? node.children : [node]\n  };\n  context.replaceNode(forNode); // bookkeeping\n\n  scopes.vFor++;\n  const onExit = processCodegen && processCodegen(forNode);\n  return () => {\n    scopes.vFor--;\n    if (onExit) onExit();\n  };\n}\n\nconst forAliasRE = /([\\s\\S]*?)\\s+(?:in|of)\\s+([\\s\\S]*)/; // This regex doesn't cover the case if key or index aliases have destructuring,\n// but those do not make sense in the first place, so this works in practice.\n\nconst forIteratorRE = /,([^,\\}\\]]*)(?:,([^,\\}\\]]*))?$/;\nconst stripParensRE = /^\\(|\\)$/g;\n\nfunction parseForExpression(input, context) {\n  const loc = input.loc;\n  const exp = input.content;\n  const inMatch = exp.match(forAliasRE);\n  if (!inMatch) return;\n  const [, LHS, RHS] = inMatch;\n  const result = {\n    source: createAliasExpression(loc, RHS.trim(), exp.indexOf(RHS, LHS.length)),\n    value: undefined,\n    key: undefined,\n    index: undefined\n  };\n\n  if (false) {}\n\n  let valueContent = LHS.trim().replace(stripParensRE, '').trim();\n  const trimmedOffset = LHS.indexOf(valueContent);\n  const iteratorMatch = valueContent.match(forIteratorRE);\n\n  if (iteratorMatch) {\n    valueContent = valueContent.replace(forIteratorRE, '').trim();\n    const keyContent = iteratorMatch[1].trim();\n    let keyOffset;\n\n    if (keyContent) {\n      keyOffset = exp.indexOf(keyContent, trimmedOffset + valueContent.length);\n      result.key = createAliasExpression(loc, keyContent, keyOffset);\n\n      if (false) {}\n    }\n\n    if (iteratorMatch[2]) {\n      const indexContent = iteratorMatch[2].trim();\n\n      if (indexContent) {\n        result.index = createAliasExpression(loc, indexContent, exp.indexOf(indexContent, result.key ? keyOffset + keyContent.length : trimmedOffset + valueContent.length));\n\n        if (false) {}\n      }\n    }\n  }\n\n  if (valueContent) {\n    result.value = createAliasExpression(loc, valueContent, trimmedOffset);\n\n    if (false) {}\n  }\n\n  return result;\n}\n\nfunction createAliasExpression(range, content, offset) {\n  return createSimpleExpression(content, false, getInnerRange(range, offset, content.length));\n}\n\nfunction createForLoopParams({\n  value,\n  key,\n  index\n}, memoArgs = []) {\n  return createParamsList([value, key, index, ...memoArgs]);\n}\n\nfunction createParamsList(args) {\n  let i = args.length;\n\n  while (i--) {\n    if (args[i]) break;\n  }\n\n  return args.slice(0, i + 1).map((arg, i) => arg || createSimpleExpression(`_`.repeat(i + 1), false));\n}\n\nconst defaultFallback = createSimpleExpression(`undefined`, false); // A NodeTransform that:\n// 1. Tracks scope identifiers for scoped slots so that they don't get prefixed\n//    by transformExpression. This is only applied in non-browser builds with\n//    { prefixIdentifiers: true }.\n// 2. Track v-slot depths so that we know a slot is inside another slot.\n//    Note the exit callback is executed before buildSlots() on the same node,\n//    so only nested slots see positive numbers.\n\nconst trackSlotScopes = (node, context) => {\n  if (node.type === 1\n  /* ELEMENT */\n  && (node.tagType === 1\n  /* COMPONENT */\n  || node.tagType === 3\n  /* TEMPLATE */\n  )) {\n    // We are only checking non-empty v-slot here\n    // since we only care about slots that introduce scope variables.\n    const vSlot = findDir(node, 'slot');\n\n    if (vSlot) {\n      vSlot.exp;\n      context.scopes.vSlot++;\n      return () => {\n        context.scopes.vSlot--;\n      };\n    }\n  }\n}; // A NodeTransform that tracks scope identifiers for scoped slots with v-for.\n// This transform is only applied in non-browser builds with { prefixIdentifiers: true }\n\n\nconst trackVForSlotScopes = (node, context) => {\n  let vFor;\n\n  if (isTemplateNode(node) && node.props.some(isVSlot) && (vFor = findDir(node, 'for'))) {\n    const result = vFor.parseResult = parseForExpression(vFor.exp, context);\n\n    if (result) {\n      const {\n        value,\n        key,\n        index\n      } = result;\n      const {\n        addIdentifiers,\n        removeIdentifiers\n      } = context;\n      value && addIdentifiers(value);\n      key && addIdentifiers(key);\n      index && addIdentifiers(index);\n      return () => {\n        value && removeIdentifiers(value);\n        key && removeIdentifiers(key);\n        index && removeIdentifiers(index);\n      };\n    }\n  }\n};\n\nconst buildClientSlotFn = (props, children, loc) => createFunctionExpression(props, children, false\n/* newline */\n, true\n/* isSlot */\n, children.length ? children[0].loc : loc); // Instead of being a DirectiveTransform, v-slot processing is called during\n// transformElement to build the slots object for a component.\n\n\nfunction buildSlots(node, context, buildSlotFn = buildClientSlotFn) {\n  context.helper(WITH_CTX);\n  const {\n    children,\n    loc\n  } = node;\n  const slotsProperties = [];\n  const dynamicSlots = []; // If the slot is inside a v-for or another v-slot, force it to be dynamic\n  // since it likely uses a scope variable.\n\n  let hasDynamicSlots = context.scopes.vSlot > 0 || context.scopes.vFor > 0; // 1. Check for slot with slotProps on component itself.\n  //    <Comp v-slot=\"{ prop }\"/>\n\n  const onComponentSlot = findDir(node, 'slot', true);\n\n  if (onComponentSlot) {\n    const {\n      arg,\n      exp\n    } = onComponentSlot;\n\n    if (arg && !isStaticExp(arg)) {\n      hasDynamicSlots = true;\n    }\n\n    slotsProperties.push(createObjectProperty(arg || createSimpleExpression('default', true), buildSlotFn(exp, children, loc)));\n  } // 2. Iterate through children and check for template slots\n  //    <template v-slot:foo=\"{ prop }\">\n\n\n  let hasTemplateSlots = false;\n  let hasNamedDefaultSlot = false;\n  const implicitDefaultChildren = [];\n  const seenSlotNames = new Set();\n\n  for (let i = 0; i < children.length; i++) {\n    const slotElement = children[i];\n    let slotDir;\n\n    if (!isTemplateNode(slotElement) || !(slotDir = findDir(slotElement, 'slot', true))) {\n      // not a <template v-slot>, skip.\n      if (slotElement.type !== 3\n      /* COMMENT */\n      ) {\n        implicitDefaultChildren.push(slotElement);\n      }\n\n      continue;\n    }\n\n    if (onComponentSlot) {\n      // already has on-component slot - this is incorrect usage.\n      context.onError(createCompilerError(37\n      /* X_V_SLOT_MIXED_SLOT_USAGE */\n      , slotDir.loc));\n      break;\n    }\n\n    hasTemplateSlots = true;\n    const {\n      children: slotChildren,\n      loc: slotLoc\n    } = slotElement;\n    const {\n      arg: slotName = createSimpleExpression(`default`, true),\n      exp: slotProps,\n      loc: dirLoc\n    } = slotDir; // check if name is dynamic.\n\n    let staticSlotName;\n\n    if (isStaticExp(slotName)) {\n      staticSlotName = slotName ? slotName.content : `default`;\n    } else {\n      hasDynamicSlots = true;\n    }\n\n    const slotFunction = buildSlotFn(slotProps, slotChildren, slotLoc); // check if this slot is conditional (v-if/v-for)\n\n    let vIf;\n    let vElse;\n    let vFor;\n\n    if (vIf = findDir(slotElement, 'if')) {\n      hasDynamicSlots = true;\n      dynamicSlots.push(createConditionalExpression(vIf.exp, buildDynamicSlot(slotName, slotFunction), defaultFallback));\n    } else if (vElse = findDir(slotElement, /^else(-if)?$/, true\n    /* allowEmpty */\n    )) {\n      // find adjacent v-if\n      let j = i;\n      let prev;\n\n      while (j--) {\n        prev = children[j];\n\n        if (prev.type !== 3\n        /* COMMENT */\n        ) {\n          break;\n        }\n      }\n\n      if (prev && isTemplateNode(prev) && findDir(prev, 'if')) {\n        // remove node\n        children.splice(i, 1);\n        i--; // attach this slot to previous conditional\n\n        let conditional = dynamicSlots[dynamicSlots.length - 1];\n\n        while (conditional.alternate.type === 19\n        /* JS_CONDITIONAL_EXPRESSION */\n        ) {\n          conditional = conditional.alternate;\n        }\n\n        conditional.alternate = vElse.exp ? createConditionalExpression(vElse.exp, buildDynamicSlot(slotName, slotFunction), defaultFallback) : buildDynamicSlot(slotName, slotFunction);\n      } else {\n        context.onError(createCompilerError(30\n        /* X_V_ELSE_NO_ADJACENT_IF */\n        , vElse.loc));\n      }\n    } else if (vFor = findDir(slotElement, 'for')) {\n      hasDynamicSlots = true;\n      const parseResult = vFor.parseResult || parseForExpression(vFor.exp, context);\n\n      if (parseResult) {\n        // Render the dynamic slots as an array and add it to the createSlot()\n        // args. The runtime knows how to handle it appropriately.\n        dynamicSlots.push(createCallExpression(context.helper(RENDER_LIST), [parseResult.source, createFunctionExpression(createForLoopParams(parseResult), buildDynamicSlot(slotName, slotFunction), true\n        /* force newline */\n        )]));\n      } else {\n        context.onError(createCompilerError(32\n        /* X_V_FOR_MALFORMED_EXPRESSION */\n        , vFor.loc));\n      }\n    } else {\n      // check duplicate static names\n      if (staticSlotName) {\n        if (seenSlotNames.has(staticSlotName)) {\n          context.onError(createCompilerError(38\n          /* X_V_SLOT_DUPLICATE_SLOT_NAMES */\n          , dirLoc));\n          continue;\n        }\n\n        seenSlotNames.add(staticSlotName);\n\n        if (staticSlotName === 'default') {\n          hasNamedDefaultSlot = true;\n        }\n      }\n\n      slotsProperties.push(createObjectProperty(slotName, slotFunction));\n    }\n  }\n\n  if (!onComponentSlot) {\n    const buildDefaultSlotProperty = (props, children) => {\n      const fn = buildSlotFn(props, children, loc);\n\n      if (context.compatConfig) {\n        fn.isNonScopedSlot = true;\n      }\n\n      return createObjectProperty(`default`, fn);\n    };\n\n    if (!hasTemplateSlots) {\n      // implicit default slot (on component)\n      slotsProperties.push(buildDefaultSlotProperty(undefined, children));\n    } else if (implicitDefaultChildren.length && // #3766\n    // with whitespace: 'preserve', whitespaces between slots will end up in\n    // implicitDefaultChildren. Ignore if all implicit children are whitespaces.\n    implicitDefaultChildren.some(node => isNonWhitespaceContent(node))) {\n      // implicit default slot (mixed with named slots)\n      if (hasNamedDefaultSlot) {\n        context.onError(createCompilerError(39\n        /* X_V_SLOT_EXTRANEOUS_DEFAULT_SLOT_CHILDREN */\n        , implicitDefaultChildren[0].loc));\n      } else {\n        slotsProperties.push(buildDefaultSlotProperty(undefined, implicitDefaultChildren));\n      }\n    }\n  }\n\n  const slotFlag = hasDynamicSlots ? 2\n  /* DYNAMIC */\n  : hasForwardedSlots(node.children) ? 3\n  /* FORWARDED */\n  : 1\n  /* STABLE */\n  ;\n  let slots = createObjectExpression(slotsProperties.concat(createObjectProperty(`_`, // 2 = compiled but dynamic = can skip normalization, but must run diff\n  // 1 = compiled and static = can skip normalization AND diff as optimized\n  createSimpleExpression(slotFlag + ( false ? 0 : ``), false))), loc);\n\n  if (dynamicSlots.length) {\n    slots = createCallExpression(context.helper(CREATE_SLOTS), [slots, createArrayExpression(dynamicSlots)]);\n  }\n\n  return {\n    slots,\n    hasDynamicSlots\n  };\n}\n\nfunction buildDynamicSlot(name, fn) {\n  return createObjectExpression([createObjectProperty(`name`, name), createObjectProperty(`fn`, fn)]);\n}\n\nfunction hasForwardedSlots(children) {\n  for (let i = 0; i < children.length; i++) {\n    const child = children[i];\n\n    switch (child.type) {\n      case 1\n      /* ELEMENT */\n      :\n        if (child.tagType === 2\n        /* SLOT */\n        || hasForwardedSlots(child.children)) {\n          return true;\n        }\n\n        break;\n\n      case 9\n      /* IF */\n      :\n        if (hasForwardedSlots(child.branches)) return true;\n        break;\n\n      case 10\n      /* IF_BRANCH */\n      :\n      case 11\n      /* FOR */\n      :\n        if (hasForwardedSlots(child.children)) return true;\n        break;\n    }\n  }\n\n  return false;\n}\n\nfunction isNonWhitespaceContent(node) {\n  if (node.type !== 2\n  /* TEXT */\n  && node.type !== 12\n  /* TEXT_CALL */\n  ) return true;\n  return node.type === 2\n  /* TEXT */\n  ? !!node.content.trim() : isNonWhitespaceContent(node.content);\n} // some directive transforms (e.g. v-model) may return a symbol for runtime\n// import, which should be used instead of a resolveDirective call.\n\n\nconst directiveImportMap = new WeakMap(); // generate a JavaScript AST for this element's codegen\n\nconst transformElement = (node, context) => {\n  // perform the work on exit, after all child expressions have been\n  // processed and merged.\n  return function postTransformElement() {\n    node = context.currentNode;\n\n    if (!(node.type === 1\n    /* ELEMENT */\n    && (node.tagType === 0\n    /* ELEMENT */\n    || node.tagType === 1\n    /* COMPONENT */\n    ))) {\n      return;\n    }\n\n    const {\n      tag,\n      props\n    } = node;\n    const isComponent = node.tagType === 1\n    /* COMPONENT */\n    ; // The goal of the transform is to create a codegenNode implementing the\n    // VNodeCall interface.\n\n    let vnodeTag = isComponent ? resolveComponentType(node, context) : `\"${tag}\"`;\n    const isDynamicComponent = shared_esm_bundler_isObject(vnodeTag) && vnodeTag.callee === RESOLVE_DYNAMIC_COMPONENT;\n    let vnodeProps;\n    let vnodeChildren;\n    let vnodePatchFlag;\n    let patchFlag = 0;\n    let vnodeDynamicProps;\n    let dynamicPropNames;\n    let vnodeDirectives;\n    let shouldUseBlock = // dynamic component may resolve to plain elements\n    isDynamicComponent || vnodeTag === TELEPORT || vnodeTag === SUSPENSE || !isComponent && ( // <svg> and <foreignObject> must be forced into blocks so that block\n    // updates inside get proper isSVG flag at runtime. (#639, #643)\n    // This is technically web-specific, but splitting the logic out of core\n    // leads to too much unnecessary complexity.\n    tag === 'svg' || tag === 'foreignObject'); // props\n\n    if (props.length > 0) {\n      const propsBuildResult = buildProps(node, context);\n      vnodeProps = propsBuildResult.props;\n      patchFlag = propsBuildResult.patchFlag;\n      dynamicPropNames = propsBuildResult.dynamicPropNames;\n      const directives = propsBuildResult.directives;\n      vnodeDirectives = directives && directives.length ? createArrayExpression(directives.map(dir => buildDirectiveArgs(dir, context))) : undefined;\n\n      if (propsBuildResult.shouldUseBlock) {\n        shouldUseBlock = true;\n      }\n    } // children\n\n\n    if (node.children.length > 0) {\n      if (vnodeTag === KEEP_ALIVE) {\n        // Although a built-in component, we compile KeepAlive with raw children\n        // instead of slot functions so that it can be used inside Transition\n        // or other Transition-wrapping HOCs.\n        // To ensure correct updates with block optimizations, we need to:\n        // 1. Force keep-alive into a block. This avoids its children being\n        //    collected by a parent block.\n        shouldUseBlock = true; // 2. Force keep-alive to always be updated, since it uses raw children.\n\n        patchFlag |= 1024\n        /* DYNAMIC_SLOTS */\n        ;\n\n        if (false) {}\n      }\n\n      const shouldBuildAsSlots = isComponent && // Teleport is not a real component and has dedicated runtime handling\n      vnodeTag !== TELEPORT && // explained above.\n      vnodeTag !== KEEP_ALIVE;\n\n      if (shouldBuildAsSlots) {\n        const {\n          slots,\n          hasDynamicSlots\n        } = buildSlots(node, context);\n        vnodeChildren = slots;\n\n        if (hasDynamicSlots) {\n          patchFlag |= 1024\n          /* DYNAMIC_SLOTS */\n          ;\n        }\n      } else if (node.children.length === 1 && vnodeTag !== TELEPORT) {\n        const child = node.children[0];\n        const type = child.type; // check for dynamic text children\n\n        const hasDynamicTextChild = type === 5\n        /* INTERPOLATION */\n        || type === 8\n        /* COMPOUND_EXPRESSION */\n        ;\n\n        if (hasDynamicTextChild && getConstantType(child, context) === 0\n        /* NOT_CONSTANT */\n        ) {\n          patchFlag |= 1\n          /* TEXT */\n          ;\n        } // pass directly if the only child is a text node\n        // (plain / interpolation / expression)\n\n\n        if (hasDynamicTextChild || type === 2\n        /* TEXT */\n        ) {\n          vnodeChildren = child;\n        } else {\n          vnodeChildren = node.children;\n        }\n      } else {\n        vnodeChildren = node.children;\n      }\n    } // patchFlag & dynamicPropNames\n\n\n    if (patchFlag !== 0) {\n      if (false) {} else {\n        vnodePatchFlag = String(patchFlag);\n      }\n\n      if (dynamicPropNames && dynamicPropNames.length) {\n        vnodeDynamicProps = stringifyDynamicPropNames(dynamicPropNames);\n      }\n    }\n\n    node.codegenNode = createVNodeCall(context, vnodeTag, vnodeProps, vnodeChildren, vnodePatchFlag, vnodeDynamicProps, vnodeDirectives, !!shouldUseBlock, false\n    /* disableTracking */\n    , isComponent, node.loc);\n  };\n};\n\nfunction resolveComponentType(node, context, ssr = false) {\n  let {\n    tag\n  } = node; // 1. dynamic component\n\n  const isExplicitDynamic = isComponentTag(tag);\n  const isProp = findProp(node, 'is');\n\n  if (isProp) {\n    if (isExplicitDynamic || isCompatEnabled(\"COMPILER_IS_ON_ELEMENT\"\n    /* COMPILER_IS_ON_ELEMENT */\n    , context)) {\n      const exp = isProp.type === 6\n      /* ATTRIBUTE */\n      ? isProp.value && createSimpleExpression(isProp.value.content, true) : isProp.exp;\n\n      if (exp) {\n        return createCallExpression(context.helper(RESOLVE_DYNAMIC_COMPONENT), [exp]);\n      }\n    } else if (isProp.type === 6\n    /* ATTRIBUTE */\n    && isProp.value.content.startsWith('vue:')) {\n      // <button is=\"vue:xxx\">\n      // if not <component>, only is value that starts with \"vue:\" will be\n      // treated as component by the parse phase and reach here, unless it's\n      // compat mode where all is values are considered components\n      tag = isProp.value.content.slice(4);\n    }\n  } // 1.5 v-is (TODO: Deprecate)\n\n\n  const isDir = !isExplicitDynamic && findDir(node, 'is');\n\n  if (isDir && isDir.exp) {\n    return createCallExpression(context.helper(RESOLVE_DYNAMIC_COMPONENT), [isDir.exp]);\n  } // 2. built-in components (Teleport, Transition, KeepAlive, Suspense...)\n\n\n  const builtIn = isCoreComponent(tag) || context.isBuiltInComponent(tag);\n\n  if (builtIn) {\n    // built-ins are simply fallthroughs / have special handling during ssr\n    // so we don't need to import their runtime equivalents\n    if (!ssr) context.helper(builtIn);\n    return builtIn;\n  } // 5. user component (resolve)\n\n\n  context.helper(RESOLVE_COMPONENT);\n  context.components.add(tag);\n  return toValidAssetId(tag, `component`);\n}\n\nfunction buildProps(node, context, props = node.props, ssr = false) {\n  const {\n    tag,\n    loc: elementLoc,\n    children\n  } = node;\n  const isComponent = node.tagType === 1\n  /* COMPONENT */\n  ;\n  let properties = [];\n  const mergeArgs = [];\n  const runtimeDirectives = [];\n  const hasChildren = children.length > 0;\n  let shouldUseBlock = false; // patchFlag analysis\n\n  let patchFlag = 0;\n  let hasRef = false;\n  let hasClassBinding = false;\n  let hasStyleBinding = false;\n  let hasHydrationEventBinding = false;\n  let hasDynamicKeys = false;\n  let hasVnodeHook = false;\n  const dynamicPropNames = [];\n\n  const analyzePatchFlag = ({\n    key,\n    value\n  }) => {\n    if (isStaticExp(key)) {\n      const name = key.content;\n      const isEventHandler = isOn(name);\n\n      if (!isComponent && isEventHandler && // omit the flag for click handlers because hydration gives click\n      // dedicated fast path.\n      name.toLowerCase() !== 'onclick' && // omit v-model handlers\n      name !== 'onUpdate:modelValue' && // omit onVnodeXXX hooks\n      !isReservedProp(name)) {\n        hasHydrationEventBinding = true;\n      }\n\n      if (isEventHandler && isReservedProp(name)) {\n        hasVnodeHook = true;\n      }\n\n      if (value.type === 20\n      /* JS_CACHE_EXPRESSION */\n      || (value.type === 4\n      /* SIMPLE_EXPRESSION */\n      || value.type === 8\n      /* COMPOUND_EXPRESSION */\n      ) && getConstantType(value, context) > 0) {\n        // skip if the prop is a cached handler or has constant value\n        return;\n      }\n\n      if (name === 'ref') {\n        hasRef = true;\n      } else if (name === 'class') {\n        hasClassBinding = true;\n      } else if (name === 'style') {\n        hasStyleBinding = true;\n      } else if (name !== 'key' && !dynamicPropNames.includes(name)) {\n        dynamicPropNames.push(name);\n      } // treat the dynamic class and style binding of the component as dynamic props\n\n\n      if (isComponent && (name === 'class' || name === 'style') && !dynamicPropNames.includes(name)) {\n        dynamicPropNames.push(name);\n      }\n    } else {\n      hasDynamicKeys = true;\n    }\n  };\n\n  for (let i = 0; i < props.length; i++) {\n    // static attribute\n    const prop = props[i];\n\n    if (prop.type === 6\n    /* ATTRIBUTE */\n    ) {\n      const {\n        loc,\n        name,\n        value\n      } = prop;\n      let isStatic = true;\n\n      if (name === 'ref') {\n        hasRef = true;\n\n        if (context.scopes.vFor > 0) {\n          properties.push(createObjectProperty(createSimpleExpression('ref_for', true), createSimpleExpression('true')));\n        }\n      } // skip is on <component>, or is=\"vue:xxx\"\n\n\n      if (name === 'is' && (isComponentTag(tag) || value && value.content.startsWith('vue:') || isCompatEnabled(\"COMPILER_IS_ON_ELEMENT\"\n      /* COMPILER_IS_ON_ELEMENT */\n      , context))) {\n        continue;\n      }\n\n      properties.push(createObjectProperty(createSimpleExpression(name, true, getInnerRange(loc, 0, name.length)), createSimpleExpression(value ? value.content : '', isStatic, value ? value.loc : loc)));\n    } else {\n      // directives\n      const {\n        name,\n        arg,\n        exp,\n        loc\n      } = prop;\n      const isVBind = name === 'bind';\n      const isVOn = name === 'on'; // skip v-slot - it is handled by its dedicated transform.\n\n      if (name === 'slot') {\n        if (!isComponent) {\n          context.onError(createCompilerError(40\n          /* X_V_SLOT_MISPLACED */\n          , loc));\n        }\n\n        continue;\n      } // skip v-once/v-memo - they are handled by dedicated transforms.\n\n\n      if (name === 'once' || name === 'memo') {\n        continue;\n      } // skip v-is and :is on <component>\n\n\n      if (name === 'is' || isVBind && isStaticArgOf(arg, 'is') && (isComponentTag(tag) || isCompatEnabled(\"COMPILER_IS_ON_ELEMENT\"\n      /* COMPILER_IS_ON_ELEMENT */\n      , context))) {\n        continue;\n      } // skip v-on in SSR compilation\n\n\n      if (isVOn && ssr) {\n        continue;\n      }\n\n      if ( // #938: elements with dynamic keys should be forced into blocks\n      isVBind && isStaticArgOf(arg, 'key') || // inline before-update hooks need to force block so that it is invoked\n      // before children\n      isVOn && hasChildren && isStaticArgOf(arg, 'vue:before-update')) {\n        shouldUseBlock = true;\n      }\n\n      if (isVBind && isStaticArgOf(arg, 'ref') && context.scopes.vFor > 0) {\n        properties.push(createObjectProperty(createSimpleExpression('ref_for', true), createSimpleExpression('true')));\n      } // special case for v-bind and v-on with no argument\n\n\n      if (!arg && (isVBind || isVOn)) {\n        hasDynamicKeys = true;\n\n        if (exp) {\n          if (properties.length) {\n            mergeArgs.push(createObjectExpression(dedupeProperties(properties), elementLoc));\n            properties = [];\n          }\n\n          if (isVBind) {\n            {\n              // 2.x v-bind object order compat\n              if (false) {}\n\n              if (isCompatEnabled(\"COMPILER_V_BIND_OBJECT_ORDER\"\n              /* COMPILER_V_BIND_OBJECT_ORDER */\n              , context)) {\n                mergeArgs.unshift(exp);\n                continue;\n              }\n            }\n            mergeArgs.push(exp);\n          } else {\n            // v-on=\"obj\" -> toHandlers(obj)\n            mergeArgs.push({\n              type: 14\n              /* JS_CALL_EXPRESSION */\n              ,\n              loc,\n              callee: context.helper(TO_HANDLERS),\n              arguments: [exp]\n            });\n          }\n        } else {\n          context.onError(createCompilerError(isVBind ? 34\n          /* X_V_BIND_NO_EXPRESSION */\n          : 35\n          /* X_V_ON_NO_EXPRESSION */\n          , loc));\n        }\n\n        continue;\n      }\n\n      const directiveTransform = context.directiveTransforms[name];\n\n      if (directiveTransform) {\n        // has built-in directive transform.\n        const {\n          props,\n          needRuntime\n        } = directiveTransform(prop, node, context);\n        !ssr && props.forEach(analyzePatchFlag);\n        properties.push(...props);\n\n        if (needRuntime) {\n          runtimeDirectives.push(prop);\n\n          if (isSymbol(needRuntime)) {\n            directiveImportMap.set(prop, needRuntime);\n          }\n        }\n      } else if (!shared_esm_bundler_isBuiltInDirective(name)) {\n        // no built-in transform, this is a user custom directive.\n        runtimeDirectives.push(prop); // custom dirs may use beforeUpdate so they need to force blocks\n        // to ensure before-update gets called before children update\n\n        if (hasChildren) {\n          shouldUseBlock = true;\n        }\n      }\n    }\n  }\n\n  let propsExpression = undefined; // has v-bind=\"object\" or v-on=\"object\", wrap with mergeProps\n\n  if (mergeArgs.length) {\n    if (properties.length) {\n      mergeArgs.push(createObjectExpression(dedupeProperties(properties), elementLoc));\n    }\n\n    if (mergeArgs.length > 1) {\n      propsExpression = createCallExpression(context.helper(MERGE_PROPS), mergeArgs, elementLoc);\n    } else {\n      // single v-bind with nothing else - no need for a mergeProps call\n      propsExpression = mergeArgs[0];\n    }\n  } else if (properties.length) {\n    propsExpression = createObjectExpression(dedupeProperties(properties), elementLoc);\n  } // patchFlag analysis\n\n\n  if (hasDynamicKeys) {\n    patchFlag |= 16\n    /* FULL_PROPS */\n    ;\n  } else {\n    if (hasClassBinding && !isComponent) {\n      patchFlag |= 2\n      /* CLASS */\n      ;\n    }\n\n    if (hasStyleBinding && !isComponent) {\n      patchFlag |= 4\n      /* STYLE */\n      ;\n    }\n\n    if (dynamicPropNames.length) {\n      patchFlag |= 8\n      /* PROPS */\n      ;\n    }\n\n    if (hasHydrationEventBinding) {\n      patchFlag |= 32\n      /* HYDRATE_EVENTS */\n      ;\n    }\n  }\n\n  if (!shouldUseBlock && (patchFlag === 0 || patchFlag === 32\n  /* HYDRATE_EVENTS */\n  ) && (hasRef || hasVnodeHook || runtimeDirectives.length > 0)) {\n    patchFlag |= 512\n    /* NEED_PATCH */\n    ;\n  } // pre-normalize props, SSR is skipped for now\n\n\n  if (!context.inSSR && propsExpression) {\n    switch (propsExpression.type) {\n      case 15\n      /* JS_OBJECT_EXPRESSION */\n      :\n        // means that there is no v-bind,\n        // but still need to deal with dynamic key binding\n        let classKeyIndex = -1;\n        let styleKeyIndex = -1;\n        let hasDynamicKey = false;\n\n        for (let i = 0; i < propsExpression.properties.length; i++) {\n          const key = propsExpression.properties[i].key;\n\n          if (isStaticExp(key)) {\n            if (key.content === 'class') {\n              classKeyIndex = i;\n            } else if (key.content === 'style') {\n              styleKeyIndex = i;\n            }\n          } else if (!key.isHandlerKey) {\n            hasDynamicKey = true;\n          }\n        }\n\n        const classProp = propsExpression.properties[classKeyIndex];\n        const styleProp = propsExpression.properties[styleKeyIndex]; // no dynamic key\n\n        if (!hasDynamicKey) {\n          if (classProp && !isStaticExp(classProp.value)) {\n            classProp.value = createCallExpression(context.helper(NORMALIZE_CLASS), [classProp.value]);\n          }\n\n          if (styleProp && !isStaticExp(styleProp.value) && ( // the static style is compiled into an object,\n          // so use `hasStyleBinding` to ensure that it is a dynamic style binding\n          hasStyleBinding || // v-bind:style and style both exist,\n          // v-bind:style with static literal object\n          styleProp.value.type === 17\n          /* JS_ARRAY_EXPRESSION */\n          )) {\n            styleProp.value = createCallExpression(context.helper(NORMALIZE_STYLE), [styleProp.value]);\n          }\n        } else {\n          // dynamic key binding, wrap with `normalizeProps`\n          propsExpression = createCallExpression(context.helper(NORMALIZE_PROPS), [propsExpression]);\n        }\n\n        break;\n\n      case 14\n      /* JS_CALL_EXPRESSION */\n      :\n        // mergeProps call, do nothing\n        break;\n\n      default:\n        // single v-bind\n        propsExpression = createCallExpression(context.helper(NORMALIZE_PROPS), [createCallExpression(context.helper(GUARD_REACTIVE_PROPS), [propsExpression])]);\n        break;\n    }\n  }\n\n  return {\n    props: propsExpression,\n    directives: runtimeDirectives,\n    patchFlag,\n    dynamicPropNames,\n    shouldUseBlock\n  };\n} // Dedupe props in an object literal.\n// Literal duplicated attributes would have been warned during the parse phase,\n// however, it's possible to encounter duplicated `onXXX` handlers with different\n// modifiers. We also need to merge static and dynamic class / style attributes.\n// - onXXX handlers / style: merge into array\n// - class: merge into single expression with concatenation\n\n\nfunction dedupeProperties(properties) {\n  const knownProps = new Map();\n  const deduped = [];\n\n  for (let i = 0; i < properties.length; i++) {\n    const prop = properties[i]; // dynamic keys are always allowed\n\n    if (prop.key.type === 8\n    /* COMPOUND_EXPRESSION */\n    || !prop.key.isStatic) {\n      deduped.push(prop);\n      continue;\n    }\n\n    const name = prop.key.content;\n    const existing = knownProps.get(name);\n\n    if (existing) {\n      if (name === 'style' || name === 'class' || isOn(name)) {\n        compiler_core_esm_bundler_mergeAsArray(existing, prop);\n      } // unexpected duplicate, should have emitted error during parse\n\n    } else {\n      knownProps.set(name, prop);\n      deduped.push(prop);\n    }\n  }\n\n  return deduped;\n}\n\nfunction compiler_core_esm_bundler_mergeAsArray(existing, incoming) {\n  if (existing.value.type === 17\n  /* JS_ARRAY_EXPRESSION */\n  ) {\n    existing.value.elements.push(incoming.value);\n  } else {\n    existing.value = createArrayExpression([existing.value, incoming.value], existing.loc);\n  }\n}\n\nfunction buildDirectiveArgs(dir, context) {\n  const dirArgs = [];\n  const runtime = directiveImportMap.get(dir);\n\n  if (runtime) {\n    // built-in directive with runtime\n    dirArgs.push(context.helperString(runtime));\n  } else {\n    {\n      // inject statement for resolving directive\n      context.helper(RESOLVE_DIRECTIVE);\n      context.directives.add(dir.name);\n      dirArgs.push(toValidAssetId(dir.name, `directive`));\n    }\n  }\n\n  const {\n    loc\n  } = dir;\n  if (dir.exp) dirArgs.push(dir.exp);\n\n  if (dir.arg) {\n    if (!dir.exp) {\n      dirArgs.push(`void 0`);\n    }\n\n    dirArgs.push(dir.arg);\n  }\n\n  if (Object.keys(dir.modifiers).length) {\n    if (!dir.arg) {\n      if (!dir.exp) {\n        dirArgs.push(`void 0`);\n      }\n\n      dirArgs.push(`void 0`);\n    }\n\n    const trueExpression = createSimpleExpression(`true`, false, loc);\n    dirArgs.push(createObjectExpression(dir.modifiers.map(modifier => createObjectProperty(modifier, trueExpression)), loc));\n  }\n\n  return createArrayExpression(dirArgs, dir.loc);\n}\n\nfunction stringifyDynamicPropNames(props) {\n  let propsNamesString = `[`;\n\n  for (let i = 0, l = props.length; i < l; i++) {\n    propsNamesString += JSON.stringify(props[i]);\n    if (i < l - 1) propsNamesString += ', ';\n  }\n\n  return propsNamesString + `]`;\n}\n\nfunction isComponentTag(tag) {\n  return tag === 'component' || tag === 'Component';\n}\n\n false ? 0 : {};\n false ? 0 : [];\n\nconst compiler_core_esm_bundler_cacheStringFunction = fn => {\n  const cache = Object.create(null);\n  return str => {\n    const hit = cache[str];\n    return hit || (cache[str] = fn(str));\n  };\n};\n\nconst compiler_core_esm_bundler_camelizeRE = /-(\\w)/g;\n/**\r\n * @private\r\n */\n\nconst compiler_core_esm_bundler_camelize = compiler_core_esm_bundler_cacheStringFunction(str => {\n  return str.replace(compiler_core_esm_bundler_camelizeRE, (_, c) => c ? c.toUpperCase() : '');\n});\n\nconst transformSlotOutlet = (node, context) => {\n  if (isSlotOutlet(node)) {\n    const {\n      children,\n      loc\n    } = node;\n    const {\n      slotName,\n      slotProps\n    } = processSlotOutlet(node, context);\n    const slotArgs = [context.prefixIdentifiers ? `_ctx.$slots` : `$slots`, slotName, '{}', 'undefined', 'true'];\n    let expectedLen = 2;\n\n    if (slotProps) {\n      slotArgs[2] = slotProps;\n      expectedLen = 3;\n    }\n\n    if (children.length) {\n      slotArgs[3] = createFunctionExpression([], children, false, false, loc);\n      expectedLen = 4;\n    }\n\n    if (context.scopeId && !context.slotted) {\n      expectedLen = 5;\n    }\n\n    slotArgs.splice(expectedLen); // remove unused arguments\n\n    node.codegenNode = createCallExpression(context.helper(RENDER_SLOT), slotArgs, loc);\n  }\n};\n\nfunction processSlotOutlet(node, context) {\n  let slotName = `\"default\"`;\n  let slotProps = undefined;\n  const nonNameProps = [];\n\n  for (let i = 0; i < node.props.length; i++) {\n    const p = node.props[i];\n\n    if (p.type === 6\n    /* ATTRIBUTE */\n    ) {\n      if (p.value) {\n        if (p.name === 'name') {\n          slotName = JSON.stringify(p.value.content);\n        } else {\n          p.name = compiler_core_esm_bundler_camelize(p.name);\n          nonNameProps.push(p);\n        }\n      }\n    } else {\n      if (p.name === 'bind' && isStaticArgOf(p.arg, 'name')) {\n        if (p.exp) slotName = p.exp;\n      } else {\n        if (p.name === 'bind' && p.arg && isStaticExp(p.arg)) {\n          p.arg.content = compiler_core_esm_bundler_camelize(p.arg.content);\n        }\n\n        nonNameProps.push(p);\n      }\n    }\n  }\n\n  if (nonNameProps.length > 0) {\n    const {\n      props,\n      directives\n    } = buildProps(node, context, nonNameProps);\n    slotProps = props;\n\n    if (directives.length) {\n      context.onError(createCompilerError(36\n      /* X_V_SLOT_UNEXPECTED_DIRECTIVE_ON_SLOT_OUTLET */\n      , directives[0].loc));\n    }\n  }\n\n  return {\n    slotName,\n    slotProps\n  };\n}\n\nconst fnExpRE = /^\\s*([\\w$_]+|(async\\s*)?\\([^)]*?\\))\\s*=>|^\\s*(async\\s+)?function(?:\\s+[\\w$]+)?\\s*\\(/;\n\nconst transformOn = (dir, node, context, augmentor) => {\n  const {\n    loc,\n    modifiers,\n    arg\n  } = dir;\n\n  if (!dir.exp && !modifiers.length) {\n    context.onError(createCompilerError(35\n    /* X_V_ON_NO_EXPRESSION */\n    , loc));\n  }\n\n  let eventName;\n\n  if (arg.type === 4\n  /* SIMPLE_EXPRESSION */\n  ) {\n    if (arg.isStatic) {\n      let rawName = arg.content; // TODO deprecate @vnodeXXX usage\n\n      if (rawName.startsWith('vue:')) {\n        rawName = `vnode-${rawName.slice(4)}`;\n      } // for all event listeners, auto convert it to camelCase. See issue #2249\n\n\n      eventName = createSimpleExpression(toHandlerKey(camelize(rawName)), true, arg.loc);\n    } else {\n      // #2388\n      eventName = createCompoundExpression([`${context.helperString(TO_HANDLER_KEY)}(`, arg, `)`]);\n    }\n  } else {\n    // already a compound expression.\n    eventName = arg;\n    eventName.children.unshift(`${context.helperString(TO_HANDLER_KEY)}(`);\n    eventName.children.push(`)`);\n  } // handler processing\n\n\n  let exp = dir.exp;\n\n  if (exp && !exp.content.trim()) {\n    exp = undefined;\n  }\n\n  let shouldCache = context.cacheHandlers && !exp && !context.inVOnce;\n\n  if (exp) {\n    const isMemberExp = isMemberExpression(exp.content);\n    const isInlineStatement = !(isMemberExp || fnExpRE.test(exp.content));\n    const hasMultipleStatements = exp.content.includes(`;`);\n\n    if (false) {}\n\n    if (isInlineStatement || shouldCache && isMemberExp) {\n      // wrap inline statement in a function expression\n      exp = createCompoundExpression([`${isInlineStatement ? `$event` : `${``}(...args)`} => ${hasMultipleStatements ? `{` : `(`}`, exp, hasMultipleStatements ? `}` : `)`]);\n    }\n  }\n\n  let ret = {\n    props: [createObjectProperty(eventName, exp || createSimpleExpression(`() => {}`, false, loc))]\n  }; // apply extended compiler augmentor\n\n  if (augmentor) {\n    ret = augmentor(ret);\n  }\n\n  if (shouldCache) {\n    // cache handlers so that it's always the same handler being passed down.\n    // this avoids unnecessary re-renders when users use inline handlers on\n    // components.\n    ret.props[0].value = context.cache(ret.props[0].value);\n  } // mark the key as handler for props normalization check\n\n\n  ret.props.forEach(p => p.key.isHandlerKey = true);\n  return ret;\n}; // v-bind without arg is handled directly in ./transformElements.ts due to it affecting\n// codegen for the entire props object. This transform here is only for v-bind\n// *with* args.\n\n\nconst transformBind = (dir, _node, context) => {\n  const {\n    exp,\n    modifiers,\n    loc\n  } = dir;\n  const arg = dir.arg;\n\n  if (arg.type !== 4\n  /* SIMPLE_EXPRESSION */\n  ) {\n    arg.children.unshift(`(`);\n    arg.children.push(`) || \"\"`);\n  } else if (!arg.isStatic) {\n    arg.content = `${arg.content} || \"\"`;\n  } // .sync is replaced by v-model:arg\n\n\n  if (modifiers.includes('camel')) {\n    if (arg.type === 4\n    /* SIMPLE_EXPRESSION */\n    ) {\n      if (arg.isStatic) {\n        arg.content = camelize(arg.content);\n      } else {\n        arg.content = `${context.helperString(CAMELIZE)}(${arg.content})`;\n      }\n    } else {\n      arg.children.unshift(`${context.helperString(CAMELIZE)}(`);\n      arg.children.push(`)`);\n    }\n  }\n\n  if (!context.inSSR) {\n    if (modifiers.includes('prop')) {\n      injectPrefix(arg, '.');\n    }\n\n    if (modifiers.includes('attr')) {\n      injectPrefix(arg, '^');\n    }\n  }\n\n  if (!exp || exp.type === 4\n  /* SIMPLE_EXPRESSION */\n  && !exp.content.trim()) {\n    context.onError(createCompilerError(34\n    /* X_V_BIND_NO_EXPRESSION */\n    , loc));\n    return {\n      props: [createObjectProperty(arg, createSimpleExpression('', true, loc))]\n    };\n  }\n\n  return {\n    props: [createObjectProperty(arg, exp)]\n  };\n};\n\nconst injectPrefix = (arg, prefix) => {\n  if (arg.type === 4\n  /* SIMPLE_EXPRESSION */\n  ) {\n    if (arg.isStatic) {\n      arg.content = prefix + arg.content;\n    } else {\n      arg.content = `\\`${prefix}\\${${arg.content}}\\``;\n    }\n  } else {\n    arg.children.unshift(`'${prefix}' + (`);\n    arg.children.push(`)`);\n  }\n}; // Merge adjacent text nodes and expressions into a single expression\n// e.g. <div>abc {{ d }} {{ e }}</div> should have a single expression node as child.\n\n\nconst transformText = (node, context) => {\n  if (node.type === 0\n  /* ROOT */\n  || node.type === 1\n  /* ELEMENT */\n  || node.type === 11\n  /* FOR */\n  || node.type === 10\n  /* IF_BRANCH */\n  ) {\n    // perform the transform on node exit so that all expressions have already\n    // been processed.\n    return () => {\n      const children = node.children;\n      let currentContainer = undefined;\n      let hasText = false;\n\n      for (let i = 0; i < children.length; i++) {\n        const child = children[i];\n\n        if (isText(child)) {\n          hasText = true;\n\n          for (let j = i + 1; j < children.length; j++) {\n            const next = children[j];\n\n            if (isText(next)) {\n              if (!currentContainer) {\n                currentContainer = children[i] = {\n                  type: 8\n                  /* COMPOUND_EXPRESSION */\n                  ,\n                  loc: child.loc,\n                  children: [child]\n                };\n              } // merge adjacent text node into current\n\n\n              currentContainer.children.push(` + `, next);\n              children.splice(j, 1);\n              j--;\n            } else {\n              currentContainer = undefined;\n              break;\n            }\n          }\n        }\n      }\n\n      if (!hasText || // if this is a plain element with a single text child, leave it\n      // as-is since the runtime has dedicated fast path for this by directly\n      // setting textContent of the element.\n      // for component root it's always normalized anyway.\n      children.length === 1 && (node.type === 0\n      /* ROOT */\n      || node.type === 1\n      /* ELEMENT */\n      && node.tagType === 0\n      /* ELEMENT */\n      && // #3756\n      // custom directives can potentially add DOM elements arbitrarily,\n      // we need to avoid setting textContent of the element at runtime\n      // to avoid accidentally overwriting the DOM elements added\n      // by the user through custom directives.\n      !node.props.find(p => p.type === 7\n      /* DIRECTIVE */\n      && !context.directiveTransforms[p.name]) && // in compat mode, <template> tags with no special directives\n      // will be rendered as a fragment so its children must be\n      // converted into vnodes.\n      !(node.tag === 'template'))) {\n        return;\n      } // pre-convert text nodes into createTextVNode(text) calls to avoid\n      // runtime normalization.\n\n\n      for (let i = 0; i < children.length; i++) {\n        const child = children[i];\n\n        if (isText(child) || child.type === 8\n        /* COMPOUND_EXPRESSION */\n        ) {\n          const callArgs = []; // createTextVNode defaults to single whitespace, so if it is a\n          // single space the code could be an empty call to save bytes.\n\n          if (child.type !== 2\n          /* TEXT */\n          || child.content !== ' ') {\n            callArgs.push(child);\n          } // mark dynamic text with flag so it gets patched inside a block\n\n\n          if (!context.ssr && getConstantType(child, context) === 0\n          /* NOT_CONSTANT */\n          ) {\n            callArgs.push(1\n            /* TEXT */\n            + ( false ? 0 : ``));\n          }\n\n          children[i] = {\n            type: 12\n            /* TEXT_CALL */\n            ,\n            content: child,\n            loc: child.loc,\n            codegenNode: createCallExpression(context.helper(CREATE_TEXT), callArgs)\n          };\n        }\n      }\n    };\n  }\n};\n\nconst seen = new WeakSet();\n\nconst transformOnce = (node, context) => {\n  if (node.type === 1\n  /* ELEMENT */\n  && findDir(node, 'once', true)) {\n    if (seen.has(node) || context.inVOnce) {\n      return;\n    }\n\n    seen.add(node);\n    context.inVOnce = true;\n    context.helper(SET_BLOCK_TRACKING);\n    return () => {\n      context.inVOnce = false;\n      const cur = context.currentNode;\n\n      if (cur.codegenNode) {\n        cur.codegenNode = context.cache(cur.codegenNode, true\n        /* isVNode */\n        );\n      }\n    };\n  }\n};\n\nconst transformModel = (dir, node, context) => {\n  const {\n    exp,\n    arg\n  } = dir;\n\n  if (!exp) {\n    context.onError(createCompilerError(41\n    /* X_V_MODEL_NO_EXPRESSION */\n    , dir.loc));\n    return createTransformProps();\n  }\n\n  const rawExp = exp.loc.source;\n  const expString = exp.type === 4\n  /* SIMPLE_EXPRESSION */\n  ? exp.content : rawExp; // im SFC <script setup> inline mode, the exp may have been transformed into\n  // _unref(exp)\n\n  context.bindingMetadata[rawExp];\n  const maybeRef = !true\n  /* SETUP_CONST */\n  ;\n\n  if (!expString.trim() || !isMemberExpression(expString) && !maybeRef) {\n    context.onError(createCompilerError(42\n    /* X_V_MODEL_MALFORMED_EXPRESSION */\n    , exp.loc));\n    return createTransformProps();\n  }\n\n  const propName = arg ? arg : createSimpleExpression('modelValue', true);\n  const eventName = arg ? isStaticExp(arg) ? `onUpdate:${arg.content}` : createCompoundExpression(['\"onUpdate:\" + ', arg]) : `onUpdate:modelValue`;\n  let assignmentExp;\n  const eventArg = context.isTS ? `($event: any)` : `$event`;\n  {\n    assignmentExp = createCompoundExpression([`${eventArg} => ((`, exp, `) = $event)`]);\n  }\n  const props = [// modelValue: foo\n  createObjectProperty(propName, dir.exp), // \"onUpdate:modelValue\": $event => (foo = $event)\n  createObjectProperty(eventName, assignmentExp)]; // modelModifiers: { foo: true, \"bar-baz\": true }\n\n  if (dir.modifiers.length && node.tagType === 1\n  /* COMPONENT */\n  ) {\n    const modifiers = dir.modifiers.map(m => (isSimpleIdentifier(m) ? m : JSON.stringify(m)) + `: true`).join(`, `);\n    const modifiersKey = arg ? isStaticExp(arg) ? `${arg.content}Modifiers` : createCompoundExpression([arg, ' + \"Modifiers\"']) : `modelModifiers`;\n    props.push(createObjectProperty(modifiersKey, createSimpleExpression(`{ ${modifiers} }`, false, dir.loc, 2\n    /* CAN_HOIST */\n    )));\n  }\n\n  return createTransformProps(props);\n};\n\nfunction createTransformProps(props = []) {\n  return {\n    props\n  };\n}\n\nconst validDivisionCharRE = /[\\w).+\\-_$\\]]/;\n\nconst transformFilter = (node, context) => {\n  if (!isCompatEnabled(\"COMPILER_FILTER\"\n  /* COMPILER_FILTERS */\n  , context)) {\n    return;\n  }\n\n  if (node.type === 5\n  /* INTERPOLATION */\n  ) {\n    // filter rewrite is applied before expression transform so only\n    // simple expressions are possible at this stage\n    rewriteFilter(node.content, context);\n  }\n\n  if (node.type === 1\n  /* ELEMENT */\n  ) {\n    node.props.forEach(prop => {\n      if (prop.type === 7\n      /* DIRECTIVE */\n      && prop.name !== 'for' && prop.exp) {\n        rewriteFilter(prop.exp, context);\n      }\n    });\n  }\n};\n\nfunction rewriteFilter(node, context) {\n  if (node.type === 4\n  /* SIMPLE_EXPRESSION */\n  ) {\n    parseFilter(node, context);\n  } else {\n    for (let i = 0; i < node.children.length; i++) {\n      const child = node.children[i];\n      if (typeof child !== 'object') continue;\n\n      if (child.type === 4\n      /* SIMPLE_EXPRESSION */\n      ) {\n        parseFilter(child, context);\n      } else if (child.type === 8\n      /* COMPOUND_EXPRESSION */\n      ) {\n        rewriteFilter(node, context);\n      } else if (child.type === 5\n      /* INTERPOLATION */\n      ) {\n        rewriteFilter(child.content, context);\n      }\n    }\n  }\n}\n\nfunction parseFilter(node, context) {\n  const exp = node.content;\n  let inSingle = false;\n  let inDouble = false;\n  let inTemplateString = false;\n  let inRegex = false;\n  let curly = 0;\n  let square = 0;\n  let paren = 0;\n  let lastFilterIndex = 0;\n  let c,\n      prev,\n      i,\n      expression,\n      filters = [];\n\n  for (i = 0; i < exp.length; i++) {\n    prev = c;\n    c = exp.charCodeAt(i);\n\n    if (inSingle) {\n      if (c === 0x27 && prev !== 0x5c) inSingle = false;\n    } else if (inDouble) {\n      if (c === 0x22 && prev !== 0x5c) inDouble = false;\n    } else if (inTemplateString) {\n      if (c === 0x60 && prev !== 0x5c) inTemplateString = false;\n    } else if (inRegex) {\n      if (c === 0x2f && prev !== 0x5c) inRegex = false;\n    } else if (c === 0x7c && // pipe\n    exp.charCodeAt(i + 1) !== 0x7c && exp.charCodeAt(i - 1) !== 0x7c && !curly && !square && !paren) {\n      if (expression === undefined) {\n        // first filter, end of expression\n        lastFilterIndex = i + 1;\n        expression = exp.slice(0, i).trim();\n      } else {\n        pushFilter();\n      }\n    } else {\n      switch (c) {\n        case 0x22:\n          inDouble = true;\n          break;\n        // \"\n\n        case 0x27:\n          inSingle = true;\n          break;\n        // '\n\n        case 0x60:\n          inTemplateString = true;\n          break;\n        // `\n\n        case 0x28:\n          paren++;\n          break;\n        // (\n\n        case 0x29:\n          paren--;\n          break;\n        // )\n\n        case 0x5b:\n          square++;\n          break;\n        // [\n\n        case 0x5d:\n          square--;\n          break;\n        // ]\n\n        case 0x7b:\n          curly++;\n          break;\n        // {\n\n        case 0x7d:\n          curly--;\n          break;\n        // }\n      }\n\n      if (c === 0x2f) {\n        // /\n        let j = i - 1;\n        let p; // find first non-whitespace prev char\n\n        for (; j >= 0; j--) {\n          p = exp.charAt(j);\n          if (p !== ' ') break;\n        }\n\n        if (!p || !validDivisionCharRE.test(p)) {\n          inRegex = true;\n        }\n      }\n    }\n  }\n\n  if (expression === undefined) {\n    expression = exp.slice(0, i).trim();\n  } else if (lastFilterIndex !== 0) {\n    pushFilter();\n  }\n\n  function pushFilter() {\n    filters.push(exp.slice(lastFilterIndex, i).trim());\n    lastFilterIndex = i + 1;\n  }\n\n  if (filters.length) {\n     false && 0;\n\n    for (i = 0; i < filters.length; i++) {\n      expression = wrapFilter(expression, filters[i], context);\n    }\n\n    node.content = expression;\n  }\n}\n\nfunction wrapFilter(exp, filter, context) {\n  context.helper(RESOLVE_FILTER);\n  const i = filter.indexOf('(');\n\n  if (i < 0) {\n    context.filters.add(filter);\n    return `${toValidAssetId(filter, 'filter')}(${exp})`;\n  } else {\n    const name = filter.slice(0, i);\n    const args = filter.slice(i + 1);\n    context.filters.add(name);\n    return `${toValidAssetId(name, 'filter')}(${exp}${args !== ')' ? ',' + args : args}`;\n  }\n}\n\nconst seen$1 = new WeakSet();\n\nconst transformMemo = (node, context) => {\n  if (node.type === 1\n  /* ELEMENT */\n  ) {\n    const dir = findDir(node, 'memo');\n\n    if (!dir || seen$1.has(node)) {\n      return;\n    }\n\n    seen$1.add(node);\n    return () => {\n      const codegenNode = node.codegenNode || context.currentNode.codegenNode;\n\n      if (codegenNode && codegenNode.type === 13\n      /* VNODE_CALL */\n      ) {\n        // non-component sub tree should be turned into a block\n        if (node.tagType !== 1\n        /* COMPONENT */\n        ) {\n          makeBlock(codegenNode, context);\n        }\n\n        node.codegenNode = createCallExpression(context.helper(WITH_MEMO), [dir.exp, createFunctionExpression(undefined, codegenNode), `_cache`, String(context.cached++)]);\n      }\n    };\n  }\n};\n\nfunction getBaseTransformPreset(prefixIdentifiers) {\n  return [[transformOnce, transformIf, transformMemo, transformFor, ...[transformFilter], ...( false ? 0 : []), transformSlotOutlet, transformElement, trackSlotScopes, transformText], {\n    on: transformOn,\n    bind: transformBind,\n    model: transformModel\n  }];\n} // we name it `baseCompile` so that higher order compilers like\n// @vue/compiler-dom can export `compile` while re-exporting everything else.\n\n\nfunction baseCompile(template, options = {}) {\n  const onError = options.onError || defaultOnError;\n  const isModuleMode = options.mode === 'module';\n  /* istanbul ignore if */\n\n  {\n    if (options.prefixIdentifiers === true) {\n      onError(createCompilerError(46\n      /* X_PREFIX_ID_NOT_SUPPORTED */\n      ));\n    } else if (isModuleMode) {\n      onError(createCompilerError(47\n      /* X_MODULE_MODE_NOT_SUPPORTED */\n      ));\n    }\n  }\n  const prefixIdentifiers = !true;\n\n  if (options.cacheHandlers) {\n    onError(createCompilerError(48\n    /* X_CACHE_HANDLER_NOT_SUPPORTED */\n    ));\n  }\n\n  if (options.scopeId && !isModuleMode) {\n    onError(createCompilerError(49\n    /* X_SCOPE_ID_NOT_SUPPORTED */\n    ));\n  }\n\n  const ast = shared_esm_bundler_isString(template) ? compiler_core_esm_bundler_baseParse(template, options) : template;\n  const [nodeTransforms, directiveTransforms] = getBaseTransformPreset();\n  transform(ast, shared_esm_bundler_extend({}, options, {\n    prefixIdentifiers,\n    nodeTransforms: [...nodeTransforms, ...(options.nodeTransforms || []) // user transforms\n    ],\n    directiveTransforms: shared_esm_bundler_extend({}, directiveTransforms, options.directiveTransforms || {} // user transforms\n    )\n  }));\n  return generate(ast, shared_esm_bundler_extend({}, options, {\n    prefixIdentifiers\n  }));\n}\n\nconst noopDirectiveTransform = () => ({\n  props: []\n});\n\n\n;// CONCATENATED MODULE: ./node_modules/@vue/compiler-dom/dist/compiler-dom.esm-bundler.js\n\n\n\nconst V_MODEL_RADIO = Symbol( false ? 0 : ``);\nconst V_MODEL_CHECKBOX = Symbol( false ? 0 : ``);\nconst V_MODEL_TEXT = Symbol( false ? 0 : ``);\nconst V_MODEL_SELECT = Symbol( false ? 0 : ``);\nconst V_MODEL_DYNAMIC = Symbol( false ? 0 : ``);\nconst V_ON_WITH_MODIFIERS = Symbol( false ? 0 : ``);\nconst V_ON_WITH_KEYS = Symbol( false ? 0 : ``);\nconst V_SHOW = Symbol( false ? 0 : ``);\nconst compiler_dom_esm_bundler_TRANSITION = Symbol( false ? 0 : ``);\nconst TRANSITION_GROUP = Symbol( false ? 0 : ``);\nregisterRuntimeHelpers({\n  [V_MODEL_RADIO]: `vModelRadio`,\n  [V_MODEL_CHECKBOX]: `vModelCheckbox`,\n  [V_MODEL_TEXT]: `vModelText`,\n  [V_MODEL_SELECT]: `vModelSelect`,\n  [V_MODEL_DYNAMIC]: `vModelDynamic`,\n  [V_ON_WITH_MODIFIERS]: `withModifiers`,\n  [V_ON_WITH_KEYS]: `withKeys`,\n  [V_SHOW]: `vShow`,\n  [compiler_dom_esm_bundler_TRANSITION]: `Transition`,\n  [TRANSITION_GROUP]: `TransitionGroup`\n});\n/* eslint-disable no-restricted-globals */\n\nlet decoder;\n\nfunction decodeHtmlBrowser(raw, asAttr = false) {\n  if (!decoder) {\n    decoder = document.createElement('div');\n  }\n\n  if (asAttr) {\n    decoder.innerHTML = `<div foo=\"${raw.replace(/\"/g, '&quot;')}\">`;\n    return decoder.children[0].getAttribute('foo');\n  } else {\n    decoder.innerHTML = raw;\n    return decoder.textContent;\n  }\n}\n\nconst isRawTextContainer = /*#__PURE__*/shared_esm_bundler_makeMap('style,iframe,script,noscript', true);\nconst parserOptions = {\n  isVoidTag: isVoidTag,\n  isNativeTag: tag => shared_esm_bundler_isHTMLTag(tag) || shared_esm_bundler_isSVGTag(tag),\n  isPreTag: tag => tag === 'pre',\n  decodeEntities: decodeHtmlBrowser,\n  isBuiltInComponent: tag => {\n    if (isBuiltInType(tag, `Transition`)) {\n      return compiler_dom_esm_bundler_TRANSITION;\n    } else if (isBuiltInType(tag, `TransitionGroup`)) {\n      return TRANSITION_GROUP;\n    }\n  },\n\n  // https://html.spec.whatwg.org/multipage/parsing.html#tree-construction-dispatcher\n  getNamespace(tag, parent) {\n    let ns = parent ? parent.ns : 0\n    /* HTML */\n    ;\n\n    if (parent && ns === 2\n    /* MATH_ML */\n    ) {\n      if (parent.tag === 'annotation-xml') {\n        if (tag === 'svg') {\n          return 1\n          /* SVG */\n          ;\n        }\n\n        if (parent.props.some(a => a.type === 6\n        /* ATTRIBUTE */\n        && a.name === 'encoding' && a.value != null && (a.value.content === 'text/html' || a.value.content === 'application/xhtml+xml'))) {\n          ns = 0\n          /* HTML */\n          ;\n        }\n      } else if (/^m(?:[ions]|text)$/.test(parent.tag) && tag !== 'mglyph' && tag !== 'malignmark') {\n        ns = 0\n        /* HTML */\n        ;\n      }\n    } else if (parent && ns === 1\n    /* SVG */\n    ) {\n      if (parent.tag === 'foreignObject' || parent.tag === 'desc' || parent.tag === 'title') {\n        ns = 0\n        /* HTML */\n        ;\n      }\n    }\n\n    if (ns === 0\n    /* HTML */\n    ) {\n      if (tag === 'svg') {\n        return 1\n        /* SVG */\n        ;\n      }\n\n      if (tag === 'math') {\n        return 2\n        /* MATH_ML */\n        ;\n      }\n    }\n\n    return ns;\n  },\n\n  // https://html.spec.whatwg.org/multipage/parsing.html#parsing-html-fragments\n  getTextMode({\n    tag,\n    ns\n  }) {\n    if (ns === 0\n    /* HTML */\n    ) {\n      if (tag === 'textarea' || tag === 'title') {\n        return 1\n        /* RCDATA */\n        ;\n      }\n\n      if (isRawTextContainer(tag)) {\n        return 2\n        /* RAWTEXT */\n        ;\n      }\n    }\n\n    return 0\n    /* DATA */\n    ;\n  }\n\n}; // Parse inline CSS strings for static style attributes into an object.\n// This is a NodeTransform since it works on the static `style` attribute and\n// converts it into a dynamic equivalent:\n// style=\"color: red\" -> :style='{ \"color\": \"red\" }'\n// It is then processed by `transformElement` and included in the generated\n// props.\n\nconst transformStyle = node => {\n  if (node.type === 1\n  /* ELEMENT */\n  ) {\n    node.props.forEach((p, i) => {\n      if (p.type === 6\n      /* ATTRIBUTE */\n      && p.name === 'style' && p.value) {\n        // replace p with an expression node\n        node.props[i] = {\n          type: 7\n          /* DIRECTIVE */\n          ,\n          name: `bind`,\n          arg: createSimpleExpression(`style`, true, p.loc),\n          exp: parseInlineCSS(p.value.content, p.loc),\n          modifiers: [],\n          loc: p.loc\n        };\n      }\n    });\n  }\n};\n\nconst parseInlineCSS = (cssText, loc) => {\n  const normalized = parseStringStyle(cssText);\n  return createSimpleExpression(JSON.stringify(normalized), false, loc, 3\n  /* CAN_STRINGIFY */\n  );\n};\n\nfunction createDOMCompilerError(code, loc) {\n  return createCompilerError(code, loc,  false ? 0 : undefined);\n}\n\nconst DOMErrorMessages = {\n  [50\n  /* X_V_HTML_NO_EXPRESSION */\n  ]: `v-html is missing expression.`,\n  [51\n  /* X_V_HTML_WITH_CHILDREN */\n  ]: `v-html will override element children.`,\n  [52\n  /* X_V_TEXT_NO_EXPRESSION */\n  ]: `v-text is missing expression.`,\n  [53\n  /* X_V_TEXT_WITH_CHILDREN */\n  ]: `v-text will override element children.`,\n  [54\n  /* X_V_MODEL_ON_INVALID_ELEMENT */\n  ]: `v-model can only be used on <input>, <textarea> and <select> elements.`,\n  [55\n  /* X_V_MODEL_ARG_ON_ELEMENT */\n  ]: `v-model argument is not supported on plain elements.`,\n  [56\n  /* X_V_MODEL_ON_FILE_INPUT_ELEMENT */\n  ]: `v-model cannot be used on file inputs since they are read-only. Use a v-on:change listener instead.`,\n  [57\n  /* X_V_MODEL_UNNECESSARY_VALUE */\n  ]: `Unnecessary value binding used alongside v-model. It will interfere with v-model's behavior.`,\n  [58\n  /* X_V_SHOW_NO_EXPRESSION */\n  ]: `v-show is missing expression.`,\n  [59\n  /* X_TRANSITION_INVALID_CHILDREN */\n  ]: `<Transition> expects exactly one child element or component.`,\n  [60\n  /* X_IGNORED_SIDE_EFFECT_TAG */\n  ]: `Tags with side effect (<script> and <style>) are ignored in client component templates.`\n};\n\nconst transformVHtml = (dir, node, context) => {\n  const {\n    exp,\n    loc\n  } = dir;\n\n  if (!exp) {\n    context.onError(createDOMCompilerError(50\n    /* X_V_HTML_NO_EXPRESSION */\n    , loc));\n  }\n\n  if (node.children.length) {\n    context.onError(createDOMCompilerError(51\n    /* X_V_HTML_WITH_CHILDREN */\n    , loc));\n    node.children.length = 0;\n  }\n\n  return {\n    props: [createObjectProperty(createSimpleExpression(`innerHTML`, true, loc), exp || createSimpleExpression('', true))]\n  };\n};\n\nconst transformVText = (dir, node, context) => {\n  const {\n    exp,\n    loc\n  } = dir;\n\n  if (!exp) {\n    context.onError(createDOMCompilerError(52\n    /* X_V_TEXT_NO_EXPRESSION */\n    , loc));\n  }\n\n  if (node.children.length) {\n    context.onError(createDOMCompilerError(53\n    /* X_V_TEXT_WITH_CHILDREN */\n    , loc));\n    node.children.length = 0;\n  }\n\n  return {\n    props: [createObjectProperty(createSimpleExpression(`textContent`, true), exp ? createCallExpression(context.helperString(TO_DISPLAY_STRING), [exp], loc) : createSimpleExpression('', true))]\n  };\n};\n\nconst compiler_dom_esm_bundler_transformModel = (dir, node, context) => {\n  const baseResult = transformModel(dir, node, context); // base transform has errors OR component v-model (only need props)\n\n  if (!baseResult.props.length || node.tagType === 1\n  /* COMPONENT */\n  ) {\n    return baseResult;\n  }\n\n  if (dir.arg) {\n    context.onError(createDOMCompilerError(55\n    /* X_V_MODEL_ARG_ON_ELEMENT */\n    , dir.arg.loc));\n  }\n\n  function checkDuplicatedValue() {\n    const value = findProp(node, 'value');\n\n    if (value) {\n      context.onError(createDOMCompilerError(57\n      /* X_V_MODEL_UNNECESSARY_VALUE */\n      , value.loc));\n    }\n  }\n\n  const {\n    tag\n  } = node;\n  const isCustomElement = context.isCustomElement(tag);\n\n  if (tag === 'input' || tag === 'textarea' || tag === 'select' || isCustomElement) {\n    let directiveToUse = V_MODEL_TEXT;\n    let isInvalidType = false;\n\n    if (tag === 'input' || isCustomElement) {\n      const type = findProp(node, `type`);\n\n      if (type) {\n        if (type.type === 7\n        /* DIRECTIVE */\n        ) {\n          // :type=\"foo\"\n          directiveToUse = V_MODEL_DYNAMIC;\n        } else if (type.value) {\n          switch (type.value.content) {\n            case 'radio':\n              directiveToUse = V_MODEL_RADIO;\n              break;\n\n            case 'checkbox':\n              directiveToUse = V_MODEL_CHECKBOX;\n              break;\n\n            case 'file':\n              isInvalidType = true;\n              context.onError(createDOMCompilerError(56\n              /* X_V_MODEL_ON_FILE_INPUT_ELEMENT */\n              , dir.loc));\n              break;\n\n            default:\n              // text type\n               false && 0;\n              break;\n          }\n        }\n      } else if (hasDynamicKeyVBind(node)) {\n        // element has bindings with dynamic keys, which can possibly contain\n        // \"type\".\n        directiveToUse = V_MODEL_DYNAMIC;\n      } else {\n        // text type\n         false && 0;\n      }\n    } else if (tag === 'select') {\n      directiveToUse = V_MODEL_SELECT;\n    } else {\n      // textarea\n       false && 0;\n    } // inject runtime directive\n    // by returning the helper symbol via needRuntime\n    // the import will replaced a resolveDirective call.\n\n\n    if (!isInvalidType) {\n      baseResult.needRuntime = context.helper(directiveToUse);\n    }\n  } else {\n    context.onError(createDOMCompilerError(54\n    /* X_V_MODEL_ON_INVALID_ELEMENT */\n    , dir.loc));\n  } // native vmodel doesn't need the `modelValue` props since they are also\n  // passed to the runtime as `binding.value`. removing it reduces code size.\n\n\n  baseResult.props = baseResult.props.filter(p => !(p.key.type === 4\n  /* SIMPLE_EXPRESSION */\n  && p.key.content === 'modelValue'));\n  return baseResult;\n};\n\nconst isEventOptionModifier = /*#__PURE__*/shared_esm_bundler_makeMap(`passive,once,capture`);\nconst isNonKeyModifier = /*#__PURE__*/shared_esm_bundler_makeMap( // event propagation management\n`stop,prevent,self,` + // system modifiers + exact\n`ctrl,shift,alt,meta,exact,` + // mouse\n`middle`); // left & right could be mouse or key modifiers based on event type\n\nconst maybeKeyModifier = /*#__PURE__*/shared_esm_bundler_makeMap('left,right');\nconst isKeyboardEvent = /*#__PURE__*/shared_esm_bundler_makeMap(`onkeyup,onkeydown,onkeypress`, true);\n\nconst resolveModifiers = (key, modifiers, context, loc) => {\n  const keyModifiers = [];\n  const nonKeyModifiers = [];\n  const eventOptionModifiers = [];\n\n  for (let i = 0; i < modifiers.length; i++) {\n    const modifier = modifiers[i];\n\n    if (modifier === 'native' && checkCompatEnabled(\"COMPILER_V_ON_NATIVE\"\n    /* COMPILER_V_ON_NATIVE */\n    , context, loc)) {\n      eventOptionModifiers.push(modifier);\n    } else if (isEventOptionModifier(modifier)) {\n      // eventOptionModifiers: modifiers for addEventListener() options,\n      // e.g. .passive & .capture\n      eventOptionModifiers.push(modifier);\n    } else {\n      // runtimeModifiers: modifiers that needs runtime guards\n      if (maybeKeyModifier(modifier)) {\n        if (isStaticExp(key)) {\n          if (isKeyboardEvent(key.content)) {\n            keyModifiers.push(modifier);\n          } else {\n            nonKeyModifiers.push(modifier);\n          }\n        } else {\n          keyModifiers.push(modifier);\n          nonKeyModifiers.push(modifier);\n        }\n      } else {\n        if (isNonKeyModifier(modifier)) {\n          nonKeyModifiers.push(modifier);\n        } else {\n          keyModifiers.push(modifier);\n        }\n      }\n    }\n  }\n\n  return {\n    keyModifiers,\n    nonKeyModifiers,\n    eventOptionModifiers\n  };\n};\n\nconst transformClick = (key, event) => {\n  const isStaticClick = isStaticExp(key) && key.content.toLowerCase() === 'onclick';\n  return isStaticClick ? createSimpleExpression(event, true) : key.type !== 4\n  /* SIMPLE_EXPRESSION */\n  ? createCompoundExpression([`(`, key, `) === \"onClick\" ? \"${event}\" : (`, key, `)`]) : key;\n};\n\nconst compiler_dom_esm_bundler_transformOn = (dir, node, context) => {\n  return transformOn(dir, node, context, baseResult => {\n    const {\n      modifiers\n    } = dir;\n    if (!modifiers.length) return baseResult;\n    let {\n      key,\n      value: handlerExp\n    } = baseResult.props[0];\n    const {\n      keyModifiers,\n      nonKeyModifiers,\n      eventOptionModifiers\n    } = resolveModifiers(key, modifiers, context, dir.loc); // normalize click.right and click.middle since they don't actually fire\n\n    if (nonKeyModifiers.includes('right')) {\n      key = transformClick(key, `onContextmenu`);\n    }\n\n    if (nonKeyModifiers.includes('middle')) {\n      key = transformClick(key, `onMouseup`);\n    }\n\n    if (nonKeyModifiers.length) {\n      handlerExp = createCallExpression(context.helper(V_ON_WITH_MODIFIERS), [handlerExp, JSON.stringify(nonKeyModifiers)]);\n    }\n\n    if (keyModifiers.length && ( // if event name is dynamic, always wrap with keys guard\n    !isStaticExp(key) || isKeyboardEvent(key.content))) {\n      handlerExp = createCallExpression(context.helper(V_ON_WITH_KEYS), [handlerExp, JSON.stringify(keyModifiers)]);\n    }\n\n    if (eventOptionModifiers.length) {\n      const modifierPostfix = eventOptionModifiers.map(shared_esm_bundler_capitalize).join('');\n      key = isStaticExp(key) ? createSimpleExpression(`${key.content}${modifierPostfix}`, true) : createCompoundExpression([`(`, key, `) + \"${modifierPostfix}\"`]);\n    }\n\n    return {\n      props: [createObjectProperty(key, handlerExp)]\n    };\n  });\n};\n\nconst transformShow = (dir, node, context) => {\n  const {\n    exp,\n    loc\n  } = dir;\n\n  if (!exp) {\n    context.onError(createDOMCompilerError(58\n    /* X_V_SHOW_NO_EXPRESSION */\n    , loc));\n  }\n\n  return {\n    props: [],\n    needRuntime: context.helper(V_SHOW)\n  };\n};\n\nconst warnTransitionChildren = (node, context) => {\n  if (node.type === 1\n  /* ELEMENT */\n  && node.tagType === 1\n  /* COMPONENT */\n  ) {\n    const component = context.isBuiltInComponent(node.tag);\n\n    if (component === compiler_dom_esm_bundler_TRANSITION) {\n      return () => {\n        if (node.children.length && hasMultipleChildren(node)) {\n          context.onError(createDOMCompilerError(59\n          /* X_TRANSITION_INVALID_CHILDREN */\n          , {\n            start: node.children[0].loc.start,\n            end: node.children[node.children.length - 1].loc.end,\n            source: ''\n          }));\n        }\n      };\n    }\n  }\n};\n\nfunction hasMultipleChildren(node) {\n  // #1352 filter out potential comment nodes.\n  const children = node.children = node.children.filter(c => c.type !== 3\n  /* COMMENT */\n  && !(c.type === 2\n  /* TEXT */\n  && !c.content.trim()));\n  const child = children[0];\n  return children.length !== 1 || child.type === 11\n  /* FOR */\n  || child.type === 9\n  /* IF */\n  && child.branches.some(hasMultipleChildren);\n}\n\nconst ignoreSideEffectTags = (node, context) => {\n  if (node.type === 1\n  /* ELEMENT */\n  && node.tagType === 0\n  /* ELEMENT */\n  && (node.tag === 'script' || node.tag === 'style')) {\n    context.onError(createDOMCompilerError(60\n    /* X_IGNORED_SIDE_EFFECT_TAG */\n    , node.loc));\n    context.removeNode();\n  }\n};\n\nconst DOMNodeTransforms = [transformStyle, ...( false ? 0 : [])];\nconst DOMDirectiveTransforms = {\n  cloak: noopDirectiveTransform,\n  html: transformVHtml,\n  text: transformVText,\n  model: compiler_dom_esm_bundler_transformModel,\n  on: compiler_dom_esm_bundler_transformOn,\n  show: transformShow\n};\n\nfunction compiler_dom_esm_bundler_compile(template, options = {}) {\n  return baseCompile(template, shared_esm_bundler_extend({}, parserOptions, options, {\n    nodeTransforms: [// ignore <script> and <tag>\n    // this is not put inside DOMNodeTransforms because that list is used\n    // by compiler-ssr to generate vnode fallback branches\n    ignoreSideEffectTags, ...DOMNodeTransforms, ...(options.nodeTransforms || [])],\n    directiveTransforms: shared_esm_bundler_extend({}, DOMDirectiveTransforms, options.directiveTransforms || {}),\n    transformHoist: null\n  }));\n}\n\nfunction parse(template, options = {}) {\n  return baseParse(template, extend({}, parserOptions, options));\n}\n\n\n;// CONCATENATED MODULE: ./node_modules/vue/dist/vue.esm-bundler.js\n\n\n\n\n\n\nfunction initDev() {\n  {\n    initCustomFormatter();\n  }\n} // This entry is the \"full-build\" that includes both the runtime\n\n\nif (false) {}\n\nconst compileCache = Object.create(null);\n\nfunction compileToFunction(template, options) {\n  if (!shared_esm_bundler_isString(template)) {\n    if (template.nodeType) {\n      template = template.innerHTML;\n    } else {\n       false && 0;\n      return shared_esm_bundler_NOOP;\n    }\n  }\n\n  const key = template;\n  const cached = compileCache[key];\n\n  if (cached) {\n    return cached;\n  }\n\n  if (template[0] === '#') {\n    const el = document.querySelector(template);\n\n    if (false) {} // __UNSAFE__\n    // Reason: potential execution of JS expressions in in-DOM template.\n    // The user must make sure the in-DOM template is trusted. If it's rendered\n    // by the server, the template should not contain any user data.\n\n\n    template = el ? el.innerHTML : ``;\n  }\n\n  const {\n    code\n  } = compiler_dom_esm_bundler_compile(template, shared_esm_bundler_extend({\n    hoistStatic: true,\n    onError:  false ? 0 : undefined,\n    onWarn:  false ? 0 : shared_esm_bundler_NOOP\n  }, options));\n\n  function onError(err, asWarning = false) {\n    const message = asWarning ? err.message : `Template compilation error: ${err.message}`;\n    const codeFrame = err.loc && generateCodeFrame(template, err.loc.start.offset, err.loc.end.offset);\n    runtime_core_esm_bundler_warn(codeFrame ? `${message}\\n${codeFrame}` : message);\n  } // The wildcard import results in a huge object with every export\n  // with keys that cannot be mangled, and can be quite heavy size-wise.\n  // In the global build we know `Vue` is available globally so we can avoid\n  // the wildcard object.\n\n\n  const render = new Function('Vue', code)(runtime_dom_esm_bundler_namespaceObject);\n  render._rc = true;\n  return compileCache[key] = render;\n}\n\nregisterRuntimeCompiler(compileToFunction);\n\n\n//# sourceURL=webpack://@skipsolabs/snam-slider/./node_modules/vue/dist/vue.esm-bundler.js_+_6_modules?")},242:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval('\n\nvar _interopRequireDefault = __webpack_require__(424);\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports["default"] = void 0;\n\nvar _BIconArrowLeft = _interopRequireDefault(__webpack_require__(258));\n\nvar _BIconArrowRight = _interopRequireDefault(__webpack_require__(514));\n\nvar _BIconPause = _interopRequireDefault(__webpack_require__(137));\n\nvar _BIconPlayFill = _interopRequireDefault(__webpack_require__(292));\n\nvar _default = {\n  BIconArrowLeft: _BIconArrowLeft.default,\n  BIconArrowRight: _BIconArrowRight.default,\n  BIconPause: _BIconPause.default,\n  BIconPlayFill: _BIconPlayFill.default\n};\nexports["default"] = _default;\n\n//# sourceURL=webpack://@skipsolabs/snam-slider/./src/icons/index.js?')},939:(__unused_webpack_module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval("\n\nwindow.initSnamSlider = function (el) {\n  var _require = __webpack_require__(670),\n      createApp = _require.createApp;\n\n  var SnamSlider = __webpack_require__(78);\n\n  var app = createApp({\n    components: {\n      SnamSlider: SnamSlider.default\n    },\n    template: el.innerHTML\n  });\n  app.mount(el);\n};\n\n//# sourceURL=webpack://@skipsolabs/snam-slider/./src/main.js?")},895:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports["default"] = void 0;\n\nvar _vue = __webpack_require__(670);\n\nvar state = (0, _vue.ref)({\n  items: [],\n  isFirstSlide: true,\n  currentIndex: 0\n});\n\nvar SET_ITEMS = function SET_ITEMS(items) {\n  state.value.items = items;\n};\n\nvar SET_CURRENT_INDEX = function SET_CURRENT_INDEX(index) {\n  state.value.currentIndex = index;\n};\n\nvar SHOW_NEXT_ITEM = function SHOW_NEXT_ITEM() {\n  state.value.currentIndex = (state.value.currentIndex + 1) % state.value.items.length;\n};\n\nvar SHOW_PREV_ITEM = function SHOW_PREV_ITEM() {\n  state.value.currentIndex = (state.value.currentIndex - 1) % state.value.items.length;\n};\n\nvar FLAG_FIRST_SLIDE = function FLAG_FIRST_SLIDE() {\n  state.value.isFirstSlide = false;\n};\n\nvar _default = {\n  state: state,\n  SET_ITEMS: SET_ITEMS,\n  SET_CURRENT_INDEX: SET_CURRENT_INDEX,\n  SHOW_NEXT_ITEM: SHOW_NEXT_ITEM,\n  SHOW_PREV_ITEM: SHOW_PREV_ITEM,\n  FLAG_FIRST_SLIDE: FLAG_FIRST_SLIDE\n};\nexports["default"] = _default;\n\n//# sourceURL=webpack://@skipsolabs/snam-slider/./src/store.js?')},690:(module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(705);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);\n// Imports\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(function(i){return i[1]});\n___CSS_LOADER_EXPORT___.push([module.id, \"@import url(https://fonts.googleapis.com/css2?family=Ubuntu:wght@400;500;700&display=swap);\"]);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".sk-slider[data-v-08a92f65]{font-family:\\\"Ubuntu\\\",sans-serif;width:100%;height:100%;min-height:580px;margin:0 auto;overflow:hidden;position:relative;display:flex;flex-direction:column;align-items:flex-start;justify-content:space-between;background-color:#fff;z-index:1}@media(min-width: 1024px){.sk-slider[data-v-08a92f65]{flex-direction:column;height:900px}}.sk-slider .sk-slider__img[data-v-08a92f65]{position:absolute;top:0;right:0;height:100%;background-repeat:no-repeat;background-position:center;background-size:cover;z-index:-10;width:800px}@media(max-width: 1490px){.sk-slider .sk-slider__img[data-v-08a92f65]{left:47vw;right:auto}}@media(max-width: 1023px){.sk-slider .sk-slider__img[data-v-08a92f65]{height:30vw;min-height:200px;width:50vw;min-width:380px;left:auto;right:-100px;border-bottom:2px solid #fff}}.sk-slider .sk-slider__img[data-v-08a92f65]:before{content:\\\"\\\";position:absolute;height:100%;width:100vw;right:0;bottom:0;background-image:url(\\\"https://skipsolabs-snam.s3.eu-west-1.amazonaws.com/froala/uploadedContent/uploads/Mobile-Mask-no-blur-min.png\\\");background-repeat:no-repeat;background-position:bottom right;background-size:auto 100%;z-index:-5}@media(min-width: 1024px){.sk-slider .sk-slider__img[data-v-08a92f65]:before{background-image:url(\\\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' width='1366' height='886.001' viewBox='0 0 1366 886.001'%3E%3Cdefs%3E%3CradialGradient id='radial-gradient' cx='0.762' cy='0.5' r='0.334' gradientTransform='translate(0 -0.253) scale(1 1.505)' gradientUnits='objectBoundingBox'%3E%3Cstop offset='0' stop-color='%23fff' stop-opacity='0.6'/%3E%3Cstop offset='1' stop-color='%23fff'/%3E%3C/radialGradient%3E%3C/defs%3E%3Cg id='Mask_no_blur' data-name='Mask no blur' transform='translate(0 -14)'%3E%3Cpath id='Subtraction_1' data-name='Subtraction 1' d='M328,1153H-1038V267H328v31.525a434.832,434.832,0,0,0-181.589-4.331,167.63,167.63,0,0,0-29.336,8.4A170.658,170.658,0,0,0,90.8,315.554a196.555,196.555,0,0,0-23.672,16.9,250.354,250.354,0,0,0-21.521,20.217c-6.6,6.946-13.087,14.439-19.823,22.906C19.774,383.135,13.7,391.3,7.2,400.55c-12.073,17.2-23.853,35.715-35.244,53.625l-.013.021c-9.772,15.364-19.878,31.251-30.277,46.494-11.686,17.129-22.444,31.5-32.887,43.949-6.238,7.434-12.983,14.85-20.622,22.673-6.8,6.964-14.154,14.09-22.485,21.787-15.466,14.289-31.961,28.355-47.913,41.958l-.008.007c-17.829,15.2-36.265,30.926-52.989,46.749-9,8.514-16.822,16.4-23.917,24.1a312.886,312.886,0,0,0-20.942,25.079,220.356,220.356,0,0,0-17.028,26.425A167.886,167.886,0,0,0-309.3,781.56a145.82,145.82,0,0,0-6.381,30.225,150.067,150.067,0,0,0,.353,32.679,196.65,196.65,0,0,0,4.544,24.724,195.033,195.033,0,0,0,7.44,23.274,203.147,203.147,0,0,0,10.1,21.893A220.934,220.934,0,0,0-280.7,934.934c4.466,6.514,9.423,13.019,14.733,19.333,5.139,6.111,10.758,12.219,16.7,18.155a364.321,364.321,0,0,0,38.362,33.045c24.967,18.786,54.428,36.754,90.067,54.932,32.9,16.782,66.711,31.491,95.444,43.665,17.106,7.248,34.223,13.759,50.875,19.35,17.517,5.882,34.987,10.9,51.925,14.927a499.733,499.733,0,0,0,52.481,9.611,420.388,420.388,0,0,0,52.542,3.4c12.368,0,24.683-.6,36.6-1.8a339.613,339.613,0,0,0,36.219-5.594,321.188,321.188,0,0,0,35.665-9.7,314.7,314.7,0,0,0,34.941-14.11c.736-.35,1.458-.7,2.149-1.032V1153Z' transform='translate(1038 -253)' fill='url(%23radial-gradient)'/%3E%3C/g%3E%3C/svg%3E%0A\\\")}}@media(max-width: 1023px){.sk-slider .sk-slider__img[data-v-08a92f65]:before{right:100px;bottom:-1px}}.sk-slider-control[data-v-08a92f65]{position:sticky;bottom:25px;width:80%;min-width:285px;margin:0 auto;height:56px;padding:7px 24px;background:linear-gradient(90deg, rgba(147, 207, 247, 0.2) 0%, rgba(217, 241, 255, 0.2) 100%);backdrop-filter:blur(10px);border-radius:var(--g-radius-lg);display:flex;align-items:center;justify-content:space-between}@media(min-width: 1024px){.sk-slider-control[data-v-08a92f65]{width:1062px;margin:0 auto;height:170px;flex-direction:column-reverse;justify-content:center;align-items:flex-start;bottom:64px}}.sk-slider-control .sk-slider__timeline[data-v-08a92f65]{margin:24px 0}.sk-slider-control .sk-slider-control__text[data-v-08a92f65]{display:none}@media(min-width: 1024px){.sk-slider-control .sk-slider-control__text[data-v-08a92f65]{display:block;color:#004c97;max-width:265px;margin:0}}.sk-slider-control .sk-slider-btns[data-v-08a92f65]{max-width:265px;display:inline-flex;justify-content:space-between;align-items:center;width:100%}.sk-slider-control .sk-slider-btns .blob-autoplay[data-v-08a92f65],.sk-slider-control .sk-slider-btns .blob-prev[data-v-08a92f65],.sk-slider-control .sk-slider-btns .blob-next[data-v-08a92f65]{width:40px;height:40px;background-color:var(--g-color-1);border-radius:var(--radius-blob-3)}.sk-slider-control .sk-slider-btns .blob-prev[data-v-08a92f65],.sk-slider-control .sk-slider-btns .blob-next[data-v-08a92f65]{display:none}@media(min-width: 1024px){.sk-slider-control .sk-slider-btns .blob-prev[data-v-08a92f65],.sk-slider-control .sk-slider-btns .blob-next[data-v-08a92f65]{display:inline-flex;justify-content:center;align-items:center;background:var(--gradient)}}.sk-slider-control .sk-slider-control_items[data-v-08a92f65]{display:none}@media(min-width: 1024px){.sk-slider-control .sk-slider-control_items[data-v-08a92f65]{display:flex;justify-content:space-between;position:absolute;top:32px;left:354px;width:650px;height:172px}.sk-slider-control .sk-slider-control_items .sk-slider-control_item[data-v-08a92f65]{position:relative;cursor:pointer;overflow:hidden;border-radius:var(--g-radius-lg);z-index:20;overflow:hidden}.sk-slider-control .sk-slider-control_items .sk-slider-control_item[data-v-08a92f65]::before{content:\\\"\\\";position:absolute;top:0;left:0;width:100%;height:100%;background:linear-gradient(180deg, hsla(0deg, 0%, 0%, 0.282) 10%, hsla(0deg, 0%, 0%, 0.182) 100%);border-radius:var(--g-radius-lg);opacity:1;transition:all .3s ease-in-out}.sk-slider-control .sk-slider-control_items .sk-slider-control_item[data-v-08a92f65]:hover::before{z-index:10;background:linear-gradient(180deg, hsla(0deg, 0%, 0%, 0.482) 10%, hsla(0deg, 0%, 0%, 0.682) 100%)}.sk-slider-control .sk-slider-control_items .sk-slider-control_item:hover .sk-slider-control_item__img[data-v-08a92f65]{transition:all .5s ease-in-out;transform:scale(1.15);font-size:.8rem;box-shadow:0px 0px 10px rgba(0,0,0,.5);z-index:1}.sk-slider-control .sk-slider-control_items .sk-slider-control_item:hover .sk-slider-control_item__text[data-v-08a92f65]{z-index:11}.sk-slider-control .sk-slider-control_items .sk-slider-control_item__img[data-v-08a92f65]{width:306px;height:172px;box-shadow:0px 2px 4px rgba(86,95,106,.22);border-radius:var(--g-radius-lg);object-fit:cover}.sk-slider-control .sk-slider-control_items .sk-slider-control_item__text[data-v-08a92f65]{position:absolute;bottom:0px;left:0;width:100%;display:flex;flex-direction:column;justify-content:center;align-items:flex-start;color:#fff;padding:16px 16px 20px 16px;border-radius:var(--g-radius-lg);font-family:\\\"Ubuntu\\\";font-style:normal;transition:all .3s ease-in-out;background:linear-gradient(180deg, rgba(0, 0, 0, 0) 0%, rgba(0, 0, 0, 0.4823529412) 100%)}.sk-slider-control .sk-slider-control_items .sk-slider-control_item__text .ellipsisClamp[data-v-08a92f65]{display:-webkit-box;-webkit-line-clamp:3;-webkit-box-orient:vertical;overflow:hidden;text-overflow:ellipsis}.sk-slider-control .sk-slider-control_items .sk-slider-control_item__text .clamp-lines-1[data-v-08a92f65]{-webkit-line-clamp:1}.sk-slider-control .sk-slider-control_items .sk-slider-control_item__text b[data-v-08a92f65]{flex:1;display:flex;align-content:flex-start;justify-content:flex-start;align-items:flex-end}.sk-slider-control .sk-slider-control_items .sk-slider-control_item__text p[data-v-08a92f65]{max-height:50px;overflow:hidden}}@media(min-width: 1500px){.sk-slider-control .sk-slider-control_items[data-v-08a92f65]{left:33%;justify-content:space-around}}.control-icon[data-v-08a92f65]{color:var(--g-color-white);width:24px;height:24px}.sk-slider__items[data-v-08a92f65]{z-index:0;display:flex;justify-content:flex-end;flex-direction:column;align-items:flex-start;width:100%;flex:1}@media(min-width: 1024px){.sk-slider__items[data-v-08a92f65]{flex-direction:row;justify-content:flex-start;align-items:center;flex:1;width:100%}}.sk-slider__items .sk-slider__item__content[data-v-08a92f65]{margin-top:100px;padding:0px 15px;z-index:10;position:relative;margin-bottom:30px}@media(min-width: 1024px){.sk-slider__items .sk-slider__item__content[data-v-08a92f65]{padding-left:44px}}@media(min-width: 1600px){.sk-slider__items .sk-slider__item__content[data-v-08a92f65]{transform:translateY(0px);padding-left:7.5%}}@media(max-width: 1023px){.sk-slider__items .sk-slider__item__content[data-v-08a92f65]{margin-top:130px}}.sk-slider__items .sk-slider__item__content .sk-slider__flex[data-v-08a92f65]{display:flex;justify-content:flex-start;align-items:center}.sk-slider__items .sk-slider__item__content .sk-slider__flex .sk-slider__section[data-v-08a92f65]{color:#04122a;margin-right:16px;font-family:\\\"Ubuntu\\\";font-style:normal}.sk-slider__items .sk-slider__item__content .sk-slider__flex .sk-slider__tag[data-v-08a92f65]{border:1px solid #004c97;box-sizing:border-box;border-radius:32px;padding:3px 15px;font-family:\\\"Ubuntu\\\";font-style:normal;color:#004c97}.sk-slider__btn__text[data-v-08a92f65]{font-family:\\\"Ubuntu\\\";font-style:normal;display:flex;align-items:center;text-align:center;color:var(--g-color-white);white-space:nowrap;position:relative}.sk-slider__btn svg[data-v-08a92f65]{width:24px;height:24px;color:var(--g-color-white);margin-left:10px}.sk-slider__btn .sk-slider__link[data-v-08a92f65]{position:absolute;width:100%;height:100%;top:0;left:0}.sk-slider__text[data-v-08a92f65]{font-family:\\\"Ubuntu\\\";font-style:normal;margin:0;color:#3e444a;overflow:hidden}@media(min-width: 1024px){.sk-slider__text[data-v-08a92f65]{max-width:53vw;font-size:24px;line-height:40px}}.sk-slider__title[data-v-08a92f65]{font-family:\\\"Ubuntu\\\";font-style:normal;color:#004c97;margin-top:20px;margin-bottom:30px}@media(min-width: 1024px){.sk-slider__title[data-v-08a92f65]{max-width:57vw}}.dots[data-v-08a92f65]{align-self:center;list-style:none;margin:0;padding:0;display:flex;height:8px;transform:translateY(-8px)}@media(min-width: 1024px){.dots[data-v-08a92f65]{align-self:flex-start}}.dots li[data-v-08a92f65]{margin-right:24px;cursor:pointer;height:8px;position:relative}.dots li .dots__items[data-v-08a92f65]{height:.5em;width:.5em;display:inline-block;background:var(--g-color-light-gray);border-radius:var(--g-radius-sm);cursor:pointer;transition:all 300ms ease;overflow:hidden}.dots li .dots__items span[data-v-08a92f65]{width:8px;height:18px;border-radius:var(-g-radius-full);background-color:var(--g-color-light-gray);transition:background-color .3s ease}@media(min-width: 1024px){.dots li[data-v-08a92f65]{display:none}}.dots li.active[data-v-08a92f65]{display:block}.dots li.active .dots__items[data-v-08a92f65]{height:8px}@media(max-width: 1024px){.dots li.active .dots__items[data-v-08a92f65]{width:60px !important}}.dots li.active .dots__items span[data-v-08a92f65]{display:block;height:.5em;width:0;border-radius:var(--g-radius-sm);background:var(--g-color-1)}.sk-gradient-btn[data-v-08a92f65]{background:var(--gradient);width:fit-content;height:40px;display:flex;align-items:center;margin:40px 0px;border-radius:100px}.sk-gradient-btn a[data-v-08a92f65]{display:inline-flex;padding:8px 18px;align-items:center;justify-content:center}.sk-blob[data-v-08a92f65]{height:40px;width:40px;display:flex;justify-content:center;align-items:center}.ellipsisClamp[data-v-08a92f65]{display:-webkit-box;-webkit-line-clamp:3;-webkit-box-orient:vertical;overflow:hidden;text-overflow:ellipsis}\", \"\"]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n\n\n//# sourceURL=webpack://@skipsolabs/snam-slider/./src/SkControl.vue?./node_modules/css-loader/dist/cjs.js??clonedRuleSet-3.use%5B1%5D!./node_modules/vue-loader/dist/stylePostLoader.js!./node_modules/sass-loader/dist/cjs.js??clonedRuleSet-3.use%5B2%5D!./node_modules/vue-loader/dist/index.js??ruleSet%5B0%5D")},388:(module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(705);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);\n// Imports\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(function(i){return i[1]});\n___CSS_LOADER_EXPORT___.push([module.id, \"@import url(https://fonts.googleapis.com/css2?family=Ubuntu:wght@400;500;700&display=swap);\"]);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".sk-slider[data-v-8c515fde]{font-family:\\\"Ubuntu\\\",sans-serif;width:100%;height:100%;min-height:580px;margin:0 auto;overflow:hidden;position:relative;display:flex;flex-direction:column;align-items:flex-start;justify-content:space-between;background-color:#fff;z-index:1}@media(min-width: 1024px){.sk-slider[data-v-8c515fde]{flex-direction:column;height:900px}}.sk-slider .sk-slider__img[data-v-8c515fde]{position:absolute;top:0;right:0;height:100%;background-repeat:no-repeat;background-position:center;background-size:cover;z-index:-10;width:800px}@media(max-width: 1490px){.sk-slider .sk-slider__img[data-v-8c515fde]{left:47vw;right:auto}}@media(max-width: 1023px){.sk-slider .sk-slider__img[data-v-8c515fde]{height:30vw;min-height:200px;width:50vw;min-width:380px;left:auto;right:-100px;border-bottom:2px solid #fff}}.sk-slider .sk-slider__img[data-v-8c515fde]:before{content:\\\"\\\";position:absolute;height:100%;width:100vw;right:0;bottom:0;background-image:url(\\\"https://skipsolabs-snam.s3.eu-west-1.amazonaws.com/froala/uploadedContent/uploads/Mobile-Mask-no-blur-min.png\\\");background-repeat:no-repeat;background-position:bottom right;background-size:auto 100%;z-index:-5}@media(min-width: 1024px){.sk-slider .sk-slider__img[data-v-8c515fde]:before{background-image:url(\\\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' width='1366' height='886.001' viewBox='0 0 1366 886.001'%3E%3Cdefs%3E%3CradialGradient id='radial-gradient' cx='0.762' cy='0.5' r='0.334' gradientTransform='translate(0 -0.253) scale(1 1.505)' gradientUnits='objectBoundingBox'%3E%3Cstop offset='0' stop-color='%23fff' stop-opacity='0.6'/%3E%3Cstop offset='1' stop-color='%23fff'/%3E%3C/radialGradient%3E%3C/defs%3E%3Cg id='Mask_no_blur' data-name='Mask no blur' transform='translate(0 -14)'%3E%3Cpath id='Subtraction_1' data-name='Subtraction 1' d='M328,1153H-1038V267H328v31.525a434.832,434.832,0,0,0-181.589-4.331,167.63,167.63,0,0,0-29.336,8.4A170.658,170.658,0,0,0,90.8,315.554a196.555,196.555,0,0,0-23.672,16.9,250.354,250.354,0,0,0-21.521,20.217c-6.6,6.946-13.087,14.439-19.823,22.906C19.774,383.135,13.7,391.3,7.2,400.55c-12.073,17.2-23.853,35.715-35.244,53.625l-.013.021c-9.772,15.364-19.878,31.251-30.277,46.494-11.686,17.129-22.444,31.5-32.887,43.949-6.238,7.434-12.983,14.85-20.622,22.673-6.8,6.964-14.154,14.09-22.485,21.787-15.466,14.289-31.961,28.355-47.913,41.958l-.008.007c-17.829,15.2-36.265,30.926-52.989,46.749-9,8.514-16.822,16.4-23.917,24.1a312.886,312.886,0,0,0-20.942,25.079,220.356,220.356,0,0,0-17.028,26.425A167.886,167.886,0,0,0-309.3,781.56a145.82,145.82,0,0,0-6.381,30.225,150.067,150.067,0,0,0,.353,32.679,196.65,196.65,0,0,0,4.544,24.724,195.033,195.033,0,0,0,7.44,23.274,203.147,203.147,0,0,0,10.1,21.893A220.934,220.934,0,0,0-280.7,934.934c4.466,6.514,9.423,13.019,14.733,19.333,5.139,6.111,10.758,12.219,16.7,18.155a364.321,364.321,0,0,0,38.362,33.045c24.967,18.786,54.428,36.754,90.067,54.932,32.9,16.782,66.711,31.491,95.444,43.665,17.106,7.248,34.223,13.759,50.875,19.35,17.517,5.882,34.987,10.9,51.925,14.927a499.733,499.733,0,0,0,52.481,9.611,420.388,420.388,0,0,0,52.542,3.4c12.368,0,24.683-.6,36.6-1.8a339.613,339.613,0,0,0,36.219-5.594,321.188,321.188,0,0,0,35.665-9.7,314.7,314.7,0,0,0,34.941-14.11c.736-.35,1.458-.7,2.149-1.032V1153Z' transform='translate(1038 -253)' fill='url(%23radial-gradient)'/%3E%3C/g%3E%3C/svg%3E%0A\\\")}}@media(max-width: 1023px){.sk-slider .sk-slider__img[data-v-8c515fde]:before{right:100px;bottom:-1px}}.sk-slider-control[data-v-8c515fde]{position:sticky;bottom:25px;width:80%;min-width:285px;margin:0 auto;height:56px;padding:7px 24px;background:linear-gradient(90deg, rgba(147, 207, 247, 0.2) 0%, rgba(217, 241, 255, 0.2) 100%);backdrop-filter:blur(10px);border-radius:var(--g-radius-lg);display:flex;align-items:center;justify-content:space-between}@media(min-width: 1024px){.sk-slider-control[data-v-8c515fde]{width:1062px;margin:0 auto;height:170px;flex-direction:column-reverse;justify-content:center;align-items:flex-start;bottom:64px}}.sk-slider-control .sk-slider__timeline[data-v-8c515fde]{margin:24px 0}.sk-slider-control .sk-slider-control__text[data-v-8c515fde]{display:none}@media(min-width: 1024px){.sk-slider-control .sk-slider-control__text[data-v-8c515fde]{display:block;color:#004c97;max-width:265px;margin:0}}.sk-slider-control .sk-slider-btns[data-v-8c515fde]{max-width:265px;display:inline-flex;justify-content:space-between;align-items:center;width:100%}.sk-slider-control .sk-slider-btns .blob-autoplay[data-v-8c515fde],.sk-slider-control .sk-slider-btns .blob-prev[data-v-8c515fde],.sk-slider-control .sk-slider-btns .blob-next[data-v-8c515fde]{width:40px;height:40px;background-color:var(--g-color-1);border-radius:var(--radius-blob-3)}.sk-slider-control .sk-slider-btns .blob-prev[data-v-8c515fde],.sk-slider-control .sk-slider-btns .blob-next[data-v-8c515fde]{display:none}@media(min-width: 1024px){.sk-slider-control .sk-slider-btns .blob-prev[data-v-8c515fde],.sk-slider-control .sk-slider-btns .blob-next[data-v-8c515fde]{display:inline-flex;justify-content:center;align-items:center;background:var(--gradient)}}.sk-slider-control .sk-slider-control_items[data-v-8c515fde]{display:none}@media(min-width: 1024px){.sk-slider-control .sk-slider-control_items[data-v-8c515fde]{display:flex;justify-content:space-between;position:absolute;top:32px;left:354px;width:650px;height:172px}.sk-slider-control .sk-slider-control_items .sk-slider-control_item[data-v-8c515fde]{position:relative;cursor:pointer;overflow:hidden;border-radius:var(--g-radius-lg);z-index:20;overflow:hidden}.sk-slider-control .sk-slider-control_items .sk-slider-control_item[data-v-8c515fde]::before{content:\\\"\\\";position:absolute;top:0;left:0;width:100%;height:100%;background:linear-gradient(180deg, hsla(0deg, 0%, 0%, 0.282) 10%, hsla(0deg, 0%, 0%, 0.182) 100%);border-radius:var(--g-radius-lg);opacity:1;transition:all .3s ease-in-out}.sk-slider-control .sk-slider-control_items .sk-slider-control_item[data-v-8c515fde]:hover::before{z-index:10;background:linear-gradient(180deg, hsla(0deg, 0%, 0%, 0.482) 10%, hsla(0deg, 0%, 0%, 0.682) 100%)}.sk-slider-control .sk-slider-control_items .sk-slider-control_item:hover .sk-slider-control_item__img[data-v-8c515fde]{transition:all .5s ease-in-out;transform:scale(1.15);font-size:.8rem;box-shadow:0px 0px 10px rgba(0,0,0,.5);z-index:1}.sk-slider-control .sk-slider-control_items .sk-slider-control_item:hover .sk-slider-control_item__text[data-v-8c515fde]{z-index:11}.sk-slider-control .sk-slider-control_items .sk-slider-control_item__img[data-v-8c515fde]{width:306px;height:172px;box-shadow:0px 2px 4px rgba(86,95,106,.22);border-radius:var(--g-radius-lg);object-fit:cover}.sk-slider-control .sk-slider-control_items .sk-slider-control_item__text[data-v-8c515fde]{position:absolute;bottom:0px;left:0;width:100%;display:flex;flex-direction:column;justify-content:center;align-items:flex-start;color:#fff;padding:16px 16px 20px 16px;border-radius:var(--g-radius-lg);font-family:\\\"Ubuntu\\\";font-style:normal;transition:all .3s ease-in-out;background:linear-gradient(180deg, rgba(0, 0, 0, 0) 0%, rgba(0, 0, 0, 0.4823529412) 100%)}.sk-slider-control .sk-slider-control_items .sk-slider-control_item__text .ellipsisClamp[data-v-8c515fde]{display:-webkit-box;-webkit-line-clamp:3;-webkit-box-orient:vertical;overflow:hidden;text-overflow:ellipsis}.sk-slider-control .sk-slider-control_items .sk-slider-control_item__text .clamp-lines-1[data-v-8c515fde]{-webkit-line-clamp:1}.sk-slider-control .sk-slider-control_items .sk-slider-control_item__text b[data-v-8c515fde]{flex:1;display:flex;align-content:flex-start;justify-content:flex-start;align-items:flex-end}.sk-slider-control .sk-slider-control_items .sk-slider-control_item__text p[data-v-8c515fde]{max-height:50px;overflow:hidden}}@media(min-width: 1500px){.sk-slider-control .sk-slider-control_items[data-v-8c515fde]{left:33%;justify-content:space-around}}.control-icon[data-v-8c515fde]{color:var(--g-color-white);width:24px;height:24px}.sk-slider__items[data-v-8c515fde]{z-index:0;display:flex;justify-content:flex-end;flex-direction:column;align-items:flex-start;width:100%;flex:1}@media(min-width: 1024px){.sk-slider__items[data-v-8c515fde]{flex-direction:row;justify-content:flex-start;align-items:center;flex:1;width:100%}}.sk-slider__items .sk-slider__item__content[data-v-8c515fde]{margin-top:100px;padding:0px 15px;z-index:10;position:relative;margin-bottom:30px}@media(min-width: 1024px){.sk-slider__items .sk-slider__item__content[data-v-8c515fde]{padding-left:44px}}@media(min-width: 1600px){.sk-slider__items .sk-slider__item__content[data-v-8c515fde]{transform:translateY(0px);padding-left:7.5%}}@media(max-width: 1023px){.sk-slider__items .sk-slider__item__content[data-v-8c515fde]{margin-top:130px}}.sk-slider__items .sk-slider__item__content .sk-slider__flex[data-v-8c515fde]{display:flex;justify-content:flex-start;align-items:center}.sk-slider__items .sk-slider__item__content .sk-slider__flex .sk-slider__section[data-v-8c515fde]{color:#04122a;margin-right:16px;font-family:\\\"Ubuntu\\\";font-style:normal}.sk-slider__items .sk-slider__item__content .sk-slider__flex .sk-slider__tag[data-v-8c515fde]{border:1px solid #004c97;box-sizing:border-box;border-radius:32px;padding:3px 15px;font-family:\\\"Ubuntu\\\";font-style:normal;color:#004c97}.sk-slider__btn__text[data-v-8c515fde]{font-family:\\\"Ubuntu\\\";font-style:normal;display:flex;align-items:center;text-align:center;color:var(--g-color-white);white-space:nowrap;position:relative}.sk-slider__btn svg[data-v-8c515fde]{width:24px;height:24px;color:var(--g-color-white);margin-left:10px}.sk-slider__btn .sk-slider__link[data-v-8c515fde]{position:absolute;width:100%;height:100%;top:0;left:0}.sk-slider__text[data-v-8c515fde]{font-family:\\\"Ubuntu\\\";font-style:normal;margin:0;color:#3e444a;overflow:hidden}@media(min-width: 1024px){.sk-slider__text[data-v-8c515fde]{max-width:53vw;font-size:24px;line-height:40px}}.sk-slider__title[data-v-8c515fde]{font-family:\\\"Ubuntu\\\";font-style:normal;color:#004c97;margin-top:20px;margin-bottom:30px}@media(min-width: 1024px){.sk-slider__title[data-v-8c515fde]{max-width:57vw}}.dots[data-v-8c515fde]{align-self:center;list-style:none;margin:0;padding:0;display:flex;height:8px;transform:translateY(-8px)}@media(min-width: 1024px){.dots[data-v-8c515fde]{align-self:flex-start}}.dots li[data-v-8c515fde]{margin-right:24px;cursor:pointer;height:8px;position:relative}.dots li .dots__items[data-v-8c515fde]{height:.5em;width:.5em;display:inline-block;background:var(--g-color-light-gray);border-radius:var(--g-radius-sm);cursor:pointer;transition:all 300ms ease;overflow:hidden}.dots li .dots__items span[data-v-8c515fde]{width:8px;height:18px;border-radius:var(-g-radius-full);background-color:var(--g-color-light-gray);transition:background-color .3s ease}@media(min-width: 1024px){.dots li[data-v-8c515fde]{display:none}}.dots li.active[data-v-8c515fde]{display:block}.dots li.active .dots__items[data-v-8c515fde]{height:8px}@media(max-width: 1024px){.dots li.active .dots__items[data-v-8c515fde]{width:60px !important}}.dots li.active .dots__items span[data-v-8c515fde]{display:block;height:.5em;width:0;border-radius:var(--g-radius-sm);background:var(--g-color-1)}.sk-gradient-btn[data-v-8c515fde]{background:var(--gradient);width:fit-content;height:40px;display:flex;align-items:center;margin:40px 0px;border-radius:100px}.sk-gradient-btn a[data-v-8c515fde]{display:inline-flex;padding:8px 18px;align-items:center;justify-content:center}.sk-blob[data-v-8c515fde]{height:40px;width:40px;display:flex;justify-content:center;align-items:center}.ellipsisClamp[data-v-8c515fde]{display:-webkit-box;-webkit-line-clamp:3;-webkit-box-orient:vertical;overflow:hidden;text-overflow:ellipsis}.dots li.active .dots__items[data-v-8c515fde]{background:var(--1564be01);width:var(--3a1f2549)}.dots li.active .dots__items span[data-v-8c515fde]{animation:progressBar-8c515fde var(--c73de80e) linear forwards}@keyframes progressBar-8c515fde{0%{width:var(--ec71f92c)}100%{width:100%}}\", \"\"]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n\n\n//# sourceURL=webpack://@skipsolabs/snam-slider/./src/SkDots.vue?./node_modules/css-loader/dist/cjs.js??clonedRuleSet-3.use%5B1%5D!./node_modules/vue-loader/dist/stylePostLoader.js!./node_modules/sass-loader/dist/cjs.js??clonedRuleSet-3.use%5B2%5D!./node_modules/vue-loader/dist/index.js??ruleSet%5B0%5D")},181:(module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(705);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);\n// Imports\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(function(i){return i[1]});\n___CSS_LOADER_EXPORT___.push([module.id, \"@import url(https://fonts.googleapis.com/css2?family=Ubuntu:wght@400;500;700&display=swap);\"]);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".sk-slider[data-v-40d7eaf8]{font-family:\\\"Ubuntu\\\",sans-serif;width:100%;height:100%;min-height:580px;margin:0 auto;overflow:hidden;position:relative;display:flex;flex-direction:column;align-items:flex-start;justify-content:space-between;background-color:#fff;z-index:1}@media(min-width: 1024px){.sk-slider[data-v-40d7eaf8]{flex-direction:column;height:900px}}.sk-slider .sk-slider__img[data-v-40d7eaf8]{position:absolute;top:0;right:0;height:100%;background-repeat:no-repeat;background-position:center;background-size:cover;z-index:-10;width:800px}@media(max-width: 1490px){.sk-slider .sk-slider__img[data-v-40d7eaf8]{left:47vw;right:auto}}@media(max-width: 1023px){.sk-slider .sk-slider__img[data-v-40d7eaf8]{height:30vw;min-height:200px;width:50vw;min-width:380px;left:auto;right:-100px;border-bottom:2px solid #fff}}.sk-slider .sk-slider__img[data-v-40d7eaf8]:before{content:\\\"\\\";position:absolute;height:100%;width:100vw;right:0;bottom:0;background-image:url(\\\"https://skipsolabs-snam.s3.eu-west-1.amazonaws.com/froala/uploadedContent/uploads/Mobile-Mask-no-blur-min.png\\\");background-repeat:no-repeat;background-position:bottom right;background-size:auto 100%;z-index:-5}@media(min-width: 1024px){.sk-slider .sk-slider__img[data-v-40d7eaf8]:before{background-image:url(\\\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' width='1366' height='886.001' viewBox='0 0 1366 886.001'%3E%3Cdefs%3E%3CradialGradient id='radial-gradient' cx='0.762' cy='0.5' r='0.334' gradientTransform='translate(0 -0.253) scale(1 1.505)' gradientUnits='objectBoundingBox'%3E%3Cstop offset='0' stop-color='%23fff' stop-opacity='0.6'/%3E%3Cstop offset='1' stop-color='%23fff'/%3E%3C/radialGradient%3E%3C/defs%3E%3Cg id='Mask_no_blur' data-name='Mask no blur' transform='translate(0 -14)'%3E%3Cpath id='Subtraction_1' data-name='Subtraction 1' d='M328,1153H-1038V267H328v31.525a434.832,434.832,0,0,0-181.589-4.331,167.63,167.63,0,0,0-29.336,8.4A170.658,170.658,0,0,0,90.8,315.554a196.555,196.555,0,0,0-23.672,16.9,250.354,250.354,0,0,0-21.521,20.217c-6.6,6.946-13.087,14.439-19.823,22.906C19.774,383.135,13.7,391.3,7.2,400.55c-12.073,17.2-23.853,35.715-35.244,53.625l-.013.021c-9.772,15.364-19.878,31.251-30.277,46.494-11.686,17.129-22.444,31.5-32.887,43.949-6.238,7.434-12.983,14.85-20.622,22.673-6.8,6.964-14.154,14.09-22.485,21.787-15.466,14.289-31.961,28.355-47.913,41.958l-.008.007c-17.829,15.2-36.265,30.926-52.989,46.749-9,8.514-16.822,16.4-23.917,24.1a312.886,312.886,0,0,0-20.942,25.079,220.356,220.356,0,0,0-17.028,26.425A167.886,167.886,0,0,0-309.3,781.56a145.82,145.82,0,0,0-6.381,30.225,150.067,150.067,0,0,0,.353,32.679,196.65,196.65,0,0,0,4.544,24.724,195.033,195.033,0,0,0,7.44,23.274,203.147,203.147,0,0,0,10.1,21.893A220.934,220.934,0,0,0-280.7,934.934c4.466,6.514,9.423,13.019,14.733,19.333,5.139,6.111,10.758,12.219,16.7,18.155a364.321,364.321,0,0,0,38.362,33.045c24.967,18.786,54.428,36.754,90.067,54.932,32.9,16.782,66.711,31.491,95.444,43.665,17.106,7.248,34.223,13.759,50.875,19.35,17.517,5.882,34.987,10.9,51.925,14.927a499.733,499.733,0,0,0,52.481,9.611,420.388,420.388,0,0,0,52.542,3.4c12.368,0,24.683-.6,36.6-1.8a339.613,339.613,0,0,0,36.219-5.594,321.188,321.188,0,0,0,35.665-9.7,314.7,314.7,0,0,0,34.941-14.11c.736-.35,1.458-.7,2.149-1.032V1153Z' transform='translate(1038 -253)' fill='url(%23radial-gradient)'/%3E%3C/g%3E%3C/svg%3E%0A\\\")}}@media(max-width: 1023px){.sk-slider .sk-slider__img[data-v-40d7eaf8]:before{right:100px;bottom:-1px}}.sk-slider-control[data-v-40d7eaf8]{position:sticky;bottom:25px;width:80%;min-width:285px;margin:0 auto;height:56px;padding:7px 24px;background:linear-gradient(90deg, rgba(147, 207, 247, 0.2) 0%, rgba(217, 241, 255, 0.2) 100%);backdrop-filter:blur(10px);border-radius:var(--g-radius-lg);display:flex;align-items:center;justify-content:space-between}@media(min-width: 1024px){.sk-slider-control[data-v-40d7eaf8]{width:1062px;margin:0 auto;height:170px;flex-direction:column-reverse;justify-content:center;align-items:flex-start;bottom:64px}}.sk-slider-control .sk-slider__timeline[data-v-40d7eaf8]{margin:24px 0}.sk-slider-control .sk-slider-control__text[data-v-40d7eaf8]{display:none}@media(min-width: 1024px){.sk-slider-control .sk-slider-control__text[data-v-40d7eaf8]{display:block;color:#004c97;max-width:265px;margin:0}}.sk-slider-control .sk-slider-btns[data-v-40d7eaf8]{max-width:265px;display:inline-flex;justify-content:space-between;align-items:center;width:100%}.sk-slider-control .sk-slider-btns .blob-autoplay[data-v-40d7eaf8],.sk-slider-control .sk-slider-btns .blob-prev[data-v-40d7eaf8],.sk-slider-control .sk-slider-btns .blob-next[data-v-40d7eaf8]{width:40px;height:40px;background-color:var(--g-color-1);border-radius:var(--radius-blob-3)}.sk-slider-control .sk-slider-btns .blob-prev[data-v-40d7eaf8],.sk-slider-control .sk-slider-btns .blob-next[data-v-40d7eaf8]{display:none}@media(min-width: 1024px){.sk-slider-control .sk-slider-btns .blob-prev[data-v-40d7eaf8],.sk-slider-control .sk-slider-btns .blob-next[data-v-40d7eaf8]{display:inline-flex;justify-content:center;align-items:center;background:var(--gradient)}}.sk-slider-control .sk-slider-control_items[data-v-40d7eaf8]{display:none}@media(min-width: 1024px){.sk-slider-control .sk-slider-control_items[data-v-40d7eaf8]{display:flex;justify-content:space-between;position:absolute;top:32px;left:354px;width:650px;height:172px}.sk-slider-control .sk-slider-control_items .sk-slider-control_item[data-v-40d7eaf8]{position:relative;cursor:pointer;overflow:hidden;border-radius:var(--g-radius-lg);z-index:20;overflow:hidden}.sk-slider-control .sk-slider-control_items .sk-slider-control_item[data-v-40d7eaf8]::before{content:\\\"\\\";position:absolute;top:0;left:0;width:100%;height:100%;background:linear-gradient(180deg, hsla(0deg, 0%, 0%, 0.282) 10%, hsla(0deg, 0%, 0%, 0.182) 100%);border-radius:var(--g-radius-lg);opacity:1;transition:all .3s ease-in-out}.sk-slider-control .sk-slider-control_items .sk-slider-control_item[data-v-40d7eaf8]:hover::before{z-index:10;background:linear-gradient(180deg, hsla(0deg, 0%, 0%, 0.482) 10%, hsla(0deg, 0%, 0%, 0.682) 100%)}.sk-slider-control .sk-slider-control_items .sk-slider-control_item:hover .sk-slider-control_item__img[data-v-40d7eaf8]{transition:all .5s ease-in-out;transform:scale(1.15);font-size:.8rem;box-shadow:0px 0px 10px rgba(0,0,0,.5);z-index:1}.sk-slider-control .sk-slider-control_items .sk-slider-control_item:hover .sk-slider-control_item__text[data-v-40d7eaf8]{z-index:11}.sk-slider-control .sk-slider-control_items .sk-slider-control_item__img[data-v-40d7eaf8]{width:306px;height:172px;box-shadow:0px 2px 4px rgba(86,95,106,.22);border-radius:var(--g-radius-lg);object-fit:cover}.sk-slider-control .sk-slider-control_items .sk-slider-control_item__text[data-v-40d7eaf8]{position:absolute;bottom:0px;left:0;width:100%;display:flex;flex-direction:column;justify-content:center;align-items:flex-start;color:#fff;padding:16px 16px 20px 16px;border-radius:var(--g-radius-lg);font-family:\\\"Ubuntu\\\";font-style:normal;transition:all .3s ease-in-out;background:linear-gradient(180deg, rgba(0, 0, 0, 0) 0%, rgba(0, 0, 0, 0.4823529412) 100%)}.sk-slider-control .sk-slider-control_items .sk-slider-control_item__text .ellipsisClamp[data-v-40d7eaf8]{display:-webkit-box;-webkit-line-clamp:3;-webkit-box-orient:vertical;overflow:hidden;text-overflow:ellipsis}.sk-slider-control .sk-slider-control_items .sk-slider-control_item__text .clamp-lines-1[data-v-40d7eaf8]{-webkit-line-clamp:1}.sk-slider-control .sk-slider-control_items .sk-slider-control_item__text b[data-v-40d7eaf8]{flex:1;display:flex;align-content:flex-start;justify-content:flex-start;align-items:flex-end}.sk-slider-control .sk-slider-control_items .sk-slider-control_item__text p[data-v-40d7eaf8]{max-height:50px;overflow:hidden}}@media(min-width: 1500px){.sk-slider-control .sk-slider-control_items[data-v-40d7eaf8]{left:33%;justify-content:space-around}}.control-icon[data-v-40d7eaf8]{color:var(--g-color-white);width:24px;height:24px}.sk-slider__items[data-v-40d7eaf8]{z-index:0;display:flex;justify-content:flex-end;flex-direction:column;align-items:flex-start;width:100%;flex:1}@media(min-width: 1024px){.sk-slider__items[data-v-40d7eaf8]{flex-direction:row;justify-content:flex-start;align-items:center;flex:1;width:100%}}.sk-slider__items .sk-slider__item__content[data-v-40d7eaf8]{margin-top:100px;padding:0px 15px;z-index:10;position:relative;margin-bottom:30px}@media(min-width: 1024px){.sk-slider__items .sk-slider__item__content[data-v-40d7eaf8]{padding-left:44px}}@media(min-width: 1600px){.sk-slider__items .sk-slider__item__content[data-v-40d7eaf8]{transform:translateY(0px);padding-left:7.5%}}@media(max-width: 1023px){.sk-slider__items .sk-slider__item__content[data-v-40d7eaf8]{margin-top:130px}}.sk-slider__items .sk-slider__item__content .sk-slider__flex[data-v-40d7eaf8]{display:flex;justify-content:flex-start;align-items:center}.sk-slider__items .sk-slider__item__content .sk-slider__flex .sk-slider__section[data-v-40d7eaf8]{color:#04122a;margin-right:16px;font-family:\\\"Ubuntu\\\";font-style:normal}.sk-slider__items .sk-slider__item__content .sk-slider__flex .sk-slider__tag[data-v-40d7eaf8]{border:1px solid #004c97;box-sizing:border-box;border-radius:32px;padding:3px 15px;font-family:\\\"Ubuntu\\\";font-style:normal;color:#004c97}.sk-slider__btn__text[data-v-40d7eaf8]{font-family:\\\"Ubuntu\\\";font-style:normal;display:flex;align-items:center;text-align:center;color:var(--g-color-white);white-space:nowrap;position:relative}.sk-slider__btn svg[data-v-40d7eaf8]{width:24px;height:24px;color:var(--g-color-white);margin-left:10px}.sk-slider__btn .sk-slider__link[data-v-40d7eaf8]{position:absolute;width:100%;height:100%;top:0;left:0}.sk-slider__text[data-v-40d7eaf8]{font-family:\\\"Ubuntu\\\";font-style:normal;margin:0;color:#3e444a;overflow:hidden}@media(min-width: 1024px){.sk-slider__text[data-v-40d7eaf8]{max-width:53vw;font-size:24px;line-height:40px}}.sk-slider__title[data-v-40d7eaf8]{font-family:\\\"Ubuntu\\\";font-style:normal;color:#004c97;margin-top:20px;margin-bottom:30px}@media(min-width: 1024px){.sk-slider__title[data-v-40d7eaf8]{max-width:57vw}}.dots[data-v-40d7eaf8]{align-self:center;list-style:none;margin:0;padding:0;display:flex;height:8px;transform:translateY(-8px)}@media(min-width: 1024px){.dots[data-v-40d7eaf8]{align-self:flex-start}}.dots li[data-v-40d7eaf8]{margin-right:24px;cursor:pointer;height:8px;position:relative}.dots li .dots__items[data-v-40d7eaf8]{height:.5em;width:.5em;display:inline-block;background:var(--g-color-light-gray);border-radius:var(--g-radius-sm);cursor:pointer;transition:all 300ms ease;overflow:hidden}.dots li .dots__items span[data-v-40d7eaf8]{width:8px;height:18px;border-radius:var(-g-radius-full);background-color:var(--g-color-light-gray);transition:background-color .3s ease}@media(min-width: 1024px){.dots li[data-v-40d7eaf8]{display:none}}.dots li.active[data-v-40d7eaf8]{display:block}.dots li.active .dots__items[data-v-40d7eaf8]{height:8px}@media(max-width: 1024px){.dots li.active .dots__items[data-v-40d7eaf8]{width:60px !important}}.dots li.active .dots__items span[data-v-40d7eaf8]{display:block;height:.5em;width:0;border-radius:var(--g-radius-sm);background:var(--g-color-1)}.sk-gradient-btn[data-v-40d7eaf8]{background:var(--gradient);width:fit-content;height:40px;display:flex;align-items:center;margin:40px 0px;border-radius:100px}.sk-gradient-btn a[data-v-40d7eaf8]{display:inline-flex;padding:8px 18px;align-items:center;justify-content:center}.sk-blob[data-v-40d7eaf8]{height:40px;width:40px;display:flex;justify-content:center;align-items:center}.ellipsisClamp[data-v-40d7eaf8]{display:-webkit-box;-webkit-line-clamp:3;-webkit-box-orient:vertical;overflow:hidden;text-overflow:ellipsis}.list-enter-active[data-v-40d7eaf8],.list-leave-active[data-v-40d7eaf8]{transition:all .8s cubic-bezier(0.175, 0.885, 0.32, 1.275);transition-delay:.5s}.list-leave-to[data-v-40d7eaf8]{display:none}.list-enter-from[data-v-40d7eaf8]{position:absolute;opacity:0;transform:translateX(-2%)}\", \"\"]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n\n\n//# sourceURL=webpack://@skipsolabs/snam-slider/./src/SkSlider.vue?./node_modules/css-loader/dist/cjs.js??clonedRuleSet-3.use%5B1%5D!./node_modules/vue-loader/dist/stylePostLoader.js!./node_modules/sass-loader/dist/cjs.js??clonedRuleSet-3.use%5B2%5D!./node_modules/vue-loader/dist/index.js??ruleSet%5B0%5D")},134:(module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(705);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);\n// Imports\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(function(i){return i[1]});\n___CSS_LOADER_EXPORT___.push([module.id, \"@import url(https://fonts.googleapis.com/css2?family=Ubuntu:wght@400;500;700&display=swap);\"]);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".sk-slider[data-v-ac6f3a2c]{font-family:\\\"Ubuntu\\\",sans-serif;width:100%;height:100%;min-height:580px;margin:0 auto;overflow:hidden;position:relative;display:flex;flex-direction:column;align-items:flex-start;justify-content:space-between;background-color:#fff;z-index:1}@media(min-width: 1024px){.sk-slider[data-v-ac6f3a2c]{flex-direction:column;height:900px}}.sk-slider .sk-slider__img[data-v-ac6f3a2c]{position:absolute;top:0;right:0;height:100%;background-repeat:no-repeat;background-position:center;background-size:cover;z-index:-10;width:800px}@media(max-width: 1490px){.sk-slider .sk-slider__img[data-v-ac6f3a2c]{left:47vw;right:auto}}@media(max-width: 1023px){.sk-slider .sk-slider__img[data-v-ac6f3a2c]{height:30vw;min-height:200px;width:50vw;min-width:380px;left:auto;right:-100px;border-bottom:2px solid #fff}}.sk-slider .sk-slider__img[data-v-ac6f3a2c]:before{content:\\\"\\\";position:absolute;height:100%;width:100vw;right:0;bottom:0;background-image:url(\\\"https://skipsolabs-snam.s3.eu-west-1.amazonaws.com/froala/uploadedContent/uploads/Mobile-Mask-no-blur-min.png\\\");background-repeat:no-repeat;background-position:bottom right;background-size:auto 100%;z-index:-5}@media(min-width: 1024px){.sk-slider .sk-slider__img[data-v-ac6f3a2c]:before{background-image:url(\\\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' width='1366' height='886.001' viewBox='0 0 1366 886.001'%3E%3Cdefs%3E%3CradialGradient id='radial-gradient' cx='0.762' cy='0.5' r='0.334' gradientTransform='translate(0 -0.253) scale(1 1.505)' gradientUnits='objectBoundingBox'%3E%3Cstop offset='0' stop-color='%23fff' stop-opacity='0.6'/%3E%3Cstop offset='1' stop-color='%23fff'/%3E%3C/radialGradient%3E%3C/defs%3E%3Cg id='Mask_no_blur' data-name='Mask no blur' transform='translate(0 -14)'%3E%3Cpath id='Subtraction_1' data-name='Subtraction 1' d='M328,1153H-1038V267H328v31.525a434.832,434.832,0,0,0-181.589-4.331,167.63,167.63,0,0,0-29.336,8.4A170.658,170.658,0,0,0,90.8,315.554a196.555,196.555,0,0,0-23.672,16.9,250.354,250.354,0,0,0-21.521,20.217c-6.6,6.946-13.087,14.439-19.823,22.906C19.774,383.135,13.7,391.3,7.2,400.55c-12.073,17.2-23.853,35.715-35.244,53.625l-.013.021c-9.772,15.364-19.878,31.251-30.277,46.494-11.686,17.129-22.444,31.5-32.887,43.949-6.238,7.434-12.983,14.85-20.622,22.673-6.8,6.964-14.154,14.09-22.485,21.787-15.466,14.289-31.961,28.355-47.913,41.958l-.008.007c-17.829,15.2-36.265,30.926-52.989,46.749-9,8.514-16.822,16.4-23.917,24.1a312.886,312.886,0,0,0-20.942,25.079,220.356,220.356,0,0,0-17.028,26.425A167.886,167.886,0,0,0-309.3,781.56a145.82,145.82,0,0,0-6.381,30.225,150.067,150.067,0,0,0,.353,32.679,196.65,196.65,0,0,0,4.544,24.724,195.033,195.033,0,0,0,7.44,23.274,203.147,203.147,0,0,0,10.1,21.893A220.934,220.934,0,0,0-280.7,934.934c4.466,6.514,9.423,13.019,14.733,19.333,5.139,6.111,10.758,12.219,16.7,18.155a364.321,364.321,0,0,0,38.362,33.045c24.967,18.786,54.428,36.754,90.067,54.932,32.9,16.782,66.711,31.491,95.444,43.665,17.106,7.248,34.223,13.759,50.875,19.35,17.517,5.882,34.987,10.9,51.925,14.927a499.733,499.733,0,0,0,52.481,9.611,420.388,420.388,0,0,0,52.542,3.4c12.368,0,24.683-.6,36.6-1.8a339.613,339.613,0,0,0,36.219-5.594,321.188,321.188,0,0,0,35.665-9.7,314.7,314.7,0,0,0,34.941-14.11c.736-.35,1.458-.7,2.149-1.032V1153Z' transform='translate(1038 -253)' fill='url(%23radial-gradient)'/%3E%3C/g%3E%3C/svg%3E%0A\\\")}}@media(max-width: 1023px){.sk-slider .sk-slider__img[data-v-ac6f3a2c]:before{right:100px;bottom:-1px}}.sk-slider-control[data-v-ac6f3a2c]{position:sticky;bottom:25px;width:80%;min-width:285px;margin:0 auto;height:56px;padding:7px 24px;background:linear-gradient(90deg, rgba(147, 207, 247, 0.2) 0%, rgba(217, 241, 255, 0.2) 100%);backdrop-filter:blur(10px);border-radius:var(--g-radius-lg);display:flex;align-items:center;justify-content:space-between}@media(min-width: 1024px){.sk-slider-control[data-v-ac6f3a2c]{width:1062px;margin:0 auto;height:170px;flex-direction:column-reverse;justify-content:center;align-items:flex-start;bottom:64px}}.sk-slider-control .sk-slider__timeline[data-v-ac6f3a2c]{margin:24px 0}.sk-slider-control .sk-slider-control__text[data-v-ac6f3a2c]{display:none}@media(min-width: 1024px){.sk-slider-control .sk-slider-control__text[data-v-ac6f3a2c]{display:block;color:#004c97;max-width:265px;margin:0}}.sk-slider-control .sk-slider-btns[data-v-ac6f3a2c]{max-width:265px;display:inline-flex;justify-content:space-between;align-items:center;width:100%}.sk-slider-control .sk-slider-btns .blob-autoplay[data-v-ac6f3a2c],.sk-slider-control .sk-slider-btns .blob-prev[data-v-ac6f3a2c],.sk-slider-control .sk-slider-btns .blob-next[data-v-ac6f3a2c]{width:40px;height:40px;background-color:var(--g-color-1);border-radius:var(--radius-blob-3)}.sk-slider-control .sk-slider-btns .blob-prev[data-v-ac6f3a2c],.sk-slider-control .sk-slider-btns .blob-next[data-v-ac6f3a2c]{display:none}@media(min-width: 1024px){.sk-slider-control .sk-slider-btns .blob-prev[data-v-ac6f3a2c],.sk-slider-control .sk-slider-btns .blob-next[data-v-ac6f3a2c]{display:inline-flex;justify-content:center;align-items:center;background:var(--gradient)}}.sk-slider-control .sk-slider-control_items[data-v-ac6f3a2c]{display:none}@media(min-width: 1024px){.sk-slider-control .sk-slider-control_items[data-v-ac6f3a2c]{display:flex;justify-content:space-between;position:absolute;top:32px;left:354px;width:650px;height:172px}.sk-slider-control .sk-slider-control_items .sk-slider-control_item[data-v-ac6f3a2c]{position:relative;cursor:pointer;overflow:hidden;border-radius:var(--g-radius-lg);z-index:20;overflow:hidden}.sk-slider-control .sk-slider-control_items .sk-slider-control_item[data-v-ac6f3a2c]::before{content:\\\"\\\";position:absolute;top:0;left:0;width:100%;height:100%;background:linear-gradient(180deg, hsla(0deg, 0%, 0%, 0.282) 10%, hsla(0deg, 0%, 0%, 0.182) 100%);border-radius:var(--g-radius-lg);opacity:1;transition:all .3s ease-in-out}.sk-slider-control .sk-slider-control_items .sk-slider-control_item[data-v-ac6f3a2c]:hover::before{z-index:10;background:linear-gradient(180deg, hsla(0deg, 0%, 0%, 0.482) 10%, hsla(0deg, 0%, 0%, 0.682) 100%)}.sk-slider-control .sk-slider-control_items .sk-slider-control_item:hover .sk-slider-control_item__img[data-v-ac6f3a2c]{transition:all .5s ease-in-out;transform:scale(1.15);font-size:.8rem;box-shadow:0px 0px 10px rgba(0,0,0,.5);z-index:1}.sk-slider-control .sk-slider-control_items .sk-slider-control_item:hover .sk-slider-control_item__text[data-v-ac6f3a2c]{z-index:11}.sk-slider-control .sk-slider-control_items .sk-slider-control_item__img[data-v-ac6f3a2c]{width:306px;height:172px;box-shadow:0px 2px 4px rgba(86,95,106,.22);border-radius:var(--g-radius-lg);object-fit:cover}.sk-slider-control .sk-slider-control_items .sk-slider-control_item__text[data-v-ac6f3a2c]{position:absolute;bottom:0px;left:0;width:100%;display:flex;flex-direction:column;justify-content:center;align-items:flex-start;color:#fff;padding:16px 16px 20px 16px;border-radius:var(--g-radius-lg);font-family:\\\"Ubuntu\\\";font-style:normal;transition:all .3s ease-in-out;background:linear-gradient(180deg, rgba(0, 0, 0, 0) 0%, rgba(0, 0, 0, 0.4823529412) 100%)}.sk-slider-control .sk-slider-control_items .sk-slider-control_item__text .ellipsisClamp[data-v-ac6f3a2c]{display:-webkit-box;-webkit-line-clamp:3;-webkit-box-orient:vertical;overflow:hidden;text-overflow:ellipsis}.sk-slider-control .sk-slider-control_items .sk-slider-control_item__text .clamp-lines-1[data-v-ac6f3a2c]{-webkit-line-clamp:1}.sk-slider-control .sk-slider-control_items .sk-slider-control_item__text b[data-v-ac6f3a2c]{flex:1;display:flex;align-content:flex-start;justify-content:flex-start;align-items:flex-end}.sk-slider-control .sk-slider-control_items .sk-slider-control_item__text p[data-v-ac6f3a2c]{max-height:50px;overflow:hidden}}@media(min-width: 1500px){.sk-slider-control .sk-slider-control_items[data-v-ac6f3a2c]{left:33%;justify-content:space-around}}.control-icon[data-v-ac6f3a2c]{color:var(--g-color-white);width:24px;height:24px}.sk-slider__items[data-v-ac6f3a2c]{z-index:0;display:flex;justify-content:flex-end;flex-direction:column;align-items:flex-start;width:100%;flex:1}@media(min-width: 1024px){.sk-slider__items[data-v-ac6f3a2c]{flex-direction:row;justify-content:flex-start;align-items:center;flex:1;width:100%}}.sk-slider__items .sk-slider__item__content[data-v-ac6f3a2c]{margin-top:100px;padding:0px 15px;z-index:10;position:relative;margin-bottom:30px}@media(min-width: 1024px){.sk-slider__items .sk-slider__item__content[data-v-ac6f3a2c]{padding-left:44px}}@media(min-width: 1600px){.sk-slider__items .sk-slider__item__content[data-v-ac6f3a2c]{transform:translateY(0px);padding-left:7.5%}}@media(max-width: 1023px){.sk-slider__items .sk-slider__item__content[data-v-ac6f3a2c]{margin-top:130px}}.sk-slider__items .sk-slider__item__content .sk-slider__flex[data-v-ac6f3a2c]{display:flex;justify-content:flex-start;align-items:center}.sk-slider__items .sk-slider__item__content .sk-slider__flex .sk-slider__section[data-v-ac6f3a2c]{color:#04122a;margin-right:16px;font-family:\\\"Ubuntu\\\";font-style:normal}.sk-slider__items .sk-slider__item__content .sk-slider__flex .sk-slider__tag[data-v-ac6f3a2c]{border:1px solid #004c97;box-sizing:border-box;border-radius:32px;padding:3px 15px;font-family:\\\"Ubuntu\\\";font-style:normal;color:#004c97}.sk-slider__btn__text[data-v-ac6f3a2c]{font-family:\\\"Ubuntu\\\";font-style:normal;display:flex;align-items:center;text-align:center;color:var(--g-color-white);white-space:nowrap;position:relative}.sk-slider__btn svg[data-v-ac6f3a2c]{width:24px;height:24px;color:var(--g-color-white);margin-left:10px}.sk-slider__btn .sk-slider__link[data-v-ac6f3a2c]{position:absolute;width:100%;height:100%;top:0;left:0}.sk-slider__text[data-v-ac6f3a2c]{font-family:\\\"Ubuntu\\\";font-style:normal;margin:0;color:#3e444a;overflow:hidden}@media(min-width: 1024px){.sk-slider__text[data-v-ac6f3a2c]{max-width:53vw;font-size:24px;line-height:40px}}.sk-slider__title[data-v-ac6f3a2c]{font-family:\\\"Ubuntu\\\";font-style:normal;color:#004c97;margin-top:20px;margin-bottom:30px}@media(min-width: 1024px){.sk-slider__title[data-v-ac6f3a2c]{max-width:57vw}}.dots[data-v-ac6f3a2c]{align-self:center;list-style:none;margin:0;padding:0;display:flex;height:8px;transform:translateY(-8px)}@media(min-width: 1024px){.dots[data-v-ac6f3a2c]{align-self:flex-start}}.dots li[data-v-ac6f3a2c]{margin-right:24px;cursor:pointer;height:8px;position:relative}.dots li .dots__items[data-v-ac6f3a2c]{height:.5em;width:.5em;display:inline-block;background:var(--g-color-light-gray);border-radius:var(--g-radius-sm);cursor:pointer;transition:all 300ms ease;overflow:hidden}.dots li .dots__items span[data-v-ac6f3a2c]{width:8px;height:18px;border-radius:var(-g-radius-full);background-color:var(--g-color-light-gray);transition:background-color .3s ease}@media(min-width: 1024px){.dots li[data-v-ac6f3a2c]{display:none}}.dots li.active[data-v-ac6f3a2c]{display:block}.dots li.active .dots__items[data-v-ac6f3a2c]{height:8px}@media(max-width: 1024px){.dots li.active .dots__items[data-v-ac6f3a2c]{width:60px !important}}.dots li.active .dots__items span[data-v-ac6f3a2c]{display:block;height:.5em;width:0;border-radius:var(--g-radius-sm);background:var(--g-color-1)}.sk-gradient-btn[data-v-ac6f3a2c]{background:var(--gradient);width:fit-content;height:40px;display:flex;align-items:center;margin:40px 0px;border-radius:100px}.sk-gradient-btn a[data-v-ac6f3a2c]{display:inline-flex;padding:8px 18px;align-items:center;justify-content:center}.sk-blob[data-v-ac6f3a2c]{height:40px;width:40px;display:flex;justify-content:center;align-items:center}.ellipsisClamp[data-v-ac6f3a2c]{display:-webkit-box;-webkit-line-clamp:3;-webkit-box-orient:vertical;overflow:hidden;text-overflow:ellipsis}.list-enter-active[data-v-ac6f3a2c],.list-leave-active[data-v-ac6f3a2c]{transition:all .6s ease-in;transition-delay:.5s}.list-leave-to[data-v-ac6f3a2c]{display:none;opacity:0}.list-enter-from[data-v-ac6f3a2c]{position:absolute;opacity:0;transform:translateX(-30px);color:#fff}\", \"\"]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n\n\n//# sourceURL=webpack://@skipsolabs/snam-slider/./src/SkSliderItem.vue?./node_modules/css-loader/dist/cjs.js??clonedRuleSet-3.use%5B1%5D!./node_modules/vue-loader/dist/stylePostLoader.js!./node_modules/sass-loader/dist/cjs.js??clonedRuleSet-3.use%5B2%5D!./node_modules/vue-loader/dist/index.js??ruleSet%5B0%5D")},894:(module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(705);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);\n// Imports\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(function(i){return i[1]});\n___CSS_LOADER_EXPORT___.push([module.id, \"@import url(https://fonts.googleapis.com/css2?family=Ubuntu:wght@400;500;700&display=swap);\"]);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".sk-slider[data-v-e00fa402]{font-family:\\\"Ubuntu\\\",sans-serif;width:100%;height:100%;min-height:580px;margin:0 auto;overflow:hidden;position:relative;display:flex;flex-direction:column;align-items:flex-start;justify-content:space-between;background-color:#fff;z-index:1}@media(min-width: 1024px){.sk-slider[data-v-e00fa402]{flex-direction:column;height:900px}}.sk-slider .sk-slider__img[data-v-e00fa402]{position:absolute;top:0;right:0;height:100%;background-repeat:no-repeat;background-position:center;background-size:cover;z-index:-10;width:800px}@media(max-width: 1490px){.sk-slider .sk-slider__img[data-v-e00fa402]{left:47vw;right:auto}}@media(max-width: 1023px){.sk-slider .sk-slider__img[data-v-e00fa402]{height:30vw;min-height:200px;width:50vw;min-width:380px;left:auto;right:-100px;border-bottom:2px solid #fff}}.sk-slider .sk-slider__img[data-v-e00fa402]:before{content:\\\"\\\";position:absolute;height:100%;width:100vw;right:0;bottom:0;background-image:url(\\\"https://skipsolabs-snam.s3.eu-west-1.amazonaws.com/froala/uploadedContent/uploads/Mobile-Mask-no-blur-min.png\\\");background-repeat:no-repeat;background-position:bottom right;background-size:auto 100%;z-index:-5}@media(min-width: 1024px){.sk-slider .sk-slider__img[data-v-e00fa402]:before{background-image:url(\\\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' width='1366' height='886.001' viewBox='0 0 1366 886.001'%3E%3Cdefs%3E%3CradialGradient id='radial-gradient' cx='0.762' cy='0.5' r='0.334' gradientTransform='translate(0 -0.253) scale(1 1.505)' gradientUnits='objectBoundingBox'%3E%3Cstop offset='0' stop-color='%23fff' stop-opacity='0.6'/%3E%3Cstop offset='1' stop-color='%23fff'/%3E%3C/radialGradient%3E%3C/defs%3E%3Cg id='Mask_no_blur' data-name='Mask no blur' transform='translate(0 -14)'%3E%3Cpath id='Subtraction_1' data-name='Subtraction 1' d='M328,1153H-1038V267H328v31.525a434.832,434.832,0,0,0-181.589-4.331,167.63,167.63,0,0,0-29.336,8.4A170.658,170.658,0,0,0,90.8,315.554a196.555,196.555,0,0,0-23.672,16.9,250.354,250.354,0,0,0-21.521,20.217c-6.6,6.946-13.087,14.439-19.823,22.906C19.774,383.135,13.7,391.3,7.2,400.55c-12.073,17.2-23.853,35.715-35.244,53.625l-.013.021c-9.772,15.364-19.878,31.251-30.277,46.494-11.686,17.129-22.444,31.5-32.887,43.949-6.238,7.434-12.983,14.85-20.622,22.673-6.8,6.964-14.154,14.09-22.485,21.787-15.466,14.289-31.961,28.355-47.913,41.958l-.008.007c-17.829,15.2-36.265,30.926-52.989,46.749-9,8.514-16.822,16.4-23.917,24.1a312.886,312.886,0,0,0-20.942,25.079,220.356,220.356,0,0,0-17.028,26.425A167.886,167.886,0,0,0-309.3,781.56a145.82,145.82,0,0,0-6.381,30.225,150.067,150.067,0,0,0,.353,32.679,196.65,196.65,0,0,0,4.544,24.724,195.033,195.033,0,0,0,7.44,23.274,203.147,203.147,0,0,0,10.1,21.893A220.934,220.934,0,0,0-280.7,934.934c4.466,6.514,9.423,13.019,14.733,19.333,5.139,6.111,10.758,12.219,16.7,18.155a364.321,364.321,0,0,0,38.362,33.045c24.967,18.786,54.428,36.754,90.067,54.932,32.9,16.782,66.711,31.491,95.444,43.665,17.106,7.248,34.223,13.759,50.875,19.35,17.517,5.882,34.987,10.9,51.925,14.927a499.733,499.733,0,0,0,52.481,9.611,420.388,420.388,0,0,0,52.542,3.4c12.368,0,24.683-.6,36.6-1.8a339.613,339.613,0,0,0,36.219-5.594,321.188,321.188,0,0,0,35.665-9.7,314.7,314.7,0,0,0,34.941-14.11c.736-.35,1.458-.7,2.149-1.032V1153Z' transform='translate(1038 -253)' fill='url(%23radial-gradient)'/%3E%3C/g%3E%3C/svg%3E%0A\\\")}}@media(max-width: 1023px){.sk-slider .sk-slider__img[data-v-e00fa402]:before{right:100px;bottom:-1px}}.sk-slider-control[data-v-e00fa402]{position:sticky;bottom:25px;width:80%;min-width:285px;margin:0 auto;height:56px;padding:7px 24px;background:linear-gradient(90deg, rgba(147, 207, 247, 0.2) 0%, rgba(217, 241, 255, 0.2) 100%);backdrop-filter:blur(10px);border-radius:var(--g-radius-lg);display:flex;align-items:center;justify-content:space-between}@media(min-width: 1024px){.sk-slider-control[data-v-e00fa402]{width:1062px;margin:0 auto;height:170px;flex-direction:column-reverse;justify-content:center;align-items:flex-start;bottom:64px}}.sk-slider-control .sk-slider__timeline[data-v-e00fa402]{margin:24px 0}.sk-slider-control .sk-slider-control__text[data-v-e00fa402]{display:none}@media(min-width: 1024px){.sk-slider-control .sk-slider-control__text[data-v-e00fa402]{display:block;color:#004c97;max-width:265px;margin:0}}.sk-slider-control .sk-slider-btns[data-v-e00fa402]{max-width:265px;display:inline-flex;justify-content:space-between;align-items:center;width:100%}.sk-slider-control .sk-slider-btns .blob-autoplay[data-v-e00fa402],.sk-slider-control .sk-slider-btns .blob-prev[data-v-e00fa402],.sk-slider-control .sk-slider-btns .blob-next[data-v-e00fa402]{width:40px;height:40px;background-color:var(--g-color-1);border-radius:var(--radius-blob-3)}.sk-slider-control .sk-slider-btns .blob-prev[data-v-e00fa402],.sk-slider-control .sk-slider-btns .blob-next[data-v-e00fa402]{display:none}@media(min-width: 1024px){.sk-slider-control .sk-slider-btns .blob-prev[data-v-e00fa402],.sk-slider-control .sk-slider-btns .blob-next[data-v-e00fa402]{display:inline-flex;justify-content:center;align-items:center;background:var(--gradient)}}.sk-slider-control .sk-slider-control_items[data-v-e00fa402]{display:none}@media(min-width: 1024px){.sk-slider-control .sk-slider-control_items[data-v-e00fa402]{display:flex;justify-content:space-between;position:absolute;top:32px;left:354px;width:650px;height:172px}.sk-slider-control .sk-slider-control_items .sk-slider-control_item[data-v-e00fa402]{position:relative;cursor:pointer;overflow:hidden;border-radius:var(--g-radius-lg);z-index:20;overflow:hidden}.sk-slider-control .sk-slider-control_items .sk-slider-control_item[data-v-e00fa402]::before{content:\\\"\\\";position:absolute;top:0;left:0;width:100%;height:100%;background:linear-gradient(180deg, hsla(0deg, 0%, 0%, 0.282) 10%, hsla(0deg, 0%, 0%, 0.182) 100%);border-radius:var(--g-radius-lg);opacity:1;transition:all .3s ease-in-out}.sk-slider-control .sk-slider-control_items .sk-slider-control_item[data-v-e00fa402]:hover::before{z-index:10;background:linear-gradient(180deg, hsla(0deg, 0%, 0%, 0.482) 10%, hsla(0deg, 0%, 0%, 0.682) 100%)}.sk-slider-control .sk-slider-control_items .sk-slider-control_item:hover .sk-slider-control_item__img[data-v-e00fa402]{transition:all .5s ease-in-out;transform:scale(1.15);font-size:.8rem;box-shadow:0px 0px 10px rgba(0,0,0,.5);z-index:1}.sk-slider-control .sk-slider-control_items .sk-slider-control_item:hover .sk-slider-control_item__text[data-v-e00fa402]{z-index:11}.sk-slider-control .sk-slider-control_items .sk-slider-control_item__img[data-v-e00fa402]{width:306px;height:172px;box-shadow:0px 2px 4px rgba(86,95,106,.22);border-radius:var(--g-radius-lg);object-fit:cover}.sk-slider-control .sk-slider-control_items .sk-slider-control_item__text[data-v-e00fa402]{position:absolute;bottom:0px;left:0;width:100%;display:flex;flex-direction:column;justify-content:center;align-items:flex-start;color:#fff;padding:16px 16px 20px 16px;border-radius:var(--g-radius-lg);font-family:\\\"Ubuntu\\\";font-style:normal;transition:all .3s ease-in-out;background:linear-gradient(180deg, rgba(0, 0, 0, 0) 0%, rgba(0, 0, 0, 0.4823529412) 100%)}.sk-slider-control .sk-slider-control_items .sk-slider-control_item__text .ellipsisClamp[data-v-e00fa402]{display:-webkit-box;-webkit-line-clamp:3;-webkit-box-orient:vertical;overflow:hidden;text-overflow:ellipsis}.sk-slider-control .sk-slider-control_items .sk-slider-control_item__text .clamp-lines-1[data-v-e00fa402]{-webkit-line-clamp:1}.sk-slider-control .sk-slider-control_items .sk-slider-control_item__text b[data-v-e00fa402]{flex:1;display:flex;align-content:flex-start;justify-content:flex-start;align-items:flex-end}.sk-slider-control .sk-slider-control_items .sk-slider-control_item__text p[data-v-e00fa402]{max-height:50px;overflow:hidden}}@media(min-width: 1500px){.sk-slider-control .sk-slider-control_items[data-v-e00fa402]{left:33%;justify-content:space-around}}.control-icon[data-v-e00fa402]{color:var(--g-color-white);width:24px;height:24px}.sk-slider__items[data-v-e00fa402]{z-index:0;display:flex;justify-content:flex-end;flex-direction:column;align-items:flex-start;width:100%;flex:1}@media(min-width: 1024px){.sk-slider__items[data-v-e00fa402]{flex-direction:row;justify-content:flex-start;align-items:center;flex:1;width:100%}}.sk-slider__items .sk-slider__item__content[data-v-e00fa402]{margin-top:100px;padding:0px 15px;z-index:10;position:relative;margin-bottom:30px}@media(min-width: 1024px){.sk-slider__items .sk-slider__item__content[data-v-e00fa402]{padding-left:44px}}@media(min-width: 1600px){.sk-slider__items .sk-slider__item__content[data-v-e00fa402]{transform:translateY(0px);padding-left:7.5%}}@media(max-width: 1023px){.sk-slider__items .sk-slider__item__content[data-v-e00fa402]{margin-top:130px}}.sk-slider__items .sk-slider__item__content .sk-slider__flex[data-v-e00fa402]{display:flex;justify-content:flex-start;align-items:center}.sk-slider__items .sk-slider__item__content .sk-slider__flex .sk-slider__section[data-v-e00fa402]{color:#04122a;margin-right:16px;font-family:\\\"Ubuntu\\\";font-style:normal}.sk-slider__items .sk-slider__item__content .sk-slider__flex .sk-slider__tag[data-v-e00fa402]{border:1px solid #004c97;box-sizing:border-box;border-radius:32px;padding:3px 15px;font-family:\\\"Ubuntu\\\";font-style:normal;color:#004c97}.sk-slider__btn__text[data-v-e00fa402]{font-family:\\\"Ubuntu\\\";font-style:normal;display:flex;align-items:center;text-align:center;color:var(--g-color-white);white-space:nowrap;position:relative}.sk-slider__btn svg[data-v-e00fa402]{width:24px;height:24px;color:var(--g-color-white);margin-left:10px}.sk-slider__btn .sk-slider__link[data-v-e00fa402]{position:absolute;width:100%;height:100%;top:0;left:0}.sk-slider__text[data-v-e00fa402]{font-family:\\\"Ubuntu\\\";font-style:normal;margin:0;color:#3e444a;overflow:hidden}@media(min-width: 1024px){.sk-slider__text[data-v-e00fa402]{max-width:53vw;font-size:24px;line-height:40px}}.sk-slider__title[data-v-e00fa402]{font-family:\\\"Ubuntu\\\";font-style:normal;color:#004c97;margin-top:20px;margin-bottom:30px}@media(min-width: 1024px){.sk-slider__title[data-v-e00fa402]{max-width:57vw}}.dots[data-v-e00fa402]{align-self:center;list-style:none;margin:0;padding:0;display:flex;height:8px;transform:translateY(-8px)}@media(min-width: 1024px){.dots[data-v-e00fa402]{align-self:flex-start}}.dots li[data-v-e00fa402]{margin-right:24px;cursor:pointer;height:8px;position:relative}.dots li .dots__items[data-v-e00fa402]{height:.5em;width:.5em;display:inline-block;background:var(--g-color-light-gray);border-radius:var(--g-radius-sm);cursor:pointer;transition:all 300ms ease;overflow:hidden}.dots li .dots__items span[data-v-e00fa402]{width:8px;height:18px;border-radius:var(-g-radius-full);background-color:var(--g-color-light-gray);transition:background-color .3s ease}@media(min-width: 1024px){.dots li[data-v-e00fa402]{display:none}}.dots li.active[data-v-e00fa402]{display:block}.dots li.active .dots__items[data-v-e00fa402]{height:8px}@media(max-width: 1024px){.dots li.active .dots__items[data-v-e00fa402]{width:60px !important}}.dots li.active .dots__items span[data-v-e00fa402]{display:block;height:.5em;width:0;border-radius:var(--g-radius-sm);background:var(--g-color-1)}.sk-gradient-btn[data-v-e00fa402]{background:var(--gradient);width:fit-content;height:40px;display:flex;align-items:center;margin:40px 0px;border-radius:100px}.sk-gradient-btn a[data-v-e00fa402]{display:inline-flex;padding:8px 18px;align-items:center;justify-content:center}.sk-blob[data-v-e00fa402]{height:40px;width:40px;display:flex;justify-content:center;align-items:center}.ellipsisClamp[data-v-e00fa402]{display:-webkit-box;-webkit-line-clamp:3;-webkit-box-orient:vertical;overflow:hidden;text-overflow:ellipsis}\", \"\"]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n\n\n//# sourceURL=webpack://@skipsolabs/snam-slider/./src/buttons/SkGradientBtn.vue?./node_modules/css-loader/dist/cjs.js??clonedRuleSet-3.use%5B1%5D!./node_modules/vue-loader/dist/stylePostLoader.js!./node_modules/sass-loader/dist/cjs.js??clonedRuleSet-3.use%5B2%5D!./node_modules/vue-loader/dist/index.js??ruleSet%5B0%5D")},150:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  "__esModule": () => (/* reexport */ SkControlvue_type_script_lang_js/* __esModule */.X),\n  "default": () => (/* binding */ SkControl)\n});\n\n// EXTERNAL MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/dist/templateLoader.js??ruleSet[1].rules[2]!./node_modules/vue-loader/dist/index.js??ruleSet[0]!./src/SkControl.vue?vue&type=template&id=08a92f65&scoped=true\nvar SkControlvue_type_template_id_08a92f65_scoped_true = __webpack_require__(820);\n;// CONCATENATED MODULE: ./src/SkControl.vue?vue&type=template&id=08a92f65&scoped=true\n\n// EXTERNAL MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/dist/index.js??ruleSet[0]!./src/SkControl.vue?vue&type=script&lang=js\nvar SkControlvue_type_script_lang_js = __webpack_require__(198);\n;// CONCATENATED MODULE: ./src/SkControl.vue?vue&type=script&lang=js\n \n// EXTERNAL MODULE: ./node_modules/vue-style-loader/index.js!./node_modules/css-loader/dist/cjs.js??clonedRuleSet-3.use[1]!./node_modules/vue-loader/dist/stylePostLoader.js!./node_modules/sass-loader/dist/cjs.js??clonedRuleSet-3.use[2]!./node_modules/vue-loader/dist/index.js??ruleSet[0]!./src/SkControl.vue?vue&type=style&index=0&id=08a92f65&lang=scss&scoped=true\nvar SkControlvue_type_style_index_0_id_08a92f65_lang_scss_scoped_true = __webpack_require__(189);\n;// CONCATENATED MODULE: ./src/SkControl.vue?vue&type=style&index=0&id=08a92f65&lang=scss&scoped=true\n\n// EXTERNAL MODULE: ./node_modules/vue-loader/dist/exportHelper.js\nvar exportHelper = __webpack_require__(21);\n;// CONCATENATED MODULE: ./src/SkControl.vue\n\n\n\n\n;\n\n\nconst __exports__ = /*#__PURE__*/(0,exportHelper/* default */.Z)(SkControlvue_type_script_lang_js/* default */.Z, [[\'render\',SkControlvue_type_template_id_08a92f65_scoped_true/* render */.s],[\'__scopeId\',"data-v-08a92f65"]])\n\n/* harmony default export */ const SkControl = (__exports__);\n\n//# sourceURL=webpack://@skipsolabs/snam-slider/./src/SkControl.vue_+_3_modules?')},145:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  "__esModule": () => (/* reexport */ SkDotsvue_type_script_lang_js/* __esModule */.X),\n  "default": () => (/* binding */ SkDots)\n});\n\n// EXTERNAL MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/dist/templateLoader.js??ruleSet[1].rules[2]!./node_modules/vue-loader/dist/index.js??ruleSet[0]!./src/SkDots.vue?vue&type=template&id=8c515fde&scoped=true\nvar SkDotsvue_type_template_id_8c515fde_scoped_true = __webpack_require__(970);\n;// CONCATENATED MODULE: ./src/SkDots.vue?vue&type=template&id=8c515fde&scoped=true\n\n// EXTERNAL MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/dist/index.js??ruleSet[0]!./src/SkDots.vue?vue&type=script&lang=js\nvar SkDotsvue_type_script_lang_js = __webpack_require__(328);\n;// CONCATENATED MODULE: ./src/SkDots.vue?vue&type=script&lang=js\n \n// EXTERNAL MODULE: ./node_modules/vue-style-loader/index.js!./node_modules/css-loader/dist/cjs.js??clonedRuleSet-3.use[1]!./node_modules/vue-loader/dist/stylePostLoader.js!./node_modules/sass-loader/dist/cjs.js??clonedRuleSet-3.use[2]!./node_modules/vue-loader/dist/index.js??ruleSet[0]!./src/SkDots.vue?vue&type=style&index=0&id=8c515fde&lang=scss&scoped=true\nvar SkDotsvue_type_style_index_0_id_8c515fde_lang_scss_scoped_true = __webpack_require__(368);\n;// CONCATENATED MODULE: ./src/SkDots.vue?vue&type=style&index=0&id=8c515fde&lang=scss&scoped=true\n\n// EXTERNAL MODULE: ./node_modules/vue-loader/dist/exportHelper.js\nvar exportHelper = __webpack_require__(21);\n;// CONCATENATED MODULE: ./src/SkDots.vue\n\n\n\n\n;\n\n\nconst __exports__ = /*#__PURE__*/(0,exportHelper/* default */.Z)(SkDotsvue_type_script_lang_js/* default */.Z, [[\'render\',SkDotsvue_type_template_id_8c515fde_scoped_true/* render */.s],[\'__scopeId\',"data-v-8c515fde"]])\n\n/* harmony default export */ const SkDots = (__exports__);\n\n//# sourceURL=webpack://@skipsolabs/snam-slider/./src/SkDots.vue_+_3_modules?')},78:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  "__esModule": () => (/* reexport */ SkSlidervue_type_script_lang_js/* __esModule */.X),\n  "default": () => (/* binding */ SkSlider)\n});\n\n// EXTERNAL MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/dist/templateLoader.js??ruleSet[1].rules[2]!./node_modules/vue-loader/dist/index.js??ruleSet[0]!./src/SkSlider.vue?vue&type=template&id=40d7eaf8&scoped=true\nvar SkSlidervue_type_template_id_40d7eaf8_scoped_true = __webpack_require__(331);\n;// CONCATENATED MODULE: ./src/SkSlider.vue?vue&type=template&id=40d7eaf8&scoped=true\n\n// EXTERNAL MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/dist/index.js??ruleSet[0]!./src/SkSlider.vue?vue&type=script&lang=js\nvar SkSlidervue_type_script_lang_js = __webpack_require__(516);\n;// CONCATENATED MODULE: ./src/SkSlider.vue?vue&type=script&lang=js\n \n// EXTERNAL MODULE: ./node_modules/vue-style-loader/index.js!./node_modules/css-loader/dist/cjs.js??clonedRuleSet-3.use[1]!./node_modules/vue-loader/dist/stylePostLoader.js!./node_modules/sass-loader/dist/cjs.js??clonedRuleSet-3.use[2]!./node_modules/vue-loader/dist/index.js??ruleSet[0]!./src/SkSlider.vue?vue&type=style&index=0&id=40d7eaf8&lang=scss&scoped=true\nvar SkSlidervue_type_style_index_0_id_40d7eaf8_lang_scss_scoped_true = __webpack_require__(922);\n;// CONCATENATED MODULE: ./src/SkSlider.vue?vue&type=style&index=0&id=40d7eaf8&lang=scss&scoped=true\n\n// EXTERNAL MODULE: ./node_modules/vue-loader/dist/exportHelper.js\nvar exportHelper = __webpack_require__(21);\n;// CONCATENATED MODULE: ./src/SkSlider.vue\n\n\n\n\n;\n\n\nconst __exports__ = /*#__PURE__*/(0,exportHelper/* default */.Z)(SkSlidervue_type_script_lang_js/* default */.Z, [[\'render\',SkSlidervue_type_template_id_40d7eaf8_scoped_true/* render */.s],[\'__scopeId\',"data-v-40d7eaf8"]])\n\n/* harmony default export */ const SkSlider = (__exports__);\n\n//# sourceURL=webpack://@skipsolabs/snam-slider/./src/SkSlider.vue_+_3_modules?')},701:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  "__esModule": () => (/* reexport */ SkSliderItemvue_type_script_lang_js/* __esModule */.X),\n  "default": () => (/* binding */ SkSliderItem)\n});\n\n// EXTERNAL MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/dist/templateLoader.js??ruleSet[1].rules[2]!./node_modules/vue-loader/dist/index.js??ruleSet[0]!./src/SkSliderItem.vue?vue&type=template&id=ac6f3a2c&scoped=true\nvar SkSliderItemvue_type_template_id_ac6f3a2c_scoped_true = __webpack_require__(652);\n;// CONCATENATED MODULE: ./src/SkSliderItem.vue?vue&type=template&id=ac6f3a2c&scoped=true\n\n// EXTERNAL MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/dist/index.js??ruleSet[0]!./src/SkSliderItem.vue?vue&type=script&lang=js\nvar SkSliderItemvue_type_script_lang_js = __webpack_require__(592);\n;// CONCATENATED MODULE: ./src/SkSliderItem.vue?vue&type=script&lang=js\n \n// EXTERNAL MODULE: ./node_modules/vue-style-loader/index.js!./node_modules/css-loader/dist/cjs.js??clonedRuleSet-3.use[1]!./node_modules/vue-loader/dist/stylePostLoader.js!./node_modules/sass-loader/dist/cjs.js??clonedRuleSet-3.use[2]!./node_modules/vue-loader/dist/index.js??ruleSet[0]!./src/SkSliderItem.vue?vue&type=style&index=0&id=ac6f3a2c&lang=scss&scoped=true\nvar SkSliderItemvue_type_style_index_0_id_ac6f3a2c_lang_scss_scoped_true = __webpack_require__(223);\n;// CONCATENATED MODULE: ./src/SkSliderItem.vue?vue&type=style&index=0&id=ac6f3a2c&lang=scss&scoped=true\n\n// EXTERNAL MODULE: ./node_modules/vue-loader/dist/exportHelper.js\nvar exportHelper = __webpack_require__(21);\n;// CONCATENATED MODULE: ./src/SkSliderItem.vue\n\n\n\n\n;\n\n\nconst __exports__ = /*#__PURE__*/(0,exportHelper/* default */.Z)(SkSliderItemvue_type_script_lang_js/* default */.Z, [[\'render\',SkSliderItemvue_type_template_id_ac6f3a2c_scoped_true/* render */.s],[\'__scopeId\',"data-v-ac6f3a2c"]])\n\n/* harmony default export */ const SkSliderItem = (__exports__);\n\n//# sourceURL=webpack://@skipsolabs/snam-slider/./src/SkSliderItem.vue_+_3_modules?')},769:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  "__esModule": () => (/* reexport */ SkGradientBtnvue_type_script_lang_js/* __esModule */.X),\n  "default": () => (/* binding */ SkGradientBtn)\n});\n\n// EXTERNAL MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/dist/templateLoader.js??ruleSet[1].rules[2]!./node_modules/vue-loader/dist/index.js??ruleSet[0]!./src/buttons/SkGradientBtn.vue?vue&type=template&id=e00fa402&scoped=true\nvar SkGradientBtnvue_type_template_id_e00fa402_scoped_true = __webpack_require__(227);\n;// CONCATENATED MODULE: ./src/buttons/SkGradientBtn.vue?vue&type=template&id=e00fa402&scoped=true\n\n// EXTERNAL MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/dist/index.js??ruleSet[0]!./src/buttons/SkGradientBtn.vue?vue&type=script&lang=js\nvar SkGradientBtnvue_type_script_lang_js = __webpack_require__(340);\n;// CONCATENATED MODULE: ./src/buttons/SkGradientBtn.vue?vue&type=script&lang=js\n \n// EXTERNAL MODULE: ./node_modules/vue-style-loader/index.js!./node_modules/css-loader/dist/cjs.js??clonedRuleSet-3.use[1]!./node_modules/vue-loader/dist/stylePostLoader.js!./node_modules/sass-loader/dist/cjs.js??clonedRuleSet-3.use[2]!./node_modules/vue-loader/dist/index.js??ruleSet[0]!./src/buttons/SkGradientBtn.vue?vue&type=style&index=0&id=e00fa402&lang=scss&scoped=true\nvar SkGradientBtnvue_type_style_index_0_id_e00fa402_lang_scss_scoped_true = __webpack_require__(668);\n;// CONCATENATED MODULE: ./src/buttons/SkGradientBtn.vue?vue&type=style&index=0&id=e00fa402&lang=scss&scoped=true\n\n// EXTERNAL MODULE: ./node_modules/vue-loader/dist/exportHelper.js\nvar exportHelper = __webpack_require__(21);\n;// CONCATENATED MODULE: ./src/buttons/SkGradientBtn.vue\n\n\n\n\n;\n\n\nconst __exports__ = /*#__PURE__*/(0,exportHelper/* default */.Z)(SkGradientBtnvue_type_script_lang_js/* default */.Z, [[\'render\',SkGradientBtnvue_type_template_id_e00fa402_scoped_true/* render */.s],[\'__scopeId\',"data-v-e00fa402"]])\n\n/* harmony default export */ const SkGradientBtn = (__exports__);\n\n//# sourceURL=webpack://@skipsolabs/snam-slider/./src/buttons/SkGradientBtn.vue_+_3_modules?')},258:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  "__esModule": () => (/* reexport */ BIconArrowLeftvue_type_script_lang_js/* __esModule */.X),\n  "default": () => (/* binding */ BIconArrowLeft)\n});\n\n// EXTERNAL MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/dist/templateLoader.js??ruleSet[1].rules[2]!./node_modules/vue-loader/dist/index.js??ruleSet[0]!./src/icons/BIconArrowLeft.vue?vue&type=template&id=50646f8c\nvar BIconArrowLeftvue_type_template_id_50646f8c = __webpack_require__(760);\n;// CONCATENATED MODULE: ./src/icons/BIconArrowLeft.vue?vue&type=template&id=50646f8c\n\n// EXTERNAL MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/dist/index.js??ruleSet[0]!./src/icons/BIconArrowLeft.vue?vue&type=script&lang=js\nvar BIconArrowLeftvue_type_script_lang_js = __webpack_require__(481);\n;// CONCATENATED MODULE: ./src/icons/BIconArrowLeft.vue?vue&type=script&lang=js\n \n// EXTERNAL MODULE: ./node_modules/vue-loader/dist/exportHelper.js\nvar exportHelper = __webpack_require__(21);\n;// CONCATENATED MODULE: ./src/icons/BIconArrowLeft.vue\n\n\n\n\n;\nconst __exports__ = /*#__PURE__*/(0,exportHelper/* default */.Z)(BIconArrowLeftvue_type_script_lang_js/* default */.Z, [[\'render\',BIconArrowLeftvue_type_template_id_50646f8c/* render */.s]])\n\n/* harmony default export */ const BIconArrowLeft = (__exports__);\n\n//# sourceURL=webpack://@skipsolabs/snam-slider/./src/icons/BIconArrowLeft.vue_+_2_modules?')},514:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  "__esModule": () => (/* reexport */ BIconArrowRightvue_type_script_lang_js/* __esModule */.X),\n  "default": () => (/* binding */ BIconArrowRight)\n});\n\n// EXTERNAL MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/dist/templateLoader.js??ruleSet[1].rules[2]!./node_modules/vue-loader/dist/index.js??ruleSet[0]!./src/icons/BIconArrowRight.vue?vue&type=template&id=ba8c77b6\nvar BIconArrowRightvue_type_template_id_ba8c77b6 = __webpack_require__(376);\n;// CONCATENATED MODULE: ./src/icons/BIconArrowRight.vue?vue&type=template&id=ba8c77b6\n\n// EXTERNAL MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/dist/index.js??ruleSet[0]!./src/icons/BIconArrowRight.vue?vue&type=script&lang=js\nvar BIconArrowRightvue_type_script_lang_js = __webpack_require__(433);\n;// CONCATENATED MODULE: ./src/icons/BIconArrowRight.vue?vue&type=script&lang=js\n \n// EXTERNAL MODULE: ./node_modules/vue-loader/dist/exportHelper.js\nvar exportHelper = __webpack_require__(21);\n;// CONCATENATED MODULE: ./src/icons/BIconArrowRight.vue\n\n\n\n\n;\nconst __exports__ = /*#__PURE__*/(0,exportHelper/* default */.Z)(BIconArrowRightvue_type_script_lang_js/* default */.Z, [[\'render\',BIconArrowRightvue_type_template_id_ba8c77b6/* render */.s]])\n\n/* harmony default export */ const BIconArrowRight = (__exports__);\n\n//# sourceURL=webpack://@skipsolabs/snam-slider/./src/icons/BIconArrowRight.vue_+_2_modules?')},137:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  "__esModule": () => (/* reexport */ BIconPausevue_type_script_lang_js/* __esModule */.X),\n  "default": () => (/* binding */ BIconPause)\n});\n\n// EXTERNAL MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/dist/templateLoader.js??ruleSet[1].rules[2]!./node_modules/vue-loader/dist/index.js??ruleSet[0]!./src/icons/BIconPause.vue?vue&type=template&id=4eff1e22\nvar BIconPausevue_type_template_id_4eff1e22 = __webpack_require__(609);\n;// CONCATENATED MODULE: ./src/icons/BIconPause.vue?vue&type=template&id=4eff1e22\n\n// EXTERNAL MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/dist/index.js??ruleSet[0]!./src/icons/BIconPause.vue?vue&type=script&lang=js\nvar BIconPausevue_type_script_lang_js = __webpack_require__(210);\n;// CONCATENATED MODULE: ./src/icons/BIconPause.vue?vue&type=script&lang=js\n \n// EXTERNAL MODULE: ./node_modules/vue-loader/dist/exportHelper.js\nvar exportHelper = __webpack_require__(21);\n;// CONCATENATED MODULE: ./src/icons/BIconPause.vue\n\n\n\n\n;\nconst __exports__ = /*#__PURE__*/(0,exportHelper/* default */.Z)(BIconPausevue_type_script_lang_js/* default */.Z, [[\'render\',BIconPausevue_type_template_id_4eff1e22/* render */.s]])\n\n/* harmony default export */ const BIconPause = (__exports__);\n\n//# sourceURL=webpack://@skipsolabs/snam-slider/./src/icons/BIconPause.vue_+_2_modules?')},292:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  "__esModule": () => (/* reexport */ BIconPlayFillvue_type_script_lang_js/* __esModule */.X),\n  "default": () => (/* binding */ BIconPlayFill)\n});\n\n// EXTERNAL MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/dist/templateLoader.js??ruleSet[1].rules[2]!./node_modules/vue-loader/dist/index.js??ruleSet[0]!./src/icons/BIconPlayFill.vue?vue&type=template&id=259b5f68\nvar BIconPlayFillvue_type_template_id_259b5f68 = __webpack_require__(380);\n;// CONCATENATED MODULE: ./src/icons/BIconPlayFill.vue?vue&type=template&id=259b5f68\n\n// EXTERNAL MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/dist/index.js??ruleSet[0]!./src/icons/BIconPlayFill.vue?vue&type=script&lang=js\nvar BIconPlayFillvue_type_script_lang_js = __webpack_require__(682);\n;// CONCATENATED MODULE: ./src/icons/BIconPlayFill.vue?vue&type=script&lang=js\n \n// EXTERNAL MODULE: ./node_modules/vue-loader/dist/exportHelper.js\nvar exportHelper = __webpack_require__(21);\n;// CONCATENATED MODULE: ./src/icons/BIconPlayFill.vue\n\n\n\n\n;\nconst __exports__ = /*#__PURE__*/(0,exportHelper/* default */.Z)(BIconPlayFillvue_type_script_lang_js/* default */.Z, [[\'render\',BIconPlayFillvue_type_template_id_259b5f68/* render */.s]])\n\n/* harmony default export */ const BIconPlayFill = (__exports__);\n\n//# sourceURL=webpack://@skipsolabs/snam-slider/./src/icons/BIconPlayFill.vue_+_2_modules?')},189:(module,__unused_webpack_exports,__webpack_require__)=>{eval("// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(690);\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = (__webpack_require__(23)/* [\"default\"] */ .Z)\nvar update = add(\"2a929945\", content, false, {});\n// Hot Module Replacement\nif(false) {}\n\n//# sourceURL=webpack://@skipsolabs/snam-slider/./src/SkControl.vue?./node_modules/vue-style-loader/index.js!./node_modules/css-loader/dist/cjs.js??clonedRuleSet-3.use%5B1%5D!./node_modules/vue-loader/dist/stylePostLoader.js!./node_modules/sass-loader/dist/cjs.js??clonedRuleSet-3.use%5B2%5D!./node_modules/vue-loader/dist/index.js??ruleSet%5B0%5D")},368:(module,__unused_webpack_exports,__webpack_require__)=>{eval("// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(388);\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = (__webpack_require__(23)/* [\"default\"] */ .Z)\nvar update = add(\"121d483b\", content, false, {});\n// Hot Module Replacement\nif(false) {}\n\n//# sourceURL=webpack://@skipsolabs/snam-slider/./src/SkDots.vue?./node_modules/vue-style-loader/index.js!./node_modules/css-loader/dist/cjs.js??clonedRuleSet-3.use%5B1%5D!./node_modules/vue-loader/dist/stylePostLoader.js!./node_modules/sass-loader/dist/cjs.js??clonedRuleSet-3.use%5B2%5D!./node_modules/vue-loader/dist/index.js??ruleSet%5B0%5D")},922:(module,__unused_webpack_exports,__webpack_require__)=>{eval("// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(181);\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = (__webpack_require__(23)/* [\"default\"] */ .Z)\nvar update = add(\"a982cef6\", content, false, {});\n// Hot Module Replacement\nif(false) {}\n\n//# sourceURL=webpack://@skipsolabs/snam-slider/./src/SkSlider.vue?./node_modules/vue-style-loader/index.js!./node_modules/css-loader/dist/cjs.js??clonedRuleSet-3.use%5B1%5D!./node_modules/vue-loader/dist/stylePostLoader.js!./node_modules/sass-loader/dist/cjs.js??clonedRuleSet-3.use%5B2%5D!./node_modules/vue-loader/dist/index.js??ruleSet%5B0%5D")},223:(module,__unused_webpack_exports,__webpack_require__)=>{eval("// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(134);\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = (__webpack_require__(23)/* [\"default\"] */ .Z)\nvar update = add(\"462cdad7\", content, false, {});\n// Hot Module Replacement\nif(false) {}\n\n//# sourceURL=webpack://@skipsolabs/snam-slider/./src/SkSliderItem.vue?./node_modules/vue-style-loader/index.js!./node_modules/css-loader/dist/cjs.js??clonedRuleSet-3.use%5B1%5D!./node_modules/vue-loader/dist/stylePostLoader.js!./node_modules/sass-loader/dist/cjs.js??clonedRuleSet-3.use%5B2%5D!./node_modules/vue-loader/dist/index.js??ruleSet%5B0%5D")},668:(module,__unused_webpack_exports,__webpack_require__)=>{eval("// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(894);\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = (__webpack_require__(23)/* [\"default\"] */ .Z)\nvar update = add(\"66698b30\", content, false, {});\n// Hot Module Replacement\nif(false) {}\n\n//# sourceURL=webpack://@skipsolabs/snam-slider/./src/buttons/SkGradientBtn.vue?./node_modules/vue-style-loader/index.js!./node_modules/css-loader/dist/cjs.js??clonedRuleSet-3.use%5B1%5D!./node_modules/vue-loader/dist/stylePostLoader.js!./node_modules/sass-loader/dist/cjs.js??clonedRuleSet-3.use%5B2%5D!./node_modules/vue-loader/dist/index.js??ruleSet%5B0%5D")},23:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"Z\": () => (/* binding */ addStylesClient)\n});\n\n;// CONCATENATED MODULE: ./node_modules/vue-style-loader/lib/listToStyles.js\n/**\n * Translates the list format produced by css-loader into something\n * easier to manipulate.\n */\nfunction listToStyles(parentId, list) {\n  var styles = [];\n  var newStyles = {};\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = item[0];\n    var css = item[1];\n    var media = item[2];\n    var sourceMap = item[3];\n    var part = {\n      id: parentId + ':' + i,\n      css: css,\n      media: media,\n      sourceMap: sourceMap\n    };\n\n    if (!newStyles[id]) {\n      styles.push(newStyles[id] = {\n        id: id,\n        parts: [part]\n      });\n    } else {\n      newStyles[id].parts.push(part);\n    }\n  }\n\n  return styles;\n}\n;// CONCATENATED MODULE: ./node_modules/vue-style-loader/lib/addStylesClient.js\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n  Modified by Evan You @yyx990803\n*/\n\n\n\nvar hasDocument = typeof document !== 'undefined'\n\nif (typeof DEBUG !== 'undefined' && DEBUG) {\n  if (!hasDocument) {\n    throw new Error(\n    'vue-style-loader cannot be used in a non-browser environment. ' +\n    \"Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.\"\n  ) }\n}\n\n/*\ntype StyleObject = {\n  id: number;\n  parts: Array<StyleObjectPart>\n}\n\ntype StyleObjectPart = {\n  css: string;\n  media: string;\n  sourceMap: ?string\n}\n*/\n\nvar stylesInDom = {/*\n  [id: number]: {\n    id: number,\n    refs: number,\n    parts: Array<(obj?: StyleObjectPart) => void>\n  }\n*/}\n\nvar head = hasDocument && (document.head || document.getElementsByTagName('head')[0])\nvar singletonElement = null\nvar singletonCounter = 0\nvar isProduction = false\nvar noop = function () {}\nvar options = null\nvar ssrIdKey = 'data-vue-ssr-id'\n\n// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n// tags it will allow on a page\nvar isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase())\n\nfunction addStylesClient (parentId, list, _isProduction, _options) {\n  isProduction = _isProduction\n\n  options = _options || {}\n\n  var styles = listToStyles(parentId, list)\n  addStylesToDom(styles)\n\n  return function update (newList) {\n    var mayRemove = []\n    for (var i = 0; i < styles.length; i++) {\n      var item = styles[i]\n      var domStyle = stylesInDom[item.id]\n      domStyle.refs--\n      mayRemove.push(domStyle)\n    }\n    if (newList) {\n      styles = listToStyles(parentId, newList)\n      addStylesToDom(styles)\n    } else {\n      styles = []\n    }\n    for (var i = 0; i < mayRemove.length; i++) {\n      var domStyle = mayRemove[i]\n      if (domStyle.refs === 0) {\n        for (var j = 0; j < domStyle.parts.length; j++) {\n          domStyle.parts[j]()\n        }\n        delete stylesInDom[domStyle.id]\n      }\n    }\n  }\n}\n\nfunction addStylesToDom (styles /* Array<StyleObject> */) {\n  for (var i = 0; i < styles.length; i++) {\n    var item = styles[i]\n    var domStyle = stylesInDom[item.id]\n    if (domStyle) {\n      domStyle.refs++\n      for (var j = 0; j < domStyle.parts.length; j++) {\n        domStyle.parts[j](item.parts[j])\n      }\n      for (; j < item.parts.length; j++) {\n        domStyle.parts.push(addStyle(item.parts[j]))\n      }\n      if (domStyle.parts.length > item.parts.length) {\n        domStyle.parts.length = item.parts.length\n      }\n    } else {\n      var parts = []\n      for (var j = 0; j < item.parts.length; j++) {\n        parts.push(addStyle(item.parts[j]))\n      }\n      stylesInDom[item.id] = { id: item.id, refs: 1, parts: parts }\n    }\n  }\n}\n\nfunction createStyleElement () {\n  var styleElement = document.createElement('style')\n  styleElement.type = 'text/css'\n  head.appendChild(styleElement)\n  return styleElement\n}\n\nfunction addStyle (obj /* StyleObjectPart */) {\n  var update, remove\n  var styleElement = document.querySelector('style[' + ssrIdKey + '~=\"' + obj.id + '\"]')\n\n  if (styleElement) {\n    if (isProduction) {\n      // has SSR styles and in production mode.\n      // simply do nothing.\n      return noop\n    } else {\n      // has SSR styles but in dev mode.\n      // for some reason Chrome can't handle source map in server-rendered\n      // style tags - source maps in <style> only works if the style tag is\n      // created and inserted dynamically. So we remove the server rendered\n      // styles and inject new ones.\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  if (isOldIE) {\n    // use singleton mode for IE9.\n    var styleIndex = singletonCounter++\n    styleElement = singletonElement || (singletonElement = createStyleElement())\n    update = applyToSingletonTag.bind(null, styleElement, styleIndex, false)\n    remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true)\n  } else {\n    // use multi-style-tag mode in all other cases\n    styleElement = createStyleElement()\n    update = applyToTag.bind(null, styleElement)\n    remove = function () {\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  update(obj)\n\n  return function updateStyle (newObj /* StyleObjectPart */) {\n    if (newObj) {\n      if (newObj.css === obj.css &&\n          newObj.media === obj.media &&\n          newObj.sourceMap === obj.sourceMap) {\n        return\n      }\n      update(obj = newObj)\n    } else {\n      remove()\n    }\n  }\n}\n\nvar replaceText = (function () {\n  var textStore = []\n\n  return function (index, replacement) {\n    textStore[index] = replacement\n    return textStore.filter(Boolean).join('\\n')\n  }\n})()\n\nfunction applyToSingletonTag (styleElement, index, remove, obj) {\n  var css = remove ? '' : obj.css\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = replaceText(index, css)\n  } else {\n    var cssNode = document.createTextNode(css)\n    var childNodes = styleElement.childNodes\n    if (childNodes[index]) styleElement.removeChild(childNodes[index])\n    if (childNodes.length) {\n      styleElement.insertBefore(cssNode, childNodes[index])\n    } else {\n      styleElement.appendChild(cssNode)\n    }\n  }\n}\n\nfunction applyToTag (styleElement, obj) {\n  var css = obj.css\n  var media = obj.media\n  var sourceMap = obj.sourceMap\n\n  if (media) {\n    styleElement.setAttribute('media', media)\n  }\n  if (options.ssrId) {\n    styleElement.setAttribute(ssrIdKey, obj.id)\n  }\n\n  if (sourceMap) {\n    // https://developer.chrome.com/devtools/docs/javascript-debugging\n    // this makes source maps inside style tags work properly in Chrome\n    css += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */'\n    // http://stackoverflow.com/a/26603875\n    css += '\\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + ' */'\n  }\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild)\n    }\n    styleElement.appendChild(document.createTextNode(css))\n  }\n}\n\n\n//# sourceURL=webpack://@skipsolabs/snam-slider/./node_modules/vue-style-loader/lib/addStylesClient.js_+_1_modules?")}},__webpack_module_cache__={};function __webpack_require__(e){var n=__webpack_module_cache__[e];if(void 0!==n)return n.exports;var t=__webpack_module_cache__[e]={id:e,exports:{}};return __webpack_modules__[e](t,t.exports,__webpack_require__),t.exports}__webpack_require__.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return __webpack_require__.d(n,{a:n}),n},__webpack_require__.d=(e,n)=>{for(var t in n)__webpack_require__.o(n,t)&&!__webpack_require__.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:n[t]})},__webpack_require__.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),__webpack_require__.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),__webpack_require__.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var __webpack_exports__=__webpack_require__(939)})();